<?xml version="1.0" encoding="utf-8" ?>
<Templates>
	<sql id="A_AgentLogin">
		<![CDATA[
			----------------------------------------------------------------
			  --用户登录判断
			----------------------------------------------------------------
			--传入的变量
			declare @LogName nvarchar(40)
			declare @LogPwd nvarchar(200)
			declare @CreateID nvarchar(40)
			declare @IsSub nvarchar(40)
			--判断登录账号长度
			declare @lenth  int
			declare @state nvarchar(40)

			set @LogName = '${LogName}'
			set @LogPwd = '${LogPwd}'
			set @IsSub = '0'
			set @lenth = len(@LogName)
			
			--代理登录
			if(@lenth = 6 or @lenth = 7)
			begin	
				select @state = ISNULL(State,'0') FROM T_Agent WHERE LogName = @LogName	
				if(@state = '0')
					begin
						raiserror('登录名或密码错误！', 16, 1)
						return  
					 end
				if(@state = 'NO')
					begin
						raiserror('此账号已经锁定，不能登录！', 16, 1)
						return  
					 end
				if(@state = 'PAUSE')
					begin
						set @IsSub = '1'  
					 end
				SELECT 
					AgentID A_ID
					,LogName  A_UserID
					,AgentName A_Name
					,ParentID A_PID
					,State  A_State
					, @IsSub AS A_Sub
					,Max_Z A_MX_Z
					,Min_Z A_MN_Z
					,Max_X A_MX_X
					,Min_X A_MN_X
					,Max_H A_MX_H
					,Min_H A_MN_H
					,Max_ZD A_MX_ZD
					,Min_ZD A_MN_ZD
					,Max_XD A_MX_XD
					,Min_XD A_MN_XD
					,Principal A_Prncpl
					,IntoRate A_IntoR
					,DrawRate A_DrawR
					,WashType A_WashT
					,WashRate A_WashR
					,F_3 A_Perm
					,(select top 1  b.LogName from T_Cfg a ,T_Agent b where Name='H5_ManageID' and a.Value = b.AgentID) A_H5CashMger
				FROM T_Agent WHERE LogName = @LogName AND Pwd = @LogPwd
			end
			if(@lenth = 5)
			begin	
				select @state = ISNULL(State,'0') FROM T_AgentSub WHERE LogName = @LogName	
				if(@state = '0')
					begin
						raiserror('登录名或密码错误！', 16, 1)
						return  
					 end
				if(@state = 'NO')
					begin
						raiserror('此账号已经锁定，不能登录！', 16, 1)
						return  
					 end	
				set @IsSub = '1'		
				SELECT 
					AgentID as A_PID 
					,LogName A_UserID
					, AgentSubName as A_Name
					,AgentSubID as A_ID
					,State A_State
					, '1' AS A_Sub
					,0 as A_MX_Z
					,0 as A_MN_Z
					,0 as A_MX_X
					,0 as A_MN_X
					,0 as A_MX_H
					,0 as A_MN_H
					,0 as A_MX_ZD
					,0 as A_MN_ZD
					,0 as A_MX_XD
					,0 as A_MN_XD
					,0 as A_IntoR
					,0 as A_DrawR
					,'0' as A_WashT
					,0 as A_WashR
					,(select top 1  b.LogName from T_Cfg a ,T_Agent b where Name='H5_ManageID' and a.Value = b.AgentID) A_H5CashMger
				FROM T_AgentSub WHERE LogName = @LogName  AND Pwd = @LogPwd
			end
		]]>
	</sql>

	<sql id="A_GetAgentBetData_Current_New">
		<![CDATA[			
			--取某个代理 当前 下单数据
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			-- 内部变量
			declare @lastDayDate nvarchar(10)
			declare @A nvarchar(20)
			declare @B nvarchar(20)

			-- 初始化变量
			set @AgentID ='${AgentID}'

			--日期判断
			select @A = convert(varchar(20),getdate(),120)  --当前时间
			select @B = convert(varchar(11),getdate(),120) + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			if (@A >= @B) --如果当前时间大于今天归档时间，则取当天日期，否则取昨天日期
			begin
				select @lastDayDate = convert(varchar(11),getdate(),120)  --当天
			end else 
			begin
				select @lastDayDate = convert(varchar(11),getdate()-1,120)  --前一天
			end

			set @StartDate = @lastDayDate
			set @EndDate = @lastDayDate
			
			;WITH AgentCTE (AgentID, ParentID, Level, Principal )AS(
				SELECT a.AgentID, a.ParentID, 0, a.Principal FROM T_Agent a where a .AgentID = @agentID
				UNION ALL
				SELECT a.AgentID, a.ParentID,  cte.Level+1,a.Principal FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
			)
			select a.AgentID, a.ParentID, a.Level, cast(a.Principal as numeric(20,0)) Principal,
				(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c where c.AgentID = a.AgentID) as Balance, 
				CAST(0 as numeric(20,4)) as AvaialablePoint into #Agent from AgentCTE a;

			DECLARE @Level int;
			select @Level = max(Level) from #Agent;

			while (@Level>=0) begin
				update #Agent  set #Agent.AvaialablePoint = isnull(#Agent.Principal,0) + isnull(#Agent.Balance,0)  +
					isnull((select sum(isnull(b.AvaialablePoint,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0)
				where #Agent.level = @Level
				set @Level = @Level -1
			end;

			select 
				 AgentID A_ID
				,sum(WinSum) as A_TotalWin    --总输赢
				,sum(a.WashFee) as A_WashF  --洗码费
				,sum(a.CompanyAmount) as A_CmpyMony --公司金额
				,sum(a.AgentAmount) as A_Mony     --代理金额
				,sum(BetSum) as A_BetS         --总下注
				,sum(BetSumAct) as A_BetSAct   --实际下注
				,sum(a.WashSum) as A_WashS       --洗码量
				,CAST(0 as numeric(18,4)) as A_Charge     --上分
				,CAST(0 as numeric(18,4)) as A_Cash --下分
				,sum(TipSum) as A_TipSum   --小费
				,sum(DrawFee) as A_DrawF  --和局费
				,sum(DrawSum) as A_DrawS --和局量
				,sum(Wash_Z) as A_WashS_Z   
				,SUM(a.ChouShui) A_TotalOdds
			into #feeTemp
			from T_BetBill_Wash a,T_BetBill b
			where a.AgentID = @AgentID  and a.BillID = b.BillID and b.StatisticsDay between @StartDate and @EndDate
			group by a.AgentID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select 
				 AgentID A_ID
				,sum(WinSum) as A_TotalWin    --总输赢
				,sum(a.WashFee) as A_WashF  --洗码费
				,sum(a.CompanyAmount) as A_CmpyMony --公司金额
				,sum(a.AgentAmount) as A_Mony     --代理金额
				,sum(BetSum) as A_BetS         --总下注
				,sum(BetSumAct) as A_BetSAct   --实际下注
				,sum(a.WashSum) as A_WashS       --洗码量
				,CAST(0 as numeric(18,4)) as A_Charge     --上分
				,CAST(0 as numeric(18,4)) as A_Cash --下分
				,sum(TipSum) as A_TipSum   --小费
				,sum(DrawFee) as A_DrawF  --和局费
				,sum(DrawSum) as A_DrawS --和局量
				,sum(Wash_Z) as A_WashS_Z   
				,SUM(a.ChouShui) A_TotalOdds
			from T_BetBill_Wash_Archive a,T_BetBill_Archive b
			where a.AgentID = @AgentID  and a.BillID = b.BillID and b.StatisticsDay between @StartDate and @EndDate
			group by a.AgentID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				TargetID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,SUM(Delta) A_Charge
				,CAST(0 as numeric(18,4)) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point 
			where TargetID= @AgentID and OperationType='BD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by TargetID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				TargetID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,SUM(Delta) A_Charge
				,CAST(0 as numeric(18,4)) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point_Archive (nolock) 
			where TargetID= @AgentID and OperationType='BD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by TargetID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				SourceID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,SUM(Delta) A_Charge
				,CAST(0 as numeric(18,4)) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point
			where SourceID= @AgentID and OperationType='XD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by SourceID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				SourceID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,SUM(Delta) A_Charge
				,CAST(0 as numeric(18,4)) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point_Archive (nolock)
			where SourceID= @AgentID and OperationType='XD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by SourceID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				TargetID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,CAST(0 as numeric(18,4)) A_Charge
				,SUM(Delta) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point
			where TargetID= @AgentID and OperationType='XD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by TargetID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				TargetID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,CAST(0 as numeric(18,4)) A_Charge
				,SUM(Delta) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point_Archive (nolock)
			where TargetID= @AgentID and OperationType='XD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by TargetID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				SourceID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,CAST(0 as numeric(18,4)) A_Charge
				,SUM(Delta) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point
			where SourceID = @AgentID and OperationType='BD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by SourceID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				SourceID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,CAST(0 as numeric(18,4)) A_Charge
				,SUM(Delta) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point_Archive (nolock)
			where SourceID = @AgentID and OperationType='BD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by SourceID

			select 
				A_ID
				,SUM(A_TotalWin) A_TotalWin
				,SUM(A_WashF) A_WashF
				,SUM(A_CmpyMony) A_CmpyMony
				,SUM(A_Mony) A_Mony
				,SUM(A_BetS) A_BetS
				,SUM(A_BetSAct) A_BetSAct
				,SUM(A_WashS) A_WashS
				,SUM(A_Charge) A_Charge
				,SUM(A_Cash) A_Cash
				,SUM(A_TipSum) A_TipSum
				,SUM(A_DrawF) A_DrawF
				,SUM(A_DrawS) A_DrawS
				,SUM(A_WashS_Z) A_WashS_Z
				,SUM(A_TotalOdds) A_TotalOdds
			into #sumFeeTemp
			from #feeTemp group by A_ID

			--计算未结抽水
			select 
				SUM(a.ChouShui) ChouShui
			into #COd_No
			from T_BetBill_Wash a
			where a.AgentID =@AgentID and (a.OddsBillID is null or a.OddsBillID ='')

			insert #COd_No

			select 
				SUM(a.ChouShui) ChouShui
			from T_BetBill_Wash_Archive a
			where a.AgentID =@AgentID and (a.OddsBillID is null or a.OddsBillID ='')


			select SUM(ChouShui) as A_TotalOdds into #CTod_No  from #COd_No

			--计算未结算洗码费
			select 
				SUM(a.WashFee) WashF
				,SUM(a.WashSum) WashS
			into #Cwf_No
			from T_BetBill_Wash a
			where a.AgentID = @AgentID and (a.WashBillID is null or a.WashBillID ='') 

			insert #Cwf_No

			select 
				SUM(a.WashFee) WashF
				,SUM(a.WashSum) WashS
			from T_BetBill_Wash_Archive a 
			where a.AgentID = @AgentID and (a.WashBillID is null or a.WashBillID ='')
			group by a.AgentID 

			select SUM(WashF) as WashF,SUM(WashS) as WashS into #CTwf_No  from #Cwf_No

			select 
				a.AgentID A_ID
				,a.LogName A_UserID
				,a.AgentName A_Name
				,a.DrawRate A_DrawR
				,a.IntoRate A_IntoR
				,a.WashRate A_WashR
				,ISNULL(a.Principal,0) A_Prncpl
				,ISNULL(b.A_BetS,0) A_BetS
				,ISNULL(b.A_BetSAct,0) A_BetSAct
				,ISNULL(b.A_Cash,0) A_Cash
				,ISNULL(b.A_Charge,0) A_Charge
				,ISNULL(b.A_CmpyMony,0) A_CmpyMony
				,ISNULL(b.A_DrawF,0) A_DrawF
				,ISNULL(b.A_DrawS,0) A_DrawS
				,ISNULL(b.A_Mony,0) A_Mony
				,ISNULL(b.A_TipSum,0) A_TipSum
				,ISNULL(b.A_TotalOdds,0) A_TotalOdds
				,ISNULL(b.A_TotalWin,0) A_TotalWin
				,ISNULL(b.A_WashF,0) A_WashF
				,ISNULL(b.A_WashS,0) A_WashS
				,ISNULL(b.A_WashS_Z,0) A_WashS_Z
				,(select COUNT(*) from T_Client where AgentID = @AgentID and IsHide = 'FALSE') A_ClntSum
				,ISNULL((select AvaialablePoint from #Agent where AgentID = @AgentID),0) A_AblePoint
				,ISNULL((select A_TotalOdds from #CTod_No),0) A_TotalOdds_No
				,ISNULL((select WashF from #CTwf_No),0) A_WashF_No
				,ISNULL((select WashS from #CTwf_No),0) A_WashS_No
			from T_Agent a left join #sumFeeTemp b on a.AgentID = b.A_ID
			where a.AgentID = @AgentID  

			drop table #Agent
			drop table #feeTemp
			drop table #COd_No
			drop table #CTod_No
			drop table #CTwf_No
			drop table #Cwf_No
			drop table #sumFeeTemp
		]]>
	</sql>

	<sql id="A_GetClientUseInfo">
		<![CDATA[
			-- 指定代理下会员在线情况
			declare @A nvarchar(20)
			declare @B nvarchar(20)
			declare @C nvarchar(20)
			select @A = convert(varchar(20),getdate(),120)
			select @B = convert(varchar(11),getdate(),120) + value from t_cfg where name = 'Use_WORKTIME_START'
			if (@A >= @B) 
			begin
			   select @C = convert(varchar(11),getdate(),120) + value from t_cfg where name = 'Use_WORKTIME_START'
			end else 
			begin
			   select @C = convert(varchar(11),getdate()-1,120) + value from t_cfg where name = 'Use_WORKTIME_START'
			end
			
			declare @onlineCount int
			
			select @onlineCount= count(distinct L.LoginID) from T_LoginHis L left join T_Client C on L.LoginID = C.ClientID 
			where C.AgentID = '${AgentID}' and L.LoginType = 'Client' and L.LoginTime >= @C
			
			select 
				distinct L.ClientID C_ID
				,C.LogName C_UserID
				,C.ClientName C_Name
				,c.Balance C_Balnc
				,L.LoginTime C_LoginTime
				,L.IP C_IP
				,L.Address C_Addr
				,t.TableName C_TableN
				,@onlineCount C_OnlineCount --在线会员总数
			from T_ClientOnLine L left join 
			T_Client C on L.ClientID = C.ClientID 
			left join T_Table t on l.TableID = t.TableID
			where C.AgentID = '${AgentID}' and  L.ClientType = 'Client'	and L.LoginTime >= @C
		]]>
	</sql>

	<sql id="LoginACount">
		<![CDATA[
			--指定代理指定时段统计数据
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID = '${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate = '${EndDate}'

			select
				AgentID A_ID
				,LogName A_UserID
				,AgentName A_Name
				,WinSum A_TotalWin
				,WashFee A_WashF
				,WashSum A_WashS
				,DrawSum A_DrawS
				,(DrawSum*DrawRate) A_DrawF
				,CompanySum A_CmpSum
				,AgentSum A_Money
				,BetSum A_Bets
				,BetSumAct A_BetSAct
				,CreateDate A_Date
				,0 A_Amount3B
			 into #LoginACnt
			 from V_Agent_Days_Query
			 where AgentID= @AgentID and CreateDate between @StartDate and @EndDate

			 insert #LoginACnt

			 select 
				AgentID3Bao A_ID
				,b.LogName A_UserID
				,b.AgentName A_Name
				,0 A_TotalWin
				,0 A_WashF
				,0 A_WashS
				,0 A_DrawS
				,0 A_DrawF
				,0 A_CmpSum
				,0 A_Money
				,0 A_Bets
				,0 A_BetSAct
				,StatisticsDay A_Date
				,SUM(ISNULL(Amount3Bao,0) ) A_Amount3B
			from T_WeiTou_BillWash a left join T_Agent b on a.AgentID3Bao = b.AgentID
			where AgentID3Bao = @AgentID and StatisticsDay between @StartDate and @EndDate
			group by AgentID3Bao,StatisticsDay,b.LogName,b.AgentName		

			select 
				A_ID
				,A_UserID
				,A_Name
				,A_Date
				,SUM(A_TotalWin) A_TotalWin
				,SUM(A_WashF) A_WashF
				,SUM(A_WashS) A_WashS
				,SUM(A_DrawS) A_DrawS
				,SUM(A_DrawF) A_DrawF
				,SUM(A_CmpSum) A_CmpSum
				,SUM(A_Money) A_Money
				,SUM(A_Bets) A_Bets
				,SUM(A_BetSAct) A_BetSAct
				,SUM(A_Amount3B) A_Amount3B
			from #LoginACnt group by A_ID,A_UserID,A_Name,A_Date
			drop table #LoginACnt
		]]>
	</sql>

	<sql id="A_AgentClientCount">
		<![CDATA[
			----------------------------------------------------------------
			  --获取指定代理指定时段内会员统计数据
			----------------------------------------------------------------
			--传入的变量
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(10) 
			declare @EndDate nvarchar(10)		

			set @AgentID = '${AgentID}'
			set @StartDate = '${StartDate}'
			set @EndDate = '${EndDate}'
	
			select 
				a.LogName 
				,a.AgentID 
				,a.ClientName 
				,a.ClientID 
				,GameType 
				,BetSum 
				,BetSumAct 
				,WinSum 
				,a.WashRate 
				,WashSum 
				,WashFee 
				,ClientSum 
				,TipSum 
				,CreateDate 
				,DrawSum 
				,a.WashType 
				,Wash_Z 
				,a.DrawRate 
				,DrawFee 
			into #clntTemp
			from  V_Client_Days_Query a ,T_Client b 
			where a.ClientID = b.ClientID and b.AgentID = @AgentID	and  a.CreateDate between @StartDate and @EndDate 

			SELECT  
				AgentID A_ID
				,CreateDate A_CreDate
				,SUM(WinSum) as A_TotalWin
				,SUM(BetSum) as A_BetS
				,SUM(WashSum) as A_WashS
				,SUM(DrawSum) as A_DrawS 
				,SUM(WashFee) as A_WashF
				,SUM(DrawFee) as A_DrawF 
			FROM #clntTemp
			group by AgentID,CreateDate 
			--having CreateDate between @StartDate and @EndDate 
			order by A_CreDate desc		

			drop table #clntTemp
		]]>
	</sql>

	<sql id="AgentData_New">
		<![CDATA[				
			--根据AgentID获取当前代理的相关统计数据
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)
			declare @GameType_B nvarchar(20)
			declare @GameType_L nvarchar(20)

			-- 内部变量
			declare @lastDayDate nvarchar(10)
			declare @A nvarchar(20)
			declare @B nvarchar(20)

			--日期判断
			select @A = convert(varchar(20),getdate(),120)  --当前时间
			select @B = convert(varchar(11),getdate(),120) + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			if (@A >= @B) --如果当前时间大于今天归档时间，则取当天日期，否则取昨天日期
			begin
				select @lastDayDate = convert(varchar(11),getdate(),120)  --当天
			end else
			begin
				select @lastDayDate = convert(varchar(11),getdate()-1,120)  --前一天
			end

			set @StartDate = @lastDayDate
			set @EndDate = @lastDayDate

			-- 初始化变量
			set @AgentID ='${AgentID}'

			;WITH AgentCTE (AgentID, ParentID, Level, Principal )AS(
				SELECT AgentID, ParentID, 0, Principal FROM T_Agent where AgentID = @agentID and IsHide = 'FALSE'
				UNION ALL
				SELECT a.AgentID, a.ParentID,  cte.Level+1,a.Principal FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
				)
			select * into #AID from AgentCTE 

			select a.AgentID, a.ParentID, a.Level, cast(a.Principal as numeric(20,0)) Principal,
				(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c where c.AgentID = a.AgentID) as Balance, 
				(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c,T_WeiTou_Detail b where c.AgentID = a.AgentID and c.ClientID = b.ClientID) as H5Balance,
				(select COUNT(*) from T_WeiTou_Detail b where b.InviterID = a.AgentID) A_Prom,
				(select COUNT(*) from T_WeiTou_Detail b where b.AgentID3Bao = a.AgentID) A_PromT,
				CAST(0 as numeric(20,4)) as AvaialablePoint into #Agent from #AID a;

			--计算群组余额
			DECLARE @Level int;
			select @Level = max(Level) from #Agent;

			while (@Level>=0) begin
				update #Agent  set #Agent.AvaialablePoint = isnull(#Agent.Principal,0) + isnull(#Agent.Balance,0)  +
					isnull((select sum(isnull(b.AvaialablePoint,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
									
				update #Agent  set #Agent.H5Balance = isnull(#Agent.H5Balance,0)  +
					isnull((select sum(isnull(b.H5Balance,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level

				update #Agent  set #Agent.A_PromT = isnull(#Agent.A_PromT,0)  +
					isnull((select sum(isnull(b.A_PromT,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
				set @Level = @Level -1
			end;

			select 
				 AgentID A_ID
				,sum(WinSum) as A_TotalWin    --总输赢
				,sum(a.WashFee) as A_WashF  --洗码费
				,sum(a.CompanyAmount) as A_CmpyMony --公司金额
				,sum(a.AgentAmount) as A_Mony     --代理金额
				,sum(BetSum) as A_BetS         --总下注
				,sum(BetSumAct) as A_BetSAct   --实际下注
				,sum(a.WashSum) as A_WashS       --洗码量
				,CAST(0 as numeric(18,4)) as A_Charge     --上分
				,CAST(0 as numeric(18,4)) as A_Cash --下分
				,sum(TipSum) as A_TipSum   --小费
				,sum(DrawFee) as A_DrawF  --和局费
				,sum(DrawSum) as A_DrawS --和局量
				,sum(Wash_Z) as A_WashS_Z   
				,SUM(a.ChouShui) A_TotalOdds
			into #feeTemp
			from T_BetBill_Wash a,T_BetBill b
			where a.AgentID = @AgentID  and a.BillID = b.BillID and b.StatisticsDay between @StartDate and @EndDate
			group by a.AgentID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select 
				 AgentID A_ID
				,sum(WinSum) as A_TotalWin    --总输赢
				,sum(a.WashFee) as A_WashF  --洗码费
				,sum(a.CompanyAmount) as A_CmpyMony --公司金额
				,sum(a.AgentAmount) as A_Mony     --代理金额
				,sum(BetSum) as A_BetS         --总下注
				,sum(BetSumAct) as A_BetSAct   --实际下注
				,sum(a.WashSum) as A_WashS       --洗码量
				,CAST(0 as numeric(18,4)) as A_Charge     --上分
				,CAST(0 as numeric(18,4)) as A_Cash --下分
				,sum(TipSum) as A_TipSum   --小费
				,sum(DrawFee) as A_DrawF  --和局费
				,sum(DrawSum) as A_DrawS --和局量
				,sum(Wash_Z) as A_WashS_Z   
				,SUM(a.ChouShui) A_TotalOdds
			from T_BetBill_Wash_Archive a,T_BetBill_Archive b
			where a.AgentID = @AgentID  and a.BillID = b.BillID and b.StatisticsDay between @StartDate and @EndDate
			group by a.AgentID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				TargetID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,SUM(Delta) A_Charge
				,CAST(0 as numeric(18,4)) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point 
			where TargetID= @AgentID and OperationType='BD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by TargetID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				TargetID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,SUM(Delta) A_Charge
				,CAST(0 as numeric(18,4)) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point_Archive (nolock) 
			where TargetID= @AgentID and OperationType='BD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by TargetID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				SourceID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,SUM(Delta) A_Charge
				,CAST(0 as numeric(18,4)) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point
			where SourceID= @AgentID and OperationType='XD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by SourceID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				SourceID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,SUM(Delta) A_Charge
				,CAST(0 as numeric(18,4)) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point_Archive (nolock)
			where SourceID= @AgentID and OperationType='XD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by SourceID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				TargetID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,CAST(0 as numeric(18,4)) A_Charge
				,SUM(Delta) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point
			where TargetID= @AgentID and OperationType='XD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by TargetID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				TargetID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,CAST(0 as numeric(18,4)) A_Charge
				,SUM(Delta) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point_Archive (nolock)
			where TargetID= @AgentID and OperationType='XD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by TargetID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				SourceID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,CAST(0 as numeric(18,4)) A_Charge
				,SUM(Delta) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point
			where SourceID = @AgentID and OperationType='BD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by SourceID

			insert #feeTemp (A_ID,A_TotalWin,A_WashF,A_CmpyMony,A_Mony,A_BetS,A_BetSAct,A_WashS
							,A_Charge,A_Cash,A_TipSum,A_DrawF,A_DrawS,A_WashS_Z,A_TotalOdds)

			select
				SourceID
				,CAST(0 as numeric(18,4)) A_TotalWin
				,CAST(0 as numeric(18,4)) A_WashF
				,CAST(0 as numeric(18,4)) A_CmpyMony
				,CAST(0 as numeric(18,4)) A_Mony
				,CAST(0 as numeric(18,4)) A_BetS
				,CAST(0 as numeric(18,4)) A_BetSAct
				,CAST(0 as numeric(18,4)) A_WashS
				,CAST(0 as numeric(18,4)) A_Charge
				,SUM(Delta) A_Cash
				,CAST(0 as numeric(18,4)) A_TipSum
				,CAST(0 as numeric(18,4)) A_DrawF
				,CAST(0 as numeric(18,4)) A_DrawS
				,CAST(0 as numeric(18,4)) A_WashS_Z
				,CAST(0 as numeric(18,4)) A_TotalOdds
			from T_Point_Archive (nolock)
			where SourceID = @AgentID and OperationType='BD' and StatisticsDay between @StartDate and @EndDate and Delta >0
			group by SourceID

			select 
				A_ID
				,SUM(A_TotalWin) A_TotalWin
				,SUM(A_WashF) A_WashF
				,SUM(A_CmpyMony) A_CmpyMony
				,SUM(A_Mony) A_Mony
				,SUM(A_BetS) A_BetS
				,SUM(A_BetSAct) A_BetSAct
				,SUM(A_WashS) A_WashS
				,SUM(A_Charge) A_Charge
				,SUM(A_Cash) A_Cash
				,SUM(A_TipSum) A_TipSum
				,SUM(A_DrawF) A_DrawF
				,SUM(A_DrawS) A_DrawS
				,SUM(A_WashS_Z) A_WashS_Z
				,SUM(A_TotalOdds) A_TotalOdds
			into #sumFeeTemp
			from #feeTemp group by A_ID

			--计算未结抽水
			select 
				SUM(a.ChouShui) ChouShui
			into #COd_No
			from T_BetBill_Wash a
			where a.AgentID =@AgentID and (a.OddsBillID is null or a.OddsBillID ='')

			insert #COd_No

			select 
				SUM(a.ChouShui) ChouShui
			from T_BetBill_Wash_Archive a
			where a.AgentID =@AgentID and (a.OddsBillID is null or a.OddsBillID ='')


			select SUM(ChouShui) as A_TotalOdds into #CTod_No  from #COd_No

			--计算未结算洗码费
			select 
				SUM(a.WashFee) WashF
				,SUM(a.WashSum) WashS
			into #Cwf_No
			from T_BetBill_Wash a
			where a.AgentID = @AgentID and (a.WashBillID is null or a.WashBillID ='') 

			insert #Cwf_No

			select 
				SUM(a.WashFee) WashF
				,SUM(a.WashSum) WashS
			from T_BetBill_Wash_Archive a 
			where a.AgentID = @AgentID and (a.WashBillID is null or a.WashBillID ='')
			group by a.AgentID 

			select SUM(WashF) as WashF,SUM(WashS) as WashS into #CTwf_No  from #Cwf_No

			select 
				a.AgentID A_ID
				,a.LogName A_UserID
				,a.AgentName A_Name
				,a.DrawRate A_DrawR
				,a.IntoRate A_IntoR
				,a.WashRate A_WashR
				,a.WashType A_WashT
				,a.State A_State
				,a.CreateTime A_CreTime
				,a.F_2 A_F2
				,'0' A_Sub
				,a.ParentID A_PID
				,Max_Z A_MX_Z
				,Max_ZD A_MX_ZD
				,Max_X A_MX_X
				,Max_XD A_MX_XD
				,Max_H A_MX_H
				,Min_Z A_MN_Z
				,Min_ZD A_MN_ZD
				,Min_X A_MN_X
				,Min_XD A_MN_XD
				,Min_H A_MN_H
				,F_3 A_Perm
				,ISNULL(a.Principal,0) A_Prncpl
				,ISNULL(b.A_BetS,0) A_BetS
				,ISNULL(b.A_BetSAct,0) A_BetSAct
				,ISNULL(b.A_Cash,0) A_Cash
				,ISNULL(b.A_Charge,0) A_Charge
				,ISNULL(b.A_CmpyMony,0) A_CmpyMony
				,ISNULL(b.A_DrawF,0) A_DrawF
				,ISNULL(b.A_DrawS,0) A_DrawS
				,ISNULL(b.A_Mony,0) A_Mony
				,ISNULL(b.A_TipSum,0) A_TipSum
				,ISNULL(b.A_TotalOdds,0) A_TotalOdds
				,ISNULL(b.A_TotalWin,0) A_TotalWin
				,ISNULL(b.A_WashF,0) A_WashF
				,ISNULL(b.A_WashS,0) A_WashS
				,ISNULL(b.A_WashS_Z,0) A_WashS_Z
				,(select COUNT(*) from T_Client where AgentID = @AgentID and IsHide = 'FALSE') A_ClntSum
				,ISNULL((select AvaialablePoint from #Agent where AgentID = @AgentID),0) A_AblePoint
				,ISNULL((select H5Balance from #Agent where AgentID = @AgentID),0) A_H5AbPoint
				,ISNULL((select A_Prom from #Agent where AgentID = @AgentID),0) A_ProA
				,ISNULL((select A_PromT from #Agent where AgentID = @AgentID),0) A_ProA_T
				,ISNULL((select A_TotalOdds from #CTod_No),0) A_TotalOdds_No
				,ISNULL((select WashF from #CTwf_No),0) A_WashF_No
				,ISNULL((select WashS from #CTwf_No),0) A_WashS_No
				,(select Count(*) from T_Agent where ParentID = a.AgentID and IsHide ='FALSE') A_SubCounts
			from T_Agent a left join #sumFeeTemp b on a.AgentID = b.A_ID
			where a.AgentID = @AgentID  

			drop table #Agent
			drop table #feeTemp
			drop table #COd_No
			drop table #CTod_No
			drop table #CTwf_No
			drop table #Cwf_No
			drop table #sumFeeTemp		
		]]>
	</sql>

	<sql id="GetAListByID">
		<![CDATA[
			declare @AgentID nvarchar(40)
			set @AgentID = '${AgentID}'
			SELECT 
				AgentID A_ID
				,LogName  A_UserID
				,AgentName A_Name
				,ParentID A_PID
				,State  A_State
				,0 AS A_Sub
				,Max_Z A_MX_Z
				,Min_Z A_MN_Z
				,Max_X A_MX_X
				,Min_X A_MN_X
				,Max_H A_MX_H
				,Min_H A_MN_H
				,Max_ZD A_MX_ZD
				,Min_ZD A_MN_ZD
				,Max_XD A_MX_XD
				,Min_XD A_MN_XD
				,Principal A_Prncpl
				,IntoRate A_IntoR
				,DrawRate A_DrawR
				,WashType A_WashT
				,WashRate A_WashR
				,F_3 A_Perm
				,(select top 1  b.LogName from T_Cfg a ,T_Agent b where Name='H5_ManageID' and a.Value = b.AgentID) A_H5CashMger			
			FROM T_Agent WHERE AgentID = @AgentID
		]]>
	</sql>
	
	<sql id="W_GetAllAgentsDataPage_New" >
		<![CDATA[
			--获取代理列表数据源
			declare @Use_Z nvarchar(40) 
			declare @Use_Z_Rate numeric(5,2)

			DECLARE @pageSize INTEGER --每页数量
			DECLARE @curePage INTEGER --当前页

			SET @pageSize = '${pageSize}'
			SET @curePage ='${curePage}'

			select @Use_Z=[Value] from T_Cfg where [name] = 'Use_Z_Wash' 
			select @Use_Z_Rate= Odds_Z from T_Odds where GameType = 'B'

			DECLARE @AgentID nvarchar(40)
			DECLARE @TotalRecords int

			set @AgentID ='${AgentID}'--ece7a93044f14df7be202dee2e7ea7de

			;WITH AgentCTE (AgentID, ParentID, Level, Principal )AS(
				SELECT AgentID, ParentID, 0, Principal FROM T_Agent where AgentID = @agentID and IsHide = 'FALSE'
				UNION ALL
				SELECT a.AgentID, a.ParentID,  cte.Level+1,a.Principal FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
				)
			select * into #AID from AgentCTE 

			select a.AgentID, a.ParentID, a.Level, cast(a.Principal as numeric(20,0)) Principal,
				(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c where c.AgentID = a.AgentID) as Balance, 
				(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c,T_WeiTou_Detail b where c.AgentID = a.AgentID and c.ClientID = b.ClientID) as H5Balance,
				(select COUNT(*) from T_WeiTou_Detail b where b.InviterID = a.AgentID) A_Prom,
				(select COUNT(*) from T_WeiTou_Detail b where b.AgentID3Bao = a.AgentID) A_PromT,
				CAST(0 as numeric(20,4)) as AvaialablePoint into #Agent from #AID a;

			--计算群组余额
			DECLARE @Level int;
			select @Level = max(Level) from #Agent;

			while (@Level>=0) begin
				update #Agent  set #Agent.AvaialablePoint = isnull(#Agent.Principal,0) + isnull(#Agent.Balance,0)  +
					isnull((select sum(isnull(b.AvaialablePoint,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
									
				update #Agent  set #Agent.H5Balance = isnull(#Agent.H5Balance,0)  +
					isnull((select sum(isnull(b.H5Balance,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level

				update #Agent  set #Agent.A_PromT = isnull(#Agent.A_PromT,0)  +
					isnull((select sum(isnull(b.A_PromT,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
				set @Level = @Level -1
			end;	

			select 
				ttt.AgentID A_ID
				, LogName A_UserID
				,ttt.ParentID A_PID
				--,Phone  U_Phone
				,AgentName A_Name
				,CreateTime A_CreTime
				, Max_Z A_MX_Z
				, Min_Z A_MN_Z
				, Max_X A_MX_X
				, Min_X A_MN_X
				, Max_H A_MX_H
				, Min_H A_MN_H
				, Max_ZD A_MX_ZD
				, Min_ZD A_MN_ZD
				, Max_XD A_MX_XD
				, Min_XD A_MN_XD
				, ttt.IsHide A_Hide
				,ttt.IsWeb A_Web
				, (case State when 'YES' then '启用' when 'NO' then '锁定' when 'PAUSE' then '暂停' else '' end) as A_State
				, Principal  A_Prncpl--剩余额度
				,(case WashType when 'S' then '双边' when 'D' then '单边' else '未设置' end) as A_WashT
				, WashRate A_WashR --洗码率
				, IntoRate A_IntoR --占成
				--, RebateRate A_RebateR --返点
				, SourcePrincipal A_SPrncpl--信用额度
				, CAST(0 as numeric(18,4)) A_TotalWin
				, CAST(0 as numeric(18,4)) A_WashS
				, CAST(0 as numeric(18,4)) A_BetS
				, CAST(0 as numeric(18,4)) A_WashF
				, CAST(0 as numeric(18,4)) A_TotalFee
				, CAST(0 as numeric(18,4)) A_CompanyFee
				, DrawRate A_DrawR
				, CAST(0 as numeric(18,4)) A_DrawF
				, CAST(0 as numeric(18,4)) A_DrawS
				, (select AvaialablePoint from #Agent where AgentID = ttt.AgentID) A_AblePoint -- 有效点数()
				--, 0 as A_AblePoint
				,F_2  A_F2--备注
				,F_3 A_Perm -- 权限
				-- ,Memo U_Memo
				, CAST(0 as numeric(18,4)) A_TotalOdds
				, CAST(0 as numeric(18,4)) A_Odds_No
				, CAST(0 as numeric(18,4)) A_WashF_No
				, CAST(0 as numeric(18,4)) A_WashS_No
				,(select COUNT(*) from T_Client where AgentID = ttt.AgentID and IsHide ='FALSE') A_ClntCounts
				,(select COUNT(*) from T_Agent where ParentID=ttt.AgentID and IsHide ='FALSE') A_SubCounts
				,(select A_Prom from #Agent where AgentID =ttt.AgentID) A_ProA
				,(select A_PromT from #Agent where AgentID =ttt.AgentID) as A_ProA_T
				,(select H5Balance from #Agent where AgentID =ttt.AgentID) as A_H5AbPoint -- CAST(0 as numeric(20,4))
			into #AT
			from T_Agent ttt
			where ttt.AgentID <> 'Root' and ttt.IsHide = 'FALSE' and (ttt.AgentID = @AgentID or ttt.ParentID = @AgentID)
			${WhereSql}

			select @TotalRecords = count(*) from #AT

			SELECT TOP (@pageSize) * into #lastT
			From (
				SELECT TOP (@pageSize * @curePage) ROW_NUMBER() OVER (order by A_AblePoint desc, A_CreTime desc,A_Name) AS rowNo
					,@TotalRecords TotalRecords
					,*
				From #AT
			)as a
			WHERE rowNo BETWEEN (((@curePage - 1) * @pageSize) + 1)
			AND (@pageSize * @curePage)
			order by A_AblePoint desc, A_CreTime desc,A_Name

			--计算未结算抽水
			select 
				a.AgentID
				,SUM(a.ChouShui) ChouShui  
			into #COd_No
			from T_BetBill_Wash a,#lastT b where a.AgentID = b.A_ID and (a.OddsBillID is null or a.OddsBillID ='') group by a.AgentID

				insert #COd_No

			select 
				a.AgentID
				,SUM(a.ChouShui) ChouShui 
				from T_BetBill_Wash_Archive a ,#lastT b where a.AgentID =b.A_ID and (a.OddsBillID is null or a.OddsBillID ='')  group by a.AgentID

			select AgentID,SUM(isnull(ChouShui,0)) as A_TotalOdds into #CTod_No  from #COd_No group by AgentID

			update a set a.A_Odds_No = ISNULL(b.A_TotalOdds,0) from #lastT a,#CTod_No b where a.A_ID = b.AgentID

			--计算未结洗码费
			select 
				a.AgentID
				,SUM(ISNULL(a.WashSum,0)) WashSum
				,SUM(ISNULL(a.WashFee,0)) WashFee
			into #washF
			from T_BetBill_Wash a,#lastT b where a.AgentID = b.A_ID and (a.WashBillID is null or a.WashBillID='') group by a.AgentID

			insert #washF

			select
				a.AgentID
				,SUM(ISNULL(a.WashSum,0)) WashSum
				,SUM(ISNULL(a.WashFee,0)) WashFee
			from T_BetBill_Wash_Archive a ,#lastT b where a.AgentID = b.A_ID and (a.WashBillID is null or a.WashBillID='') group by a.AgentID

			select 
				AgentID
				,SUM(ISNULL(WashSum,0)) WashSum
				,SUM(ISNULL(WashFee,0)) WashFee
			into #allWashF
			from #washF group by AgentID

			update a set a.A_WashF_No = b.WashFee,a.A_WashS_No = b.WashSum from #lastT a,#allWashF b where a.A_ID = b.AgentID
		
			select * from #lastT

			drop table #Agent
			drop table #AID
			drop table #allWashF
			drop table #AT
			drop table #COd_No
			drop table #CTod_No
			drop table #washF
			drop table #lastT
		]]>
	</sql>

	<sql id="W_GetAListCount_New">
		<![CDATA[			
			--获取代理列表总记录条数
			DECLARE @AgentID nvarchar(40)

			set @AgentID ='${AgentID}'--ece7a93044f14df7be202dee2e7ea7de

			select 
				COUNT(*)
			from T_Agent 
			where AgentID <> 'Root' and IsHide = 'FALSE' and (AgentID = @AgentID or ParentID = @AgentID)
			${WhereSql}
		]]>
	</sql>

	<sql id="A_UpdateT_Agent">
		<![CDATA[
			--更新代理
			--1.插入代理信息
			--3.更新限红设置
			----------------------------------------------------------

			--传入的变量
			declare @AgentID nvarchar(40)
			declare @LogName nvarchar(100)
			declare @IsUpOdds nvarchar(2)
			declare @Count int

			set @AgentID = '${AgentID}'
			set @LogName = '${LogName}'
			set @IsUpOdds ='${IsUpOdds}'

			select @Count=count(1) from T_Agent where LogName =@LogName and AgentID!=@AgentID

			if (@Count>0)
			begin
				raiserror('代理登录名称已经存在',16,1)
				return
			end

			-- 更新当前代理信息
			##'${updateAgent}'##

			-- 更新限红设置
			##'${upAuthority}'##
			
			if (@IsUpOdds = '1')
			begin
				;WITH AgentCTE (AgentID, ParentID, LogName )AS(
						  SELECT a.AgentID, a.ParentID, a.LogName FROM T_Agent a where a .AgentID = @AgentID
							UNION ALL
						  SELECT a.AgentID, a.ParentID,a.LogName FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
					)
				select a.ClientID into #alllAID from T_Client a,AgentCTE b where a.AgentID = b.AgentID
				
				select 
					a.Odds_Z OddF
					,a.Odds_H OddHe
					,a.Odds_X OddL
					,b.Odds_H OddH
					,b.Odds_X OddX
					,b.Odds_XD OddXD
					,b.Odds_Z OddZ
					,b.Odds_ZD OddZD
				into #StandardOd
				from T_Odds a,T_Odds b where a.GameType = 'L' and b.GameType ='B'
				--将指定代理下的会员赔率改为标准赔率
				update a set  a.Odds_Fu_Client = isnull(b.OddF,0)
							  ,a.Odds_He_Client = isnull(b.OddHe,0)	
							  ,a.Odds_Long_Client = isnull(b.OddL,0)
							  ,a.Odds_H_Client = isnull(b.OddH,0)	
							  ,a.Odds_X_Client = isnull(b.OddX,0)	
							  ,a.Odds_XD_Client = isnull(b.OddXD,0)
							  ,a.Odds_Z_Client = isnull(b.OddZ,0)	
							  ,a.Odds_ZD_Client = isnull(b.OddZD,0)	
				from T_ClientEx a,#alllAID c ,#StandardOd b
				where a.ClientID = c.ClientID
				
				drop table #alllAID
				drop table #StandardOd
			end
			
			select '-1' as ErrorCode
		]]>
	</sql>

	<sql id="UpMatchpCount4A">
		<![CDATA[
			--计算指定代理群组余额、未结洗码费、未结抽水费
			DECLARE @AgentID nvarchar(40)

			set @AgentID ='${AgentID}'

			;WITH AgentCTE (AgentID, ParentID, Level, Principal )AS(
				SELECT a.AgentID, a.ParentID, 0, a.Principal FROM T_Agent a where a .AgentID = @agentID
				UNION ALL
				SELECT a.AgentID, a.ParentID,  cte.Level+1,a.Principal FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
				)
			select * into #AID from AgentCTE 

			select a.AgentID, a.ParentID, a.Level, cast(a.Principal as numeric(20,0)) Principal,
				(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c where c.AgentID = a.AgentID) as Balance, 
				(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c,T_WeiTou_Detail b where c.AgentID = a.AgentID and c.ClientID = b.ClientID) as H5Balance,
				CAST(0 as numeric(20,4)) as AvaialablePoint
				 into #Agent from #AID a;

			--计算群组余额
			DECLARE @Level int;
			select @Level = max(Level) from #Agent;

			while (@Level>=0) begin
				update #Agent  set #Agent.AvaialablePoint = isnull(#Agent.Principal,0) + isnull(#Agent.Balance,0)  +
					isnull((select sum(isnull(b.AvaialablePoint,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
					
				update #Agent  set #Agent.H5Balance = isnull(#Agent.H5Balance,0)  +
					isnull((select sum(isnull(b.H5Balance,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
				set @Level = @Level -1
			end;

			declare @Chous numeric(10,4)
			declare @WashFee numeric(10,4)

			set @Chous =0
			set @WashFee =0
			--结算未结抽水
			select 
				@Chous += SUM(ChouShui)
			from T_BetBill_Wash 
			where AgentID = @AgentID  and (OddsBillID is null or OddsBillID = '') 

			select 
				@Chous += SUM(ChouShui)
			from T_BetBill_Wash_Archive 
			where AgentID = @AgentID  and (OddsBillID is null or OddsBillID = '')

			--结算未结抽水
			select 
				@WashFee += SUM(WashFee)
			from T_BetBill_Wash 
			where AgentID = @AgentID  and (WashBillID is null or WashBillID = '') 

			select 
				@WashFee += SUM(WashFee)
			from T_BetBill_Wash_Archive 
			where AgentID = @AgentID  and (WashBillID is null or WashBillID = '') 

			select
				AgentID A_ID
				,ISNULL(AvaialablePoint,0) A_GroupPrinc
				,ISNULL(H5Balance,0) H5Balance
				,ISNULL(@Chous,0) A_ChouS
				,ISNULL(@WashFee,0) A_WashFee
			from #Agent where AgentID = @AgentID

			drop table #Agent
			drop table #AID
		]]>
	</sql>

	<sql id="UpdateOdds4A">
		<![CDATA[
			--把指定代理下这条链下所有的会员赔率修改为标准赔率 
			declare @AgentID nvarchar(40)
			set @AgentID ='${AgentID}';
			WITH AgentCTE (AgentID, ParentID, LogName )AS(
						  SELECT a.AgentID, a.ParentID, a.LogName FROM T_Agent a where a .AgentID = @AgentID
							UNION ALL
						  SELECT a.AgentID, a.ParentID,a.LogName FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
					)
			select a.ClientID into #alllAID from T_Client a,AgentCTE b where a.AgentID = b.AgentID
			
			select 
				a.Odds_H C_ODH
				,a.Odds_X C_ODX
				,a.Odds_XD C_ODXD
				,a.Odds_Z C_ODZ
				,a.Odds_ZD C_ODZD
				,b.Odds_H C_ODHe
				,b.Odds_X C_ODL
				,b.Odds_Z C_ODF
			into #sOdds
			from T_Odds a,T_Odds b where a.GameType ='B' and b.GameType='L'
			
			update a set  a.Odds_Fu_Client = b.C_ODF
						  ,a.Odds_He_Client = b.C_ODHe
						  ,a.Odds_Long_Client = b.C_ODL
						  ,a.Odds_H_Client = b.C_ODH
						  ,a.Odds_X_Client = b.C_ODX
						  ,a.Odds_XD_Client = b.C_ODXD
						  ,a.Odds_Z_Client = b.C_ODZ
						  ,a.Odds_ZD_Client = b.C_ODZD	
			from T_ClientEx a,#alllAID c , #sOdds b where a.ClientID = c.ClientID

			select -1

			drop table #alllAID
			drop table #sOdds
		]]>
	</sql>
	
	<sql id="A_SaveAgentModifyPassword">
		<![CDATA[
			--------------------------------------------------------
			--修改代理密码
			----------------------------------------------------------

			--传入的变量
			declare @AgentID nvarchar(40)

			set @AgentID = '${AgentID}'

			declare @AgentPreState nvarchar(10) -- 代理之前状态

			select @AgentPreState=state from dbo.T_Agent where AgentID = '${AgentID}'

			-- 设置代理为暂停状态（限制会员交易）
			update T_Agent set
				State = 'PAUSE'
			where AgentID = @AgentID


			-- 更新当前代理信息
			UPDATE T_Agent
			   SET  Pwd = '${Pwd}'
			 WHERE AgentID = '${AgentID}'

			-- 设置代理为暂停状态（限制代理交易）
			update T_Agent set
			State = @AgentPreState
			where AgentID = @AgentID

			select '-1' as ErrorCode 
		]]>
	</sql>

	<sql id="A_AgentSelfModifyPassword">
		<![CDATA[
			--------------------------------------------------------
			--修改登录代理密码
			----------------------------------------------------------

			--传入的变量
			declare @AgentID nvarchar(40)
			declare @OldPwd nvarchar(200)

			set @AgentID = '${AgentID}'
			set @OldPwd = '${OldPwd}'

			declare @AgentPreState nvarchar(10) -- 代理之前状态
			select @AgentPreState=state from dbo.T_Agent where AgentID = '${AgentID}'

			declare @count int -- 判断密码是否正确
			select @count=count(*) from dbo.T_Agent where AgentID = @AgentID and Pwd = @OldPwd
			if(@count <= 0)
				begin
					raiserror('原始密码错误！', 16, 1)
					return  
				 end

			-- 设置代理为暂停状态（限制会员交易）
			update T_Agent set
			State = 'PAUSE'
			where AgentID = @AgentID


			-- 更新当前代理信息
			UPDATE T_Agent
			   SET  Pwd = '${Pwd}'
			 WHERE AgentID = '${AgentID}'

			-- 设置代理为暂停状态（限制代理交易）
			update T_Agent set
			State = @AgentPreState
			where AgentID = @AgentID

			select '-1' as ErrorCode 
		]]>
	</sql>

	<sql id="A_SaveAgentPoint">
		<![CDATA[
			--代理(Source)对代理(Target) 洗点
			--  范围:   Delta <= Target.余额
			--  操作:   Source.余额 加 Delta
			--          Target.余额 减 Delta
			--代理(Source)对代理(Target) 补点
			--  范围:   Delta <= Source.余额
			--  操作:   Source.余额 减 Delta
			--          Tagret.余额 加 Delta

			--传入的变量
			declare @AgentID nvarchar(40)
			declare @ParentID nvarchar(40)
			declare @OwnID nvarchar(40)
			declare @Point int
			declare @IsAdd nvarchar(10)
			declare @CreateID nvarchar(40)
			declare @LoginUser nvarchar(100)
			declare @IP nvarchar(40)
			declare @Address nvarchar(200)
			declare @IPLocal nvarchar(40)
			declare @IntoRate numeric(10,4)
			declare @OpType nvarchar(100)--交易类型
			declare @IsMactch varchar(8)--是否有配分权限
			declare @RealInto numeric(18,2)
			--declare @SourceUser nvarchar(100)
			declare @Memo nvarchar(500)
			declare @LevelPoint nvarchar(2)--是否是上级上下分
			declare @IsAClear nvarchar(2)--标记是否是代理清零

			set @AgentID = '${AgentID}'
			set @ParentID = '${ParentID}'
			set @Point = '${Point}'
			set @IsAdd = '${IsAdd}'
			set @CreateID = '${CreateID}'
			set @IP ='${IP}'
			set @Address = '${Address}'
			set @IPLocal = '${IPLocal}'
			set @LevelPoint ='${LevelPoint}'
			set @IsAClear ='${IsAClear}'
			set @LoginUser ='${LoginUser}'
			--set @OpType ='${OpType}'
			--set @SourceUser ='${SourceUser}'
			--set @Memo = '${Memo}'

			declare @Principal int        -- 当前代理剩余点数
			declare @ParentPrincipal int  -- 上级代理剩余点数
			declare @Operator nvarchar(10)  -- 当前操作类型：XD，BD
			declare @AgentPreState nvarchar(10) -- 代理之前状态
			declare @SourceLogName nvarchar(100)
			declare @SourceName nvarchar(100)
			declare @TargetLogName nvarchar(100)
			declare @TargetName nvarchar(100)
			declare @Permission nvarchar(64)

			select @Permission=[dbo].[Base64Decode](F_3) from dbo.T_Agent where AgentID = @AgentID

			if(CHARINDEX('"MatchPoint":true',@Permission) >0) --判断当前代理是否有配分权限
			begin
				set @IsMactch =  '1' --有配分权限则不能越级操作
				set @OwnID = @ParentID
				if(@IsAdd = 'TRUE')
				begin
					set @RealInto = (0 - @Point * (1-@IntoRate))
					set @OpType = '上级代理配分下分'
					set @Memo = @LoginUser + '进行上级代理配分下分'
				end else
				begin
					set @RealInto =  @Point * (1-@IntoRate)
					set @OpType = '上级代理配分上分'
					set @Memo = @LoginUser + '进行上级代理配分上分'
				end
			end else
			begin
				set @IsMactch = '0'
				if(@LevelPoint ='1')
				begin
					set @OwnID = @ParentID
					if(@IsAdd = 'TRUE')
					begin
						set @RealInto = (0 - @Point)
						set @OpType = '上级代理全额下分'
						set @Memo = @LoginUser + '进行上级代理全额下'
					end else
					begin
						set @RealInto = @Point
						set @OpType = '上级代理全额上分'
						set @Memo = @LoginUser + '进行上级代理全额上分'
					end
				end else
				begin
					set @OwnID = @CreateID
					if(@IsAdd = 'TRUE')
					begin
						set @RealInto = (0 - @Point)
						set @OpType = '登录代理全额下分'
						set @Memo = @LoginUser + '进行登录代理全额下分'
					end else
					begin
						set @RealInto = @Point
						set @OpType = '登录代理全额上分'
						set @Memo = @LoginUser + '进行登录代理全额下分'
					end
				end
			end
			
			if(@IsAClear = '1')
			begin
				set @OpType = '代理清零'
				set @Memo = @LoginUser + '进行代理清零'
				set @OwnID = @ParentID
			end

			select @AgentPreState=state, @Principal =ISNULL(Principal,0),@TargetLogName=LogName ,@TargetName =AgentName,@IntoRate = IntoRate from dbo.T_Agent where AgentID = @AgentID
			select @ParentPrincipal=ISNULL(Principal,0), @ParentID=AgentID,@SourceLogName=LogName ,@SourceName=AgentName from T_Agent where AgentID = @OwnID


			--取记帐日期
			declare @xTime  nvarchar(8)
			declare @yTime  nvarchar(8)
			declare @StatisticsDay nvarchar(10)
			select @xTime = substring( convert(nvarchar(20), getdate(),120),12,9)
			select @yTime = [Value] from T_cfg where [Name]='Use_WORKTIME_START'
			if @xTime >= @yTime
			begin   --大于12点
				select @StatisticsDay = convert(nvarchar(10), getdate(),120) 
			end else
			begin  --小于12点
				select @StatisticsDay = convert(nvarchar(10), getdate()-1,120)  
			end

			if Upper(@IsAdd) = 'TRUE' -- 洗点
			begin
			  set @Operator = 'XD'				
			  -- 判断点数是否有效
			  if @Point <= @Principal
			  begin
				-- 设置代理为暂停状态
				update T_Agent set
				State = 'PAUSE'
				where AgentID = @AgentID

				-- 更新当前代理剩余点数
				update T_Agent set 
				Principal = ISNULL(Principal,0) - @Point
				where AgentID = @AgentID

				-- 更新上级代理剩余点数
				update T_Agent set 
				Principal =ISNULL(Principal,0) + @Point
				where AgentID = @OwnID    

				--写入日志
				INSERT INTO T_Point
					([PointID]
					,[CreateID]
					,[CreateTime]
					,[Delta]
					,[SourceID]
					,[SourcePrincipal_B]
					,[SourcePrincipal_E]
					,[TargetID]
					,[TargetBalance_B]
					,[TargetBalance_E]
					,[OperationType]
					,[IP]
					,[Address]
					,[IPLocal]
					,[SourceLogName]
					,[SourceName]
					,[TargetLogName]
					,[TargetName]
					,[StatisticsDay]
					,[Memo]
				)    
				VALUES (
					replace(convert(varchar(36),newid()),'-','')
					,@CreateID
					,convert(nvarchar(20),getdate(),120)
					,abs(@Point)
					,@OwnID
					,@ParentPrincipal
					,@ParentPrincipal + @Point
					,@AgentID
					,@Principal
					,@Principal - @Point
					,@Operator    -- 洗XD        
					,@IP
					,@Address
					,@IPLocal
					,@SourceLogName
					,@SourceName
					,@TargetLogName
					,@TargetName
					,@StatisticsDay
					,@Memo
				)
				--插入交易日志
				INSERT INTO T_TransactionLog
					([LogID]
					,[OpType]
					,[OpReason]
					,[UserID]
					,[UserName]
					,[TransactionPoint]
					,[SourceUser]
					,[SoureInto]
					,[RealInto]
					,[RealPoint]
					,[TransactionPoint_B]
					,[TransactionPoint_E]
					,[OpTime]
					,[Operator]
					,[OpInfo]
					,[IP]
					,[Address]
					,[Remark]
					,[OperatorID])
				VALUES (
					replace(convert(varchar(36),newid()),'-','')
					,@OpType
					,'代理上下分操作' --convert(nvarchar(20),getdate(),120)
					,@TargetLogName
					,@TargetName
					,0-@Point
					,@SourceLogName
					,@IntoRate
					,@RealInto
					,0-@Point
					,@Principal    -- 清零
					,@Principal - @Point
					,convert(nvarchar(20),getdate(),120)
					,@LoginUser--(select top 1 LogName from T_Agent where AgentID =@CreateID)
					,@OpType
					,@IP
					,@Address
					,@Memo
					,@CreateID
				)

				-- 恢复代理状态
				update T_Agent set
				State = @AgentPreState
				where AgentID = @AgentID

				select '-1' as ErrorCode
			  end else
			  begin
				 raiserror('洗点数超过剩余点数！', 16, 1)
				 return
			  end
			end else
			begin
			  set @Operator = 'BD'  -- 补点				
			  -- 判断点数是否有效
			  if @Point <= @ParentPrincipal
			  begin
				-- 设置代理为暂停状态
				update T_Agent set
				State = 'PAUSE'
				where AgentID = @AgentID

				-- 更新当前代理剩余点数
				update T_Agent set 
				Principal = ISNULL(Principal,0) + @Point
				where AgentID = @AgentID

				-- 更新上级代理剩余点数
				update T_Agent set 
				Principal = ISNULL(Principal,0) - @Point
				where AgentID = @OwnID   

				--写入日志
				INSERT INTO T_Point
					([PointID]
					,[CreateID]
					,[CreateTime]
					,[Delta]
					,[SourceID]
					,[SourcePrincipal_B]
					,[SourcePrincipal_E]
					,[TargetID]
					,[TargetBalance_B]
					,[TargetBalance_E]
					,[OperationType]
					,[IP]
					,[Address]
					,[IPLocal]
					,[SourceLogName]
					,[SourceName]
					,[TargetLogName]
					,[TargetName]
					,[StatisticsDay]
					,[Memo]
				)    
				VALUES (
					replace(convert(varchar(36),newid()),'-','')
					,@CreateID
					,convert(nvarchar(20),getdate(),120)
					,abs(@Point)
					,@OwnID
					,@ParentPrincipal
					,@ParentPrincipal - @Point
					,@AgentID
					,@Principal
					,@Principal + @Point
					,@Operator    -- 补BD        
					,@IP
					,@Address
					,@IPLocal
					,@SourceLogName
					,@SourceName
					,@TargetLogName
					,@TargetName
					,@StatisticsDay
					,@Memo
				)
				--插入交易日志
				INSERT INTO T_TransactionLog
					([LogID]
					,[OpType]
					,[OpReason]
					,[UserID]
					,[UserName]
					,[TransactionPoint]
					,[SourceUser]
					,[SoureInto]
					,[RealInto]
					,[RealPoint]
					,[TransactionPoint_B]
					,[TransactionPoint_E]
					,[OpTime]
					,[Operator]
					,[OpInfo]
					,[IP]
					,[Address]
					,[Remark]
					,[OperatorID])
				VALUES (
					replace(convert(varchar(36),newid()),'-','')
					,@OpType
					,'代理上下分操作' --convert(nvarchar(20),getdate(),120)
					,@TargetLogName
					,@TargetName
					,@Point
					,@SourceLogName
					,@IntoRate
					,@RealInto
					,@Point
					,@Principal    -- 清零
					,@Principal + @Point
					,convert(nvarchar(20),getdate(),120)
					,@LoginUser--(select top 1 LogName from T_Agent where AgentID =@CreateID)
					,@OpType
					,@IP
					,@Address
					,@Memo
					,@CreateID
				)
				-- 恢复代理状态
				update T_Agent set
				State = @AgentPreState
				where AgentID = @AgentID

				select '-1' as ErrorCode
			  end else
			  begin
				  raiserror('补点数超过上级代理剩余点数！', 16, 1)
				  return
			  end
			end
		]]>
	</sql>

	<sql id="deletedAgent">
		<![CDATA[
			--指定代理下IsHide = 'TRUE'的代理数据
			declare @AgentID nvarchar(40)
			declare @PageSize int
			declare @CurePage int
			
			set @AgentID ='${AgentID}'
			set @PageSize = '${PageSize}'
			set @CurePage = '${CurePage}'			
			
			 select 
				AgentID A_ID
				,LogName A_UserID
				,AgentName A_Name
				,Principal A_Prncpl
				,CreateTime A_CreTime
				,0 A_Charge
				,State A_State
				,WashRate A_WashR
				,DrawRate A_DrawR
				,IntoRate A_IntoR
			into #deletedClnt
			  from T_Agent where IsHide = 'TRUE' and ParentID = @AgentID
  
			  ;WITH tbl AS (
					SELECT TargetID,Delta,ROW_NUMBER() OVER (PARTITION BY TargetID ORDER BY StatisticsDay DESC) rn FROM T_Point  where OperationType ='BD' and TargetID in (select A_ID from #deletedClnt)
				)SELECT * into #CPoint FROM tbl
				WHERE rn=1

			update a set a.A_Charge = b.Delta from #deletedClnt a ,#CPoint b where a.A_ID = b.TargetID

			select top(@PageSize) *
			from
			(
				select top(@PageSize*@CurePage) Row_NUMBER() OVER(A_CreTime desc) as rowNo
				,(select count(*) from #deletedClnt) TotalRecords
				,*
				from #deletedClnt
			) a where rowNo between (((@CurePage-1)*@PageSize)+1) and (@PageSize*@CurePage)			

			drop table #deletedClnt
			drop table #CPoint
		]]>
	</sql>

	<sql id="GetClntList_Invite">
		<![CDATA[
			--获取有H5会员邀请关系的会员列表
			DECLARE @AgentID nvarchar(40)
			DECLARE @pageSize INTEGER --每页数量
			DECLARE @curePage INTEGER --当前页
			DECLARE @totalRecords INTEGER 

			SET @pageSize ='${pageSize}'--'100'
			SET @curePage ='${curePage}'--'1'
			set @AgentID ='${AgentID}'
			
			select
				 a.ClientID C_ID
				,a.logName C_UserID
				,d.InviterID C_InID
				,d.InviterLogName C_InUserID
				,d.InviterType C_InType
				,CAST('C_H5' as nvarchar(16)) C_Type
				,(select COUNT(*) from T_WeiTou_Detail where InviterID = a.ClientID) C_ProA
				,CAST(0 as int) C_ProA_T
				,CAST(0 as numeric(18,4)) C_WashF_No
				,CAST(0 as numeric(18,4)) C_WashS_No
				,a.ClientName C_Name
				,a.CreateTime C_CreTime
				,a.Balance C_Balnc
				,a.AgentID C_AID
				,a.DrawRate C_DrawR
				,(select count(clientid) from T_ClientOnline where ClientID = a.ClientID and ClientType = 'Client') as C_F1
				,a.F_2 C_F2
				,a.IsHide C_IsHide
				,a.Max_H C_MX_H
				,a.Max_X C_MX_X
				,a.Max_XD C_MX_XD
				,a.Max_Z C_MX_Z
				,a.Max_ZD C_MX_ZD
				,a.Min_H C_MN_H
				,a.Min_X C_MN_X
				,a.Min_XD C_MN_XD
				,a.Min_Z C_MN_Z
				,a.Min_ZD C_MN_ZD
				,a.Principal C_Prnpl
				,a.State C_State
				,a.WashRate C_WashR
				,a.WashType C_WashT
				,c.ClientDataShow C_HdShow
				,c.Odds_Fu_Client C_ODF
				,c.Odds_H_Client C_ODH
				,c.Odds_He_Client C_ODHe
				,c.Odds_Long_Client C_ODL
				,c.Odds_X_Client C_ODX
				,c.Odds_XD_Client C_ODXD
				,c.Odds_Z_Client C_ODZ
				,c.Odds_ZD_Client C_ODZD
				,b.LogName C_AUserID
			into #CTemp
			from T_Client a,T_ClientEx c,T_Agent b ,T_WeiTou_Detail d
			where d.InviterID = @AgentID and a.ClientID = d.ClientID and a.ClientID = c.ClientID and a.IsHide='FALSE' and a.AgentID = b.AgentID

			insert #CTemp

			select
				 a.ClientID C_ID
				,a.logName C_UserID
				,CAST('' as nvarchar(40)) C_InID
				,CAST('' as nvarchar(40)) C_InUserID
				,CAST('O' as nvarchar(40)) C_InType
				,CAST('C_Common' as nvarchar(16)) C_Type
				,(select COUNT(*) from T_WeiTou_Detail where InviterID = a.ClientID) C_ProA
				,CAST(0 as int) C_ProA_T
				,CAST(0 as numeric(18,4)) C_WashF_No
				,CAST(0 as numeric(18,4)) C_WashS_No
				,a.ClientName C_Name
				,a.CreateTime C_CreTime
				,a.Balance C_Balnc
				,a.AgentID C_AID
				,a.DrawRate C_DrawR
				,(select count(clientid) from T_ClientOnline where ClientID = a.ClientID and ClientType = 'Client') as C_F1
				,a.F_2 C_F2
				,a.IsHide C_IsHide
				,a.Max_H C_MX_H
				,a.Max_X C_MX_X
				,a.Max_XD C_MX_XD
				,a.Max_Z C_MX_Z
				,a.Max_ZD C_MX_ZD
				,a.Min_H C_MN_H
				,a.Min_X C_MN_X
				,a.Min_XD C_MN_XD
				,a.Min_Z C_MN_Z
				,a.Min_ZD C_MN_ZD
				,a.Principal C_Prnpl
				,a.State C_State
				,a.WashRate C_WashR
				,a.WashType C_WashT
				,c.ClientDataShow C_HdShow
				,c.Odds_Fu_Client C_ODF
				,c.Odds_H_Client C_ODH
				,c.Odds_He_Client C_ODHe
				,c.Odds_Long_Client C_ODL
				,c.Odds_X_Client C_ODX
				,c.Odds_XD_Client C_ODXD
				,c.Odds_Z_Client C_ODZ
				,c.Odds_ZD_Client C_ODZD
				,b.LogName C_AUserID
			from T_Client a,T_ClientEx c,T_Agent b
			where a.AgentID = @AgentID and a.ClientID = c.ClientID and a.IsHide='FALSE' and a.AgentID = b.AgentID and a.ClientID not in (select C_ID from #CTemp)

			;WITH AtreeCTE(AgentID,ParentID,TopAID,IsTop) AS(
						select AgentID,ParentID,AgentID,1 from T_Agent where ParentID = @AgentID or AgentID = @AgentID
						union all 
						select a.AgentID,a.ParentID,cte.TopAID,0 from T_Agent a  join AtreeCTE cte on a.ParentID = cte.AgentID
					)
				select * into #allID from AtreeCTE  

				;WITH AgentCTE (AgentID, ParentID, Level, Principal )AS(
					SELECT AgentID, ParentID, 0, Principal FROM T_Agent where AgentID = @agentID and IsHide = 'FALSE'
					UNION ALL
					SELECT a.AgentID, a.ParentID,  cte.Level+1,a.Principal FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
					)
				select * into #AID from AgentCTE 

				select a.AgentID, a.ParentID, a.Level, cast(a.Principal as numeric(20,0)) Principal,
					(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c where c.AgentID = a.AgentID) as Balance, 
					(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c,T_WeiTou_Detail b where c.AgentID = a.AgentID and c.ClientID = b.ClientID) as H5Balance,
					(select COUNT(*) from T_WeiTou_Detail b where b.InviterID = a.AgentID) A_Prom,
					(select COUNT(*) from T_WeiTou_Detail b where b.AgentID3Bao = a.AgentID) A_PromT,
					CAST(0 as numeric(20,4)) as AvaialablePoint into #Agent from #AID a;

				--计算群组余额/总推广量
				DECLARE @Level int;
				select @Level = max(Level) from #Agent;

				while (@Level>=0) begin
					update #Agent  set #Agent.AvaialablePoint = isnull(#Agent.Principal,0) + isnull(#Agent.Balance,0)  +
						isnull((select sum(isnull(b.AvaialablePoint,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
									
					update #Agent  set #Agent.H5Balance = isnull(#Agent.H5Balance,0)  +
						isnull((select sum(isnull(b.H5Balance,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level

					update #Agent  set #Agent.A_PromT = isnull(#Agent.A_PromT,0)  +
						isnull((select sum(isnull(b.A_PromT,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
					set @Level = @Level -1
				end;	
				
				update #CTemp set C_ProA_T = (select A_PromT from #Agent where AgentID = #CTemp.C_ID)

			select ClientID,InviterID,InviterLogName,InviterType,'C_H5' ClientType into #wTemp 
			from T_WeiTou_Detail where AgentID3Bao = @AgentID

			select a.ClientID,a.logName,a.AgentID3Bao into #CID from T_WeiTou_Detail a,T_Client b where a.ClientID= b.ClientID and a.AgentID3Bao is null and b.AgentID=@AgentID --logName='203334093'

			update a set 
				a.C_InID=b.InviterID
				,a.C_InUserID=b.InviterLogName
				,a.C_InType = b.InviterType
				,a.C_Type = b.ClientType
			from #CTemp a,#wTemp b where a.C_ID= b.ClientID

			select
				a.ClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
			into #washTemp
			from T_BetBill a,#CTemp b
			where a.ClientID = b.C_ID and a.State='#PAY' and (a.WashBillID is null or a.WashBillID ='')
			group by a.ClientID

			insert #washTemp(ClientID,WashFee,WashSum)

			select
				a.ClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
			from T_BetBill_Archive a,#CTemp b
			where a.ClientID = b.C_ID and a.State='#PAY' and (a.WashBillID is null or a.WashBillID ='')
			group by a.ClientID

			select ClientID,SUM(WashFee) WashFee,SUM(WashSum) WashSum into #allWashTemp from #washTemp group by ClientID

			update a set a.C_WashF_No = b.WashFee,a.C_WashS_No = b.WashSum  from #CTemp a,#allWashTemp b where a.C_ID= b.ClientID

			select @totalRecords = COUNT(*) from #CTemp where C_ID not in (select ClientID from #CID) ${whereSql}


			SELECT TOP (@pageSize) *
				From (
					SELECT TOP (@pageSize * @curePage) ROW_NUMBER() OVER (order by  C_Balnc desc, C_InUserID desc, C_Type desc ,C_CreTime desc,C_UserID) AS rowNo
						,@TotalRecords TotalRecords 
						,*
					From (select * from #CTemp where C_ID not in (select ClientID from #CID) ${whereSql}) b --
				)as a
			WHERE rowNo BETWEEN (((@curePage - 1) * @pageSize) + 1)
			AND (@pageSize * @curePage)
			order by C_Balnc desc,  C_InUserID desc, C_Type desc ,C_CreTime desc,C_UserID

			drop table #CTemp
			drop table #wTemp
			drop table #CID
			drop table #allWashTemp
			drop table #washTemp
			drop table #Agent
			drop table #AID
			drop table #allID
		]]>
	</sql>

	<sql id="CurrentClnt">
		<![CDATA[
			--查询当前行代理或会员
			DECLARE @AgentID nvarchar(40)

			set @AgentID ='${AgentID}'

			declare @IsAgent int  
			select @IsAgent = (select COUNT(*) from T_Agent where AgentID = @AgentID)
			declare @IsH5 int
			select @IsH5 = (select COUNT(*) from T_WeiTou_Detail where ClientID = @AgentID)
			select
				 a.AgentID C_ID
				,a.logName C_UserID
				,'' C_InID
				,'' C_InUserID
				,'' C_InType
				,CAST('C_AgentSelf' as nvarchar(16)) C_Type
				,(select COUNT(*) from T_WeiTou_Detail b,T_Client c where InviterID = a.AgentID and b.ClientID = c.ClientID) C_ProA
				,CAST(0 as int) C_ProA_T
				,CAST(0 as numeric(18,4)) C_WashF_No
				,CAST(0 as numeric(18,4)) C_WashS_No
				,a.AgentName C_Name
				,a.CreateTime C_CreTime
				,a.Principal C_Balnc
				,a.ParentID C_AID
				,a.DrawRate C_DrawR
				,0 as C_F1
				,a.F_2 C_F2
				,a.IsHide C_IsHide
				,a.Max_H C_MX_H
				,a.Max_X C_MX_X
				,a.Max_XD C_MX_XD
				,a.Max_Z C_MX_Z
				,a.Max_ZD C_MX_ZD
				,a.Min_H C_MN_H
				,a.Min_X C_MN_X
				,a.Min_XD C_MN_XD
				,a.Min_Z C_MN_Z
				,a.Min_ZD C_MN_ZD
				,a.Principal C_Prnpl
				,a.State C_State
				,a.WashRate C_WashR
				,a.WashType C_WashT
				,null C_HdShow
				,null C_ODF
				,null C_ODH
				,null C_ODHe
				,null C_ODL
				,null C_ODX
				,null C_ODXD
				,null C_ODZ
				,null C_ODZD
				,null C_AUserID
			into #CTemp
			from T_Agent a where AgentID = @AgentID and a.IsHide = 'FALSE'

			union

			select
				 a.ClientID C_ID
				,a.logName C_UserID
				,(select InviterID from T_WeiTou_Detail where ClientID = a.ClientID) C_InID
				,(select InviterLogName from T_WeiTou_Detail where ClientID = a.ClientID) C_InUserID
				,(select InviterType from T_WeiTou_Detail where ClientID = a.ClientID) C_InType
				,(case when @IsH5>0 then 'C_H5' else 'C_Common' end  ) C_Type
				,(select COUNT(*) from T_WeiTou_Detail where InviterID = a.ClientID) C_ProA
				,CAST(0 as int) C_ProA_T
				,CAST(0 as numeric(18,4)) C_WashF_No
				,CAST(0 as numeric(18,4)) C_WashS_No
				,a.ClientName C_Name
				,a.CreateTime C_CreTime
				,a.Balance C_Balnc
				,a.AgentID C_AID
				,a.DrawRate C_DrawR
				,(select count(clientid) from T_ClientOnline where ClientID = a.ClientID and ClientType = 'Client') as C_F1
				,a.F_2 C_F2
				,a.IsHide C_IsHide
				,a.Max_H C_MX_H
				,a.Max_X C_MX_X
				,a.Max_XD C_MX_XD
				,a.Max_Z C_MX_Z
				,a.Max_ZD C_MX_ZD
				,a.Min_H C_MN_H
				,a.Min_X C_MN_X
				,a.Min_XD C_MN_XD
				,a.Min_Z C_MN_Z
				,a.Min_ZD C_MN_ZD
				,a.Principal C_Prnpl
				,a.State C_State
				,a.WashRate C_WashR
				,a.WashType C_WashT
				,c.ClientDataShow C_HdShow
				,c.Odds_Fu_Client C_ODF
				,c.Odds_H_Client C_ODH
				,c.Odds_He_Client C_ODHe
				,c.Odds_Long_Client C_ODL
				,c.Odds_X_Client C_ODX
				,c.Odds_XD_Client C_ODXD
				,c.Odds_Z_Client C_ODZ
				,c.Odds_ZD_Client C_ODZD
				,b.LogName C_AUserID
			from T_Client a,T_ClientEx c,T_Agent b --,T_WeiTou_Detail d and a.ClientID = d.ClientID
			where a.ClientID=@AgentID and a.ClientID = c.ClientID and a.IsHide='FALSE' and a.AgentID = b.AgentID

			if @IsAgent >0
			begin 
				;WITH AtreeCTE(AgentID,ParentID,TopAID,IsTop) AS(
						select AgentID,ParentID,AgentID,1 from T_Agent where ParentID = @AgentID or AgentID = @AgentID
						union all 
						select a.AgentID,a.ParentID,cte.TopAID,0 from T_Agent a  join AtreeCTE cte on a.ParentID = cte.AgentID
					)
				select * into #allID from AtreeCTE  

				;WITH AgentCTE (AgentID, ParentID, Level, Principal )AS(
					SELECT AgentID, ParentID, 0, Principal FROM T_Agent where AgentID = @agentID and IsHide = 'FALSE'
					UNION ALL
					SELECT a.AgentID, a.ParentID,  cte.Level+1,a.Principal FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
					)
				select * into #AID from AgentCTE 

				select a.AgentID, a.ParentID, a.Level, cast(a.Principal as numeric(20,0)) Principal,
					(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c where c.AgentID = a.AgentID) as Balance, 
					(select isnull(sum(cast(c.Balance  as numeric(20,0))) ,0) from t_client c,T_WeiTou_Detail b where c.AgentID = a.AgentID and c.ClientID = b.ClientID) as H5Balance,
					(select COUNT(*) from T_WeiTou_Detail b where b.InviterID = a.AgentID) A_Prom,
					(select COUNT(*) from T_WeiTou_Detail b where b.AgentID3Bao = a.AgentID) A_PromT,
					CAST(0 as numeric(20,4)) as AvaialablePoint into #Agent from #AID a;

				--计算群组余额/总推广量
				DECLARE @Level int;
				select @Level = max(Level) from #Agent;

				while (@Level>=0) begin
					update #Agent  set #Agent.AvaialablePoint = isnull(#Agent.Principal,0) + isnull(#Agent.Balance,0)  +
						isnull((select sum(isnull(b.AvaialablePoint,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
									
					update #Agent  set #Agent.H5Balance = isnull(#Agent.H5Balance,0)  +
						isnull((select sum(isnull(b.H5Balance,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level

					update #Agent  set #Agent.A_PromT = isnull(#Agent.A_PromT,0)  +
						isnull((select sum(isnull(b.A_PromT,0)) from #Agent b where b.ParentID = #Agent.AgentID ),0) where #Agent.level = @Level
					set @Level = @Level -1
				end;	
				
				update #CTemp set C_ProA_T = (select A_PromT from #Agent where AgentID = #CTemp.C_ID)

				drop table #allID
				drop table #Agent
				drop table #AID
			end else
			begin
				;WITH AgentCTE (ClientID,InviterID,InviterLogName,TopClientID,IsTop)AS(
					SELECT ClientID,InviterID,InviterLogName, ClientID, 1 
						FROM T_WeiTou_Detail --a,#targetTemp1 b  
						where InviterID= @AgentID or ClientID = @AgentID --a.InviterID = b.C_ID or a.ClientID = b.C_ID
					UNION ALL
					SELECT a.ClientID,a.InviterID,a.InviterLogName,cte.TopClientID, 0 
						FROM T_WeiTou_Detail a JOIN AgentCTE cte ON a .InviterID = cte.ClientID --join T_Client c on a.ClientID = c.ClientID and c.CreateTime between @StartD and @EndD
				)
				select TopClientID,COUNT(TopClientID) couts into #proTemp1 from AgentCTE where IsTop=0 group by TopClientID

				update #CTemp set C_ProA_T =isnull((select couts from #proTemp1 where TopClientID = #CTemp.C_ID),0)

				drop table #proTemp1
			end

			select
				a.ClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
			into #washTemp
			from T_BetBill a,#CTemp b
			where a.ClientID = b.C_ID and a.State='#PAY' and (a.WashBillID is null or a.WashBillID ='')
			group by a.ClientID

			insert #washTemp(ClientID,WashFee,WashSum)

			select
				a.ClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
			from T_BetBill_Archive a,#CTemp b
			where a.ClientID = b.C_ID and a.State='#PAY' and (a.WashBillID is null or a.WashBillID ='')
			group by a.ClientID

			select ClientID,SUM(WashFee) WashFee,SUM(WashSum) WashSum into #allWashTemp from #washTemp group by ClientID

			update a set a.C_WashF_No = b.WashFee,a.C_WashS_No = b.WashSum  from #CTemp a,#allWashTemp b where a.C_ID= b.ClientID

			select * from #CTemp

			drop table #CTemp
			drop table #allWashTemp
			drop table #washTemp		
		]]>
	</sql>

	<sql id="ClntOdds">
		<![CDATA[
			--会员标准赔率
			select 
				a.Odds_H C_ODH
				,a.Odds_X C_ODX
				,a.Odds_XD C_ODXD
				,a.Odds_Z C_ODZ
				,a.Odds_ZD C_ODZD
				,b.Odds_H C_ODHe
				,b.Odds_X C_ODL
				,b.Odds_Z C_ODF
			from T_Odds a,T_Odds b where a.GameType ='B' and b.GameType='L'
		]]>
	</sql>

	<sql id="deletedClnt">
		<![CDATA[
			--指定代理下逻辑删除的会员数据
			declare @AgentID nvarchar(40)
			declare @PageSize int
			declare @CurePage int

			set @AgentID ='${AgentID}'
			set @PageSize = '${PageSize}'
			set @CurePage = '${CurePage}

			select
				ClientID C_ID
				,LogName C_UserID
				,ClientName C_Name
				,Balance C_Balnc
				,CreateTime C_CreTime
				,0 C_Charge
				,State C_State
				,WashRate C_WashR
			into #deletedClnt
			from T_Client where IsHide = 'TRUE' and AgentID = @AgentID

			;WITH tbl AS (
				SELECT TargetID,Delta,ROW_NUMBER() OVER (PARTITION BY TargetID ORDER BY StatisticsDay DESC) rn FROM T_Point  where OperationType ='BD' and TargetID in (select C_ID from #deletedClnt)
			)
			SELECT * into #CPoint FROM tbl
			WHERE rn=1

			update a set a.C_Charge = b.Delta from #deletedClnt a ,#CPoint b where a.C_ID = b.TargetID

			select top(@PageSize) *
			from
			(
				select top(@PageSize*@CurePage) Row_NUMBER() OVER(A_CreTime desc) as rowNo
				,(select count(*) from #deletedClnt) TotalRecords
				,*
				from #deletedClnt
			) a where rowNo between (((@CurePage-1)*@PageSize)+1) and (@PageSize*@CurePage)		

			drop table #deletedClnt
			drop table #CPoint
		]]>
	</sql>
	
	<sql id="A_SetAgentClientsClear">
		<![CDATA[
		   -----------------------------------------------------------
			--清零
			--数量（Delta）
			--客户      信用（Principal）     剩余（Balance）
			--P = B   情况       D = P
			--P < B   情况       D = P
			--P > B   情况       D = B
			--操作
			--客户: P = 0   B = 0   代理 余额 加 D
			-----------------------------------------------------------

			--输入参数
			declare @CreateID nvarchar(40)        --操作者ID
			declare @AgentID nvarchar(40)        --操作代理ID
			declare @ClientID nvarchar(40)       --会员ID
			declare @IP nvarchar(40)
			declare @Address nvarchar(128)

			--内部变量
    
			declare @AgentPrincipalSource int   --代理之前剩余点数 
			declare @Principal int              --会员之前信用点数
			declare @Balance int                --会员之前剩余点数
			declare @ClientPreState nvarchar(10) -- 会员之前状态
			declare @Delta int                  --点数
			declare @IsStand nvarchar(20)  -- 洗补点模式
			declare @IsH5 int 

			declare @TargetName nvarchar(40) 
			declare @TargetLName nvarchar(40) 
			declare @SourceName nvarchar(40) 
			declare @SourceLName nvarchar(40) 

			set @IsStand ='NO'

			select @IsStand = [value] From T_Cfg where [Name] ='Use_StandPoint'
				set @Delta = 0
    
				set @CreateID    = '${CreateID}'
				set @AgentID    = '${AgentID}'
				set @IP = '${IP}'
				set @Address = '${Address}'

				--取记帐日期
				declare @xTime  nvarchar(8)
				declare @yTime  nvarchar(8)
				declare @StatisticsDay nvarchar(10)
				select @xTime = substring( convert(nvarchar(20), getdate(),120),12,9)
				select @yTime = [Value] from T_cfg where [Name]='Use_WORKTIME_START'
				if @xTime >= @yTime
				begin   --大于12点
					select @StatisticsDay = convert(nvarchar(10), getdate(),120) 
				end else
				begin  --小于12点
					select @StatisticsDay = convert(nvarchar(10), getdate()-1,120)  
				end

				declare  client_cursor cursor for select clientid from t_client where agentid = @AgentID
				open client_cursor
				FETCH NEXT FROM client_cursor INTO @ClientID
				while @@FETCH_STATUS = 0
				begin
					select @IsH5 = COUNT(*) from T_WeiTou_Detail where ClientID = @ClientID

					if @IsH5 > 0
					begin
						FETCH NEXT FROM client_cursor
						INTO @ClientID	
						continue 
					end

					--获取当前会员信用点数及剩余点数
					select @Principal = Principal, @Balance = Balance, @ClientPreState = State from T_Client 
					where ClientID = @ClientID

					select @AgentPrincipalSource = Principal from T_Agent
					where AgentID = @AgentID

					--设置会员为暂停状态（限制会员交易）
					update T_Client set
					State = 'PAUSE'
					where ClientID = @ClientID

					--更新客户端
					update T_Client set 
						Balance = 0,
						Principal = 0
					where ClientID = @ClientID

					--更新代理
					if @IsStand ='YES'
					begin					
						--标准模式    
						if @Principal <= @Balance
						begin
						  set @Delta = @Principal    
						end else    
						begin        
						  set @Delta = @Balance   
						 end
					end else
					begin
						--非标模式
						set @Delta = @Balance
					end        

				if @Delta <= 0
				begin 
					FETCH NEXT FROM client_cursor
					INTO @ClientID	
					continue 
				end      

				update T_Agent set
				Principal = isnull(Principal,0) + @Delta
				where AgentID = @AgentID

				Select @SourceLName = LogName,@SourceName = AgentName From T_Agent Where AgentID = @AgentID
				--Select @SourceName = AgentName From T_Agent Where AgentID = @AgentID
				Select @TargetLName = LogName,@TargetName = ClientName From T_Client Where ClientID = @ClientID
				-- Select @TargetName = ClientName From T_Client Where ClientID = @ClientID

				--写入日志
				INSERT INTO T_Point
					([PointID]
					,[CreateID]
					,[CreateTime]
					,[Delta]
					,[SourceID]
					,[SourcePrincipal_B]
					,[SourcePrincipal_E]
					,[TargetID]
					,[TargetBalance_B]
					,[TargetBalance_E]
					,[OperationType]
					,[TargetPrincipal_B]
					,[TargetPrincipal_E]
					,[SourceLogName]
					,[SourceName]
					,[TargetLogName]
					,[TargetName]
					,[StatisticsDay]
					,[IP]
					,[Address])
				VALUES (
					replace(convert(varchar(36),newid()),'-','')
					,@CreateID
					,convert(nvarchar(20),getdate(),120)
					,@Delta
					,@AgentID
					,@AgentPrincipalSource
					,@AgentPrincipalSource + @Delta
					,@ClientID
					,@Balance
					,0
					,'QL'    -- 清零
					,@Principal
					,0
					,@SourceLName
					,@SourceName
					,@TargetLName
					,@TargetName
					,@StatisticsDay
					,@IP
					,@Address
				)
				--交易记录
				INSERT INTO T_TransactionLog
					([LogID]
					,[OpType]
					,[OpReason]
					,[UserID]
					,[UserName]
					,[TransactionPoint]
					,[SourceUser]
					,[SoureInto]
					,[RealInto]
					,[RealPoint]
					,[TransactionPoint_B]
					,[TransactionPoint_E]
					,[OpTime]
					,[Operator]
					,[OpInfo]
					,[IP]
					,[Address]
					,[Remark]
					,[OperatorID])
				VALUES (
					replace(convert(varchar(36),newid()),'-','')
					,'直属会员清零'
					,'直属会员清零' --convert(nvarchar(20),getdate(),120)
					,@TargetLName
					,@TargetName
					,0-@Delta
					,@SourceLName
					,0
					,0-@Balance
					,0-@Balance
					,@Balance    -- 清零
					,0
					,convert(nvarchar(20),getdate(),120)
					,(select top 1 LogName from T_Agent where AgentID =@CreateID)
					,'直属会员清零'
					,@IP
					,@Address
					,'直属会员清零'
					,@CreateID
				)
				--设置会员为暂停状态（限制会员交易）
				update T_Client set
				State = @ClientPreState
				where ClientID = @ClientID
				FETCH NEXT FROM client_cursor
				INTO @ClientID
			end 
			close client_cursor
			deallocate client_cursor
			select '-1' as ErrorCode
		]]>
	</sql>

	<sql id="A_Client_QL">
		<![CDATA[
			-----------------------------------------------------------
			--清零
			--数量（Delta）
			--客户      信用（Principal）     剩余（Balance）
			--P = B   情况       D = P
			--P < B   情况       D = P
			--P > B   情况       D = B
			--操作
			--客户: P = 0   B = 0   代理 余额 加 D
			-----------------------------------------------------------

			--输入参数
			declare @CreateID nvarchar(40)        --操作者ID
			declare @ClientID nvarchar(40)       --会员ID

			--内部变量
			declare @AgentPrincipalSource int   --代理之前剩余点数 
			declare @Principal int              --会员之前信用点数
			declare @Balance int                --会员之前剩余点数
			declare @ClientPreState nvarchar(10) -- 会员之前状态
			declare @Delta int                  --点数
			declare @AgentID nvarchar(40)        --操作代理ID
			declare @IsStand nvarchar(20)  -- 洗补点模式
			declare @IP nvarchar(40)
			declare @Address nvarchar(128)

			set @CreateID    = '${CreateID}'
			set @ClientID    = '${ClientID}'
			set @IP = '${IP}'
			set @Address = '${Address}'
			set @IsStand ='NO'

			select @IsStand = [value] From T_Cfg where [Name] ='Use_StandPoint'
			set @Delta = 0

			--取记帐日期
			declare @xTime  nvarchar(8)
			declare @yTime  nvarchar(8)
			declare @StatisticsDay nvarchar(10)
			select @xTime = substring( convert(nvarchar(20), getdate(),120),12,9)
			select @yTime = [Value] from T_cfg where [Name]='Use_WORKTIME_START'
			if @xTime >= @yTime
			begin   --大于12点
				select @StatisticsDay = convert(nvarchar(10), getdate(),120) 
			end else
			begin  --小于12点
				select @StatisticsDay = convert(nvarchar(10), getdate()-1,120)  
			end

			--获取当前会员信用点数及剩余点数
			select @AgentID = AgentID, @Principal =ISNULL(Principal,0), @Balance = ISNULL(Balance,0), @ClientPreState = State from T_Client 
			where ClientID = @ClientID

			select @AgentPrincipalSource = ISNULL(Principal,0) from T_Agent
			where AgentID = @AgentID

			declare @SourceLogName nvarchar(100)
			declare @SourceName nvarchar(100)
			declare @TargetLogName nvarchar(100)
			declare @TargetName nvarchar(100)
			Select @SourceLogName=LogName ,@SourceName=AgentName  From T_Agent Where AgentID = @AgentID        
			Select @TargetLogName=LogName ,@TargetName =ClientName From T_Client Where ClientID = @ClientID 

			--设置会员为暂停状态（限制会员交易）
			update T_Client set
			State = 'PAUSE'
			where ClientID = @ClientID

			--更新客户端
			update T_Client set 
				Balance = 0,
				Principal = 0
			where ClientID = @ClientID

			if @IsStand ='YES'
			begin
				--标准模式    
				if @Principal <= @Balance
				begin
				  set @Delta = @Principal    end    else    begin        set @Delta = @Balance    end
			end else
			begin
				--非标模式
				set @Delta = @Balance
			end

			--更新代理
			update T_Agent set
				Principal = isnull(Principal,0) + @Delta
				where AgentID = @AgentID

			--写入日志
			INSERT INTO T_Point
				([PointID]
				,[CreateID]
				,[CreateTime]
				,[Delta]
				,[SourceID]
				,[SourcePrincipal_B]
				,[SourcePrincipal_E]
				,[TargetID]
				,[TargetBalance_B]
				,[TargetBalance_E]
				,[OperationType]
				,[TargetPrincipal_B]
				,[TargetPrincipal_E]
				,[SourceLogName]
				,[SourceName]
				,[TargetLogName]
				,[TargetName]
				,[StatisticsDay]
				,[IP]
				,[Address]
			)
			VALUES (
				replace(convert(varchar(36),newid()),'-','')
				,@CreateID
				,convert(nvarchar(20),getdate(),120)
				,@Delta
				,@AgentID
				,@AgentPrincipalSource
				,@AgentPrincipalSource + @Delta
				,@ClientID
				,@Balance
				,0
				,'QL'    -- 清零
				,@Principal
				,0
				,@SourceLogName
				,@SourceName
				,@TargetLogName
				,@TargetName
				,@StatisticsDay
				,@IP
				,@Address
			)

			--写入交易日志
			INSERT INTO T_TransactionLog
				([LogID]
				,[OpType]
				,[OpReason]
				,[UserID]
				,[UserName]
				,[TransactionPoint]
				,[SourceUser]
				,[SoureInto]
				,[RealInto]
				,[RealPoint]
				,[TransactionPoint_B]
				,[TransactionPoint_E]
				,[OpTime]
				,[Operator]
				,[OpInfo]
				,[IP]
				,[Address]
				,[Remark]
				,[OperatorID]
			)
			VALUES (
				replace(convert(varchar(36),newid()),'-','')
				,'会员清零'--@CreateID
				,'会员清零'--convert(nvarchar(20),getdate(),120)
				,@TargetLogName
				,@TargetName
				,0-@Delta
				,@SourceLogName
				,0
				,0-@Delta
				,0-@Delta
				,@Balance    -- 清零
				,0
				,convert(nvarchar(20),getdate(),120)
				,(select top 1 LogName from T_Agent where AgentID = @CreateID)
				,'会员清零'
				,@IP
				,@Address
				,'会员清零'
				,@CreateID
			)

			--设置会员为暂停状态（限制会员交易）
			update T_Client set
			State = @ClientPreState
			where ClientID = @ClientID   

			select '-1' as ErrorCode 
			]]>
	</sql>

	<sql id="A_Client_QK">
		<![CDATA[
			-----------------------------------------------------------
			-- 清卡
			-- 数量（Delta）
			-- 客户      信用（Principal）     剩余（Balance）
			-- P = B   情况       D = P
			-- P < B   情况       D = P
			-- P > B   情况       D = B
			-- 操作
			-- 客户: P = 0   B = 0   代理 余额 加 D
			-- 停用帐户
			-----------------------------------------------------------

			-- 输入参数
			declare @CreateID nvarchar(40)        --操作者ID
			declare @ClientID nvarchar(40)       --会员ID

			-- 内部变量
			declare @AgentPrincipalSource int   --代理之前剩余点数 
			declare @Principal int              --会员之前信用点数
			declare @Balance int                --会员之前剩余点数
			declare @Delta int                  --点数
			declare @AgentID nvarchar(40)        --操作代理ID
			declare @IsStand nvarchar(20)  -- 洗补点模式    
			declare @IP nvarchar(32)
			declare @Address nvarchar(128)
			
			set @CreateID    = '${CreateID}'
			set @ClientID    = '${ClientID}'
			set @IP = '${IP}'
			set @Address ='${Address}'

			set @Delta = 0
			set @IsStand ='NO'

			select @IsStand = [value] From T_Cfg where [Name] ='Use_StandPoint'

			--取记帐日期
			declare @xTime  nvarchar(8)
			declare @yTime  nvarchar(8)
			declare @StatisticsDay nvarchar(10)
			select @xTime = substring( convert(nvarchar(20), getdate(),120),12,9)
			select @yTime = [Value] from T_cfg where [Name]='Use_WORKTIME_START'
			if @xTime >= @yTime
			begin   --大于12点
				select @StatisticsDay = convert(nvarchar(10), getdate(),120) 
			end else
			begin  --小于12点
				select @StatisticsDay = convert(nvarchar(10), getdate()-1,120)  
			end

			--获取当前会员信用点数及剩余点数
			select @AgentID = AgentID, @Principal =ISNULL(Principal,0), @Balance = ISNULL(Balance,0) from T_Client 
			where ClientID = @ClientID

			select @AgentPrincipalSource = ISNULL(Principal,0) from T_Agent
			where AgentID = @CreateID

			declare @SourceLogName nvarchar(100)
			declare @SourceName nvarchar(100)
			declare @TargetLogName nvarchar(100)
			declare @TargetName nvarchar(100)

			Select @SourceLogName=LogName ,@SourceName=AgentName  From T_Agent Where AgentID = @CreateID        
			Select @TargetLogName=LogName ,@TargetName =ClientName From T_Client Where ClientID = @ClientID 

			--设置会员为停用状态（限制会员交易）
			update T_Client set
			State = 'NO',
			IsHide = 'TRUE'
			where ClientID = @ClientID

			--更新客户端
			update T_Client set 
				Balance = 0,
				Principal = 0
			where ClientID = @ClientID

			if @IsStand ='YES'
			begin

				if @Principal <= @Balance
				begin
					set @Delta = @Principal
				end
				else
				begin
					set @Delta = @Balance
				end
			end else
			begin
			   set @Delta = @Balance
			end

			--更新代理
			update T_Agent set
				Principal = isnull(Principal,0) + @Delta
				where AgentID = @CreateID

			--写入日志
			INSERT INTO T_Point
				([PointID]
				,[CreateID]
				,[CreateTime]
				,[Delta]
				,[SourceID]
				,[SourcePrincipal_B]
				,[SourcePrincipal_E]
				,[TargetID]
				,[TargetBalance_B]
				,[TargetBalance_E]
				,[OperationType]
				,[TargetPrincipal_B]
				,[TargetPrincipal_E]
				,[SourceLogName]
				,[SourceName]
				,[TargetLogName]
				,[TargetName]
				,[StatisticsDay]
				,[IP]
				,[Address]
			)
			VALUES (
				replace(convert(varchar(36),newid()),'-','')
				,@CreateID
				,convert(nvarchar(20),getdate(),120)
				,@Delta
				,@AgentID
				,@AgentPrincipalSource
				,@AgentPrincipalSource + @Delta
				,@ClientID
				,@Balance
				,0
				,'QK'    -- 清卡
				,@Principal
				,0
				,@SourceLogName
				,@SourceName
				,@TargetLogName
				,@TargetName
				,@StatisticsDay
				,@IP
				,@Address
			)
			--写入交易日志
			INSERT INTO T_TransactionLog
				([LogID]
				,[OpType]
				,[OpReason]
				,[UserID]
				,[UserName]
				,[TransactionPoint]
				,[SourceUser]
				,[SoureInto]
				,[RealInto]
				,[RealPoint]
				,[TransactionPoint_B]
				,[TransactionPoint_E]
				,[OpTime]
				,[Operator]
				,[OpInfo]
				,[IP]
				,[Address]
				,[Remark]
				,[OperatorID]
			)
			VALUES (
				replace(convert(varchar(36),newid()),'-','')
				,'会员清卡'
				,'会员清卡'
				,@TargetLogName
				,@TargetName
				,0-@Delta
				,@SourceLogName
				,0
				,0-@Delta
				,0-@Delta
				,@Balance    -- 清零
				,0
				,convert(nvarchar(20),getdate(),120)
				,(select top 1 LogName from T_Agent where AgentID = @CreateID)
				,'会员清卡'
				,@IP
				,@Address
				,'会员清卡'
				,@CreateID
			)
			select '-1' as ErrorCode 
		]]>
	</sql>

	<sql id="A_UpdateT_Client">
		<![CDATA[
			--------------------------------------------------------
			--更新会员-----agent 使用
			--1.插入会员信息

			----------------------------------------------------------

			--传入的变量
			declare @ClientID nvarchar(40)
			declare @LogName nvarchar(100)
			declare @Count int

			set @ClientID = '${ClientID}'
			set @LogName = '${LogName}'

			select @Count=count(*) from T_Client where LogName =@LogName and ClientID != @ClientID

			if (@Count>0)
			begin
				raiserror('会员登录名称已经存在',16,1)
				return
			end

			-- 更新当前会员信息
			##'${updateClient}'##
				
			--修改限红
			##'${upAuthority}'##				
			
			--赔率及显示隐藏洗码
			##'${upClientEx}'##
			
			select '-1' as ErrorCode
		]]>
	</sql>

	<sql id="A_SaveClientModifyPassword">
		<![CDATA[
			--------------------------------------------------------
			--修改密码
			----------------------------------------------------------

			--传入的变量
			declare @ClientID nvarchar(40)

			set @ClientID = '${ClientID}'

			declare @ClientPreState nvarchar(10) -- 代理之前状态
			select @ClientPreState=state from dbo.T_Client where ClientID = '${ClientID}'

			-- 更新当前会员信息
			UPDATE T_Client
			   SET 
				 Pwd = '${Pwd}'
			 WHERE ClientID = '${ClientID}'		
               
			select '-1' as ErrorCode 
		]]>
	</sql>

	<sql id="A_SaveClientPoint">
		<![CDATA[
			--代理(Source)对会员(Target) 洗点
			--1 标准模式
			--  范围:   1.1    Target.信用 = Target.余额  时 Delta <= Target.余额
			--          1.2    Target.信用 > Target.余额  时 Delta <= Target.余额
			--          1.3    Target.信用 < Target.余额  时 Delta <= Target.信用
			--  操作: Target.信用 减 Delta
			--        Tagret.余额 减 Delta
			--            Source.余额 加 Delta
			--2 非标准模式
			--  范围:  Delta <= Tagret.余额 
			--  操作:   Source.余额 加 Delta
			--          Target.余额 减 Delta 
			--
			--代理(Source)对会员(Target) 补点
			--1 标准模式
			--   范围  : Delta <= Source.余额
			--   操作:  Source.余额 减 Delta 
			--          Target.信用 加 Delta
			--          Target.余额 加 Delta
			--2 非标准模式
			--   范围:  Delta <=Source.余额
			--   操作： Source.余额 减 Delta
			--          Target.余额 加 Delta

			-- 输入参数
			declare @IsAdd nvarchar(10)
			declare @CreateID nvarchar(40)        --操作者ID
			declare @ClientID nvarchar(40)       --会员ID
			declare @Point int                  --点数
			declare @IP nvarchar(40)
			declare @Address nvarchar(200)
			declare @IPLocal nvarchar(40)
			declare @OpType nvarchar(100)
			declare @Memo nvarchar(500)
			--declare @SourceUser nvarchar(100)

			-- 内部变量
			declare @AgentPrincipalSource int   --代理之前剩余点数
			declare @AgentID nvarchar(40)        --操作代理ID 
			declare @Principal int  
			declare @Balance int
			declare @ClientPreState nvarchar(10) -- 会员之前状态
			declare @Operator nvarchar(10)
			declare @IsStand nvarchar(20)  -- 洗补点模式

			set @CreateID = '${CreateID}'
			set @ClientID = '${ClientID}'
			set @AgentID = '${AgentID}'
			set @Point = ${Point}
			set @IsAdd = '${IsAdd}'
			set @IP ='${IP}'
			set @Address = '${Address}'
			set @IPLocal = '${IPLocal}'
			set @Optype = '${OpType}'
			set @Memo = '${Memo}'
			--set @SourceUser = '${SourceUser}'

			declare @SourceLogName nvarchar(100)
			declare @SourceName nvarchar(100)
			declare @TargetLogName nvarchar(100)
			declare @TargetName nvarchar(100)

			set @IsStand ='NO'

			select @IsStand = [value] From T_Cfg where [Name] ='Use_StandPoint'

			--取记帐日期
			declare @xTime  nvarchar(8)
			declare @yTime  nvarchar(8)
			declare @StatisticsDay nvarchar(10)
			select @xTime = substring( convert(nvarchar(20), getdate(),120),12,9)
			select @yTime = [Value] from T_cfg where [Name]='Use_WORKTIME_START'
			if @xTime >= @yTime
			begin   --大于12点
				select @StatisticsDay = convert(nvarchar(10), getdate(),120) 
			end else
			begin  --小于12点
				select @StatisticsDay = convert(nvarchar(10), getdate()-1,120)  
			end

			--获取当前会员信用点数及剩余点数
			select @Principal = ISNULL(Principal,0), @Balance = ISNULL(Balance,0), @ClientPreState = State,@TargetLogName=LogName ,@TargetName =ClientName  from T_Client 
			where ClientID = @ClientID

			select @AgentID=AgentID,@AgentPrincipalSource = ISNULL(Principal,0),@SourceLogName=LogName ,@SourceName=AgentName from T_Agent
			where AgentID = @AgentID

			--Select @SourceLogName=LogName ,@SourceName=AgentName  From T_Agent Where AgentID = @AgentID        
			--Select @TargetLogName=LogName ,@TargetName =ClientName From T_Client Where ClientID = @ClientID 

			if Upper(@IsAdd) = 'TRUE' -- 洗点
			begin
			  set @Operator = 'XD'
			  if @IsStand ='YES'
			  begin
				--标准模式
				   if @Principal = @Balance
				   begin
					 if @Point >  @Balance
					 begin
						raiserror('洗点数超过剩余点数！', 16, 1)
						return  
					 end
				   end

					 if @Principal > @Balance
				   begin
					 if @Point >  @Balance
					 begin
						raiserror('洗点数超过剩余点数！', 16, 1)
						return  
					 end
				   end

					 if @Principal < @Balance
				   begin
					 if @Point >  @Principal
					 begin
						raiserror('洗点数超过信用点数！', 16, 1)
						return  
					 end
				   end

				  -- 设置会员为暂停状态（限制会员交易）
				  update T_Client set
				  State = 'PAUSE'
				  where ClientID = @ClientID

				  -- 更新会员信用点数及剩余点数
				  update T_Client set 
				  Principal = ISNULL(Principal,0) - @Point,
				  Balance = ISNULL(Balance,0) - @Point
				  where ClientID = @ClientID

				  --更新代理点数
				  update T_Agent set
				  Principal = ISNULL(Principal,0) + @Point
				  where AgentID = @AgentID

				  -- 恢复会员状态
				  update T_Client set
				  State = @ClientPreState
				  where ClientID = @ClientID
        
				  --写入日志
				  INSERT INTO T_Point
							  ([PointID]
							  ,[CreateID]
							  ,[CreateTime]
							  ,[Delta]
							  ,[SourceID]
							  ,[SourcePrincipal_B]
							  ,[SourcePrincipal_E]
							  ,[TargetID]
							  ,[TargetBalance_B]
							  ,[TargetBalance_E]
							  ,[OperationType]
							  ,[TargetPrincipal_B]
							  ,[TargetPrincipal_E]
							  ,[IP]
							  ,[Address]
							  ,[IPLocal]
							  ,[SourceLogName]
							  ,[SourceName]
							  ,[TargetLogName]
							  ,[TargetName]
							  ,[StatisticsDay]
							)
						VALUES (
							  replace(convert(varchar(36),newid()),'-','')
							  ,@CreateID
							  ,convert(nvarchar(20),getdate(),120)
							  ,@Point
							  ,@AgentID
							  ,@AgentPrincipalSource
							  ,@AgentPrincipalSource + @Point
							  ,@ClientID
							  ,@Balance
							  ,@Balance - @Point
							  ,@Operator    -- 洗XD
							  ,@Principal
							  ,@Principal - @Point
							  ,@IP
							  ,@Address
							  ,@IPLocal
							  ,@SourceLogName
							  ,@SourceName
							  ,@TargetLogName
							  ,@TargetName
							  ,@StatisticsDay
							)
						--写入交易日志
					  INSERT INTO T_TransactionLog
								  ([LogID]
								  ,[OpType]
								  ,[OpReason]
								  ,[UserID]
								  ,[UserName]
								  ,[TransactionPoint]
								  ,[SourceUser]
								  ,[SoureInto]
								  ,[RealInto]
								  ,[RealPoint]
								  ,[TransactionPoint_B]
								  ,[TransactionPoint_E]
								  ,[OpTime]
								  ,[Operator]
								  ,[OpInfo]
								  ,[IP]
								  ,[Address]
								  ,[Remark]
								  ,[OperatorID]
								)
							VALUES (
								  replace(convert(varchar(36),newid()),'-','')
								  ,@OpType
								  ,'会员上下分操作'--
								  ,@TargetLogName
								  ,@TargetName
								  ,0-@Point
								  ,@SourceLogName
								  ,0
								  ,0-@Point
								  ,0-@Point
								  ,@Balance    -- 洗XD
								  ,@Balance -@Point
								  ,convert(nvarchar(20),getdate(),120)
								  ,(select top 1 LogName from T_Agent where AgentID =@CreateID)
								  ,@OpType
								  ,@IP
								  ,@Address
								  ,@Memo
								  ,@CreateID
							)

				  select '-1' as ErrorCode 

			  end else
			  begin
				--非标准模式
				if @Point > @Balance 
				begin
				   raiserror('洗点数超过剩余点数！', 16, 1)
				   return 
				end
				  -- 设置会员为暂停状态（限制会员交易）
				  update T_Client set
				  State = 'PAUSE'
				  where ClientID = @ClientID

				  -- 更新会员信用点数及剩余点数
				  update T_Client set       
				  Balance = ISNULL(Balance,0) - @Point
				  where ClientID = @ClientID

				  --更新代理点数
				  update T_Agent set
				  Principal = ISNULL(Principal,0) + @Point
				  where AgentID = @AgentID

				  -- 恢复会员状态
				  update T_Client set
				  State = @ClientPreState
				  where ClientID = @ClientID

				  --写入日志
				  INSERT INTO T_Point
							  ([PointID]
							  ,[CreateID]
							  ,[CreateTime]
							  ,[Delta]
							  ,[SourceID]
							  ,[SourcePrincipal_B]
							  ,[SourcePrincipal_E]
							  ,[TargetID]
							  ,[TargetBalance_B]
							  ,[TargetBalance_E]
							  ,[OperationType]
							  ,[IP]
							  ,[Address]
							  ,[IPLocal]
							  ,[SourceLogName]
							  ,[SourceName]
							  ,[TargetLogName]
							  ,[TargetName]
							  ,[StatisticsDay]
							)                  
						VALUES (
							  replace(convert(varchar(36),newid()),'-','')
							  ,@CreateID
							  ,convert(nvarchar(20),getdate(),120)
							  ,@Point
							  ,@AgentID
							  ,@AgentPrincipalSource
							  ,@AgentPrincipalSource + @Point
							  ,@ClientID
							  ,@Balance
							  ,@Balance - @Point
							  ,@Operator    -- 洗XD      
							  ,@IP
							  ,@Address
							  ,@IPLocal
							  ,@SourceLogName
							  ,@SourceName
							  ,@TargetLogName
							  ,@TargetName
							  ,@StatisticsDay
							)
						--写入交易日志
					  INSERT INTO T_TransactionLog
								  ([LogID]
								  ,[OpType]
								  ,[OpReason]
								  ,[UserID]
								  ,[UserName]
								  ,[TransactionPoint]
								  ,[SourceUser]
								  ,[SoureInto]
								  ,[RealInto]
								  ,[RealPoint]
								  ,[TransactionPoint_B]
								  ,[TransactionPoint_E]
								  ,[OpTime]
								  ,[Operator]
								  ,[OpInfo]
								  ,[IP]
								  ,[Address]
								  ,[Remark]
								  ,[OperatorID]
								)
							VALUES (
								  replace(convert(varchar(36),newid()),'-','')
								  ,@OpType
								  ,'会员上下分操作'--
								  ,@TargetLogName
								  ,@TargetName
								  ,0-@Point
								  ,@SourceLogName
								  ,0
								  ,0-@Point
								  ,0-@Point
								  ,@Balance    -- 洗XD
								  ,@Balance -@Point
								  ,convert(nvarchar(20),getdate(),120)
								  ,(select top 1 LogName from T_Agent where AgentID =@CreateID)
								  ,@OpType
								  ,@IP
								  ,@Address
								  ,@Memo
								  ,@CreateID
							)
				  select '-1' as ErrorCode 
			  end
			end else
			begin
			  set @Operator = 'BD'  -- 补点
			  if @IsStand ='YES'
			  begin
			  --标准模式
				  if @Point > @AgentPrincipalSource
				  begin
					 raiserror('补点数超过代理剩余点数！', 16, 1)
					 return 
				  end
				  -- 设置会员为暂停状态（限制会员交易）
				  update T_Client set
				  State = 'PAUSE'
				  where ClientID = @ClientID

				  -- 更新会员信用点数及剩余点数
				  update T_Client set       
				  Balance = ISNULL(Balance,0) + @Point,
				  Principal = ISNULL(Principal,0) + @Point
				  where ClientID = @ClientID

				  --更新代理点数
				  update T_Agent set
				  Principal = ISNULL(Principal,0) - @Point
				  where AgentID = @AgentID

				  -- 恢复会员状态
				  update T_Client set
				  State = @ClientPreState
				  where ClientID = @ClientID

					   --写入日志
				  INSERT INTO T_Point
							  ([PointID]
							  ,[CreateID]
							  ,[CreateTime]
							  ,[Delta]
							  ,[SourceID]
							  ,[SourcePrincipal_B]
							  ,[SourcePrincipal_E]
							  ,[TargetID]
							  ,[TargetBalance_B]
							  ,[TargetBalance_E]
							  ,[OperationType]
							  ,[TargetPrincipal_B]
							  ,[TargetPrincipal_E]
							  ,[IP]
							  ,[Address]
							  ,[IPLocal]
							  ,[SourceLogName]
							  ,[SourceName]
							  ,[TargetLogName]
							  ,[TargetName]
							  ,[StatisticsDay]
							)
						VALUES (
							  replace(convert(varchar(36),newid()),'-','')
							  ,@CreateID
							  ,convert(nvarchar(20),getdate(),120)
							  ,@Point
							  ,@AgentID
							  ,@AgentPrincipalSource
							  ,@AgentPrincipalSource - @Point
							  ,@ClientID
							  ,@Balance
							  ,@Balance + @Point
							  ,@Operator    -- 洗XD
							  ,@Principal
							  ,@Principal + @Point
							  ,@IP
							  ,@Address
							  ,@IPLocal
							  ,@SourceLogName
							  ,@SourceName
							  ,@TargetLogName
							  ,@TargetName
							  ,@StatisticsDay
							)
							--写入交易日志
						INSERT INTO T_TransactionLog
								  ([LogID]
								  ,[OpType]
								  ,[OpReason]
								  ,[UserID]
								  ,[UserName]
								  ,[TransactionPoint]
								  ,[SourceUser]
								  ,[SoureInto]
								  ,[RealInto]
								  ,[RealPoint]
								  ,[TransactionPoint_B]
								  ,[TransactionPoint_E]
								  ,[OpTime]
								  ,[Operator]
								  ,[OpInfo]
								  ,[IP]
								  ,[Address]
								  ,[Remark]
								  ,[OperatorID]
								)
							VALUES (
								  replace(convert(varchar(36),newid()),'-','')
								  ,@OpType
								  ,'会员上下分操作'--
								  ,@TargetLogName
								  ,@TargetName
								  ,@Point
								  ,@SourceLogName
								  ,0
								  ,@Point
								  ,@Point
								  ,@Balance    -- 洗XD
								  ,@Balance + @Point
								  ,convert(nvarchar(20),getdate(),120)
								  ,(select top 1 LogName from T_Agent where AgentID =@CreateID)
								  ,@OpType
								  ,@IP
								  ,@Address
								  ,@Memo
								  ,@CreateID
							)
				  select '-1' as ErrorCode           

			  end else
			  begin
			  --非标准模式
				  if @Point > @AgentPrincipalSource
				  begin
					 raiserror('补点数超过代理剩余点数！', 16, 1)
					 return 
				  end
				  -- 设置会员为暂停状态（限制会员交易）
				  update T_Client set
				  State = 'PAUSE'
				  where ClientID = @ClientID

				  -- 更新会员信用点数及剩余点数
				  update T_Client set       
				  Balance = ISNULL(Balance,0) + @Point      
				  where ClientID = @ClientID

				  --更新代理点数
				  update T_Agent set
				  Principal = ISNULL(Principal,0) - @Point
				  where AgentID = @AgentID

				  -- 恢复会员状态
				  update T_Client set
				  State = @ClientPreState
				  where ClientID = @ClientID
                   
				  --写入日志
				  INSERT INTO T_Point
							  ([PointID]
							  ,[CreateID]
							  ,[CreateTime]
							  ,[Delta]
							  ,[SourceID]
							  ,[SourcePrincipal_B]
							  ,[SourcePrincipal_E]
							  ,[TargetID]
							  ,[TargetBalance_B]
							  ,[TargetBalance_E]
							  ,[OperationType]
							  ,[IP]
							  ,[Address]
							  ,[IPLocal]
							  ,[SourceLogName]
							  ,[SourceName]
							  ,[TargetLogName]
							  ,[TargetName]
							  ,[StatisticsDay]
						)                  
						VALUES (
							  replace(convert(varchar(36),newid()),'-','')
							  ,@CreateID
							  ,convert(nvarchar(20),getdate(),120)
							  ,@Point
							  ,@AgentID
							  ,@AgentPrincipalSource
							  ,@AgentPrincipalSource - @Point
							  ,@ClientID
							  ,@Balance
							  ,@Balance + @Point
							  ,@Operator    -- 补BD                  
							  ,@IP
							  ,@Address
							  ,@IPLocal
							  ,@SourceLogName
							  ,@SourceName
							  ,@TargetLogName
							  ,@TargetName
							  ,@StatisticsDay
						)
							--写入交易日志
						INSERT INTO T_TransactionLog
								  ([LogID]
								  ,[OpType]
								  ,[OpReason]
								  ,[UserID]
								  ,[UserName]
								  ,[TransactionPoint]
								  ,[SourceUser]
								  ,[SoureInto]
								  ,[RealInto]
								  ,[RealPoint]
								  ,[TransactionPoint_B]
								  ,[TransactionPoint_E]
								  ,[OpTime]
								  ,[Operator]
								  ,[OpInfo]
								  ,[IP]
								  ,[Address]
								  ,[Remark]
								  ,[OperatorID]
								)
							VALUES (
								  replace(convert(varchar(36),newid()),'-','')
								  ,@OpType
								  ,'会员上下分操作'--
								  ,@TargetLogName
								  ,@TargetName
								  ,@Point
								  ,@SourceLogName
								  ,0
								  ,@Point
								  ,@Point
								  ,@Balance    -- 洗XD
								  ,@Balance + @Point
								  ,convert(nvarchar(20),getdate(),120)
								  ,(select top 1 LogName from T_Agent where AgentID =@CreateID)
								  ,@OpType
								  ,@IP
								  ,@Address
								  ,@Memo
								  ,@CreateID
							)
				  select '-1' as ErrorCode 
			  end
			end
		]]>
	</sql>

	<sql id="A_GetAgentSubByAgentID">
		<![CDATA[
			--获取指定代理子账号列表
			 select AgentSubID  AS_ID
			 ,AgentID AS_AID
			 ,LogName AS_UserID
			 ,Pwd AS_Password
			 ,case when ([State]='YES') then '启用' when ([State]='NO') then '锁定' else '暂停' end as AS_State
			 ,AgentSubName AS_Name
			 from T_AgentSub where AgentID = '${AgentID}'
		]]>
	</sql>

	<sql id="A_UpdateT_AgentSub">
		<![CDATA[ 
			--修改子账号信息
			declare @AgentSubID nvarchar(40)
			declare @LogName nvarchar(100)
			declare @Count int
    
			set @AgentSubID = '${AgentSubID}'
			set @LogName = '${LogName}' 


			if (@Count>0)
			begin
				raiserror('子账号登录名称已经存在',16,1)
				return
			end

			--------------------------------------------------------
			--修改子账号信息
			----------------------------------------------------------
			##'${UpAgentSub}'##
			
			select '-1' as ErrorCode 
		]]>
	</sql>

	<sql id="A_GetAgentTotalLoopPage">
		<![CDATA[
			------------------------------------
			---代理多日汇总查询
			-- 返回列:代理号 名称 账单日期 总赢 洗码费 公司金额 代理金额 总押码 实际押码 总洗码量  加点 减点 小费 和局费 庄洗码
			------------------------------------
			-- 输入参数
			declare @ParentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			DECLARE @pageSize INTEGER --每页数量
			DECLARE @curePage INTEGER --当前页
			DECLARE @TotalRecords INTEGER --总记录数

			SET @pageSize ='${PageSize}'
			SET @curePage ='${CurePage}'

			set @ParentID = '${ParentID}'
			set @StartDate = '${StartDate}'
			set @EndDate = '${EndDate}'

			select
				AgentID
				,Principal
				,F_3
			into #CID				
			from T_Agent where AgentID = @ParentID or ParentID = @ParentID

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.Principal 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
				,SUM(CompanyAmount) CompanyAmount
				,SUM(AgentAmount)  AgentAmount
				,SUM(DrawFee) DrawFee
				,SUM(DrawSum) DrawSum
				,SUM(a.WashFee) WashFee  
				,SUM(WashSum) WashSum
				,SUM(ChouShui) ChouShui
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(TipSum) TipSum
				,SUM(Wash_Z) Wash_Z
			into #AgentTemp
			from T_BetBill_Wash_Archive a (nolock), #CID b 
			,T_BetBill_Archive c (nolock)  
			where  a.AgentID = b.AgentID and a.BillID = c.BillID  and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate ${InWhereSql}
			group by a.AgentID,a.AgentName,a.LogName,b.Principal,b.F_3,a.DrawRate,a.WashRate,a.IntoRate 

			insert #AgentTemp

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.Principal 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
				,SUM(CompanyAmount) CompanyAmount
				,SUM(AgentAmount)  AgentAmount
				,SUM(DrawFee) DrawFee
				,SUM(DrawSum) DrawSum
				,SUM(a.WashFee) WashFee  
				,SUM(WashSum) WashSum
				,SUM(ChouShui) ChouShui
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(TipSum) TipSum
				,SUM(Wash_Z) Wash_Z
			from T_BetBill_Wash a , #CID b  
			, T_BetBill c  
			where a.AgentID = b.AgentID and  a.BillID = c.BillID and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate ${InWhereSql}
			group by a.AgentID,a.AgentName,a.LogName,b.Principal,b.F_3,a.DrawRate,a.WashRate,a.IntoRate

			select 
				AgentID A_ID
				,AgentName A_Name
				,LogName A_UserID
				,Principal A_Prncpl
				,F_3 A_Perm
				,DrawRate A_DrawR
				,WashRate A_WashR
				,IntoRate A_IntoR
				,SUM(CompanyAmount) A_CmpyMony
				,SUM(AgentAmount) A_Mony
				,SUM(DrawFee) A_DrawF
				,SUM(DrawSum) A_DrawS
				,SUM(WashFee) A_WashF
				,CAST(0 as numeric(10,4)) A_WashF_No
				,SUM(WashSum) A_WashS
				,CAST(0 as numeric(12,2)) A_WashS_No
				,SUM(ChouShui) A_TotalOdds
				,CAST(0 as numeric(10,4)) A_TotalOdds_No
				,SUM(WinSum) A_TotalWin
				,SUM(BetSum) A_BetS
				,SUM(BetSumAct) A_BetSAct
				,SUM(TipSum) A_TipSum
				,SUM(Wash_Z) A_WashS_Z
			into #AgentCount
			from #AgentTemp group by AgentID,AgentName,LogName,Principal,F_3,DrawRate,WashRate,IntoRate			

			select @TotalRecords = count(*) from #AgentCount

			SELECT TOP (@pageSize) *
				From (
					SELECT TOP (@pageSize * @curePage) ROW_NUMBER() OVER (order by ABS(A_TotalWin) desc, A_Name) AS rowNo
						,@TotalRecords TotalRecords
						,*
					From #AgentCount
				)as a
			WHERE rowNo BETWEEN (((@curePage - 1) * @pageSize) + 1)
			AND (@pageSize * @curePage)
			order by ABS(A_TotalWin) desc, A_Name

			drop table #CID
			drop table #AgentTemp
			drop table #AgentCount
		]]>
	</sql>

	<sql id="A_GetACountCount_New">
		<![CDATA[
			------------------------------------
			---代理多日汇总查询
			-- 返回列:代理号 名称 账单日期 总赢 洗码费 公司金额 代理金额 总押码 实际押码 总洗码量  加点 减点 小费 和局费 庄洗码
			------------------------------------
			-- 输入参数
			declare @ParentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @ParentID = '${ParentID}'
			set @StartDate = '${StartDate}'
			set @EndDate = '${EndDate}'

			select
				AgentID
				,Principal
				,F_3
			into #CID				
			from T_Agent where AgentID = @ParentID or ParentID = @ParentID

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.Principal 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
			into #AgentTemp
			from T_BetBill_Wash_Archive a (nolock), #CID b 
			,T_BetBill_Archive c (nolock)  
			where  a.AgentID = b.AgentID and a.BillID = c.BillID  and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate ${InWhereSql}
			group by a.AgentID,a.AgentName,a.LogName,b.Principal,b.F_3,a.DrawRate,a.WashRate,a.IntoRate 

			insert #AgentTemp

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.Principal 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
			from T_BetBill_Wash a , #CID b  
			, T_BetBill c  
			where a.AgentID = b.AgentID and  a.BillID = c.BillID and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate ${InWhereSql}
			group by a.AgentID,a.AgentName,a.LogName,b.Principal,b.F_3,a.DrawRate,a.WashRate,a.IntoRate
			
			select 
				AgentID A_ID
				,AgentName A_Name
				,LogName A_UserID
				,Principal A_Prncpl
				,F_3 A_Perm
				,DrawRate A_DrawR
				,WashRate A_WashR
				,IntoRate A_IntoR
			into #AgentCount
			from #AgentTemp group by AgentID,AgentName,LogName,Principal,F_3,DrawRate,WashRate,IntoRate			

			select count(*) from #AgentCount			

			drop table #CID
			drop table #AgentTemp
			drop table #AgentCount
		]]>
	</sql>

	<sql id="A_GetAgentTotalDataNew">
		<![CDATA[
			------------------------------------
			---代理多日汇总查询
			-- 返回列:代理号 名称 账单日期 总赢 洗码费 公司金额 代理金额 总押码 实际押码 总洗码量  加点 减点 小费 和局费 庄洗码
			------------------------------------
			-- 输入参数
			declare @ParentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			DECLARE @pageSize INTEGER --每页数量
			DECLARE @curePage INTEGER --当前页
			DECLARE @TotalRecords INTEGER --总记录数

			SET @pageSize ='${PageSize}'
			SET @curePage ='${CurePage}'

			set @ParentID = '${ParentID}'
			set @StartDate = '${StartDate}'
			set @EndDate = '${EndDate}'

			select
				AgentID
				,Principal
				,F_3
			into #CID				
			from T_Agent where AgentID = @ParentID or ParentID = @ParentID

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.Principal 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
				,SUM(CompanyAmount) CompanyAmount
				,SUM(AgentAmount)  AgentAmount
				,SUM(DrawFee) DrawFee
				,SUM(DrawSum) DrawSum
				,SUM(a.WashFee) WashFee  
				,SUM(WashSum) WashSum
				,SUM(ChouShui) ChouShui
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(TipSum) TipSum
				,SUM(Wash_Z) Wash_Z
			into #AgentTemp
			from T_BetBill_Wash_Archive a (nolock), #CID b 
			,T_BetBill_Archive c (nolock)  
			where  a.AgentID = b.AgentID and a.BillID = c.BillID  and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate ${InWhereSql}
			group by a.AgentID,a.AgentName,a.LogName,b.Principal,b.F_3,a.DrawRate,a.WashRate,a.IntoRate 

			insert #AgentTemp

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.Principal 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
				,SUM(CompanyAmount) CompanyAmount
				,SUM(AgentAmount)  AgentAmount
				,SUM(DrawFee) DrawFee
				,SUM(DrawSum) DrawSum
				,SUM(a.WashFee) WashFee  
				,SUM(WashSum) WashSum
				,SUM(ChouShui) ChouShui
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(TipSum) TipSum
				,SUM(Wash_Z) Wash_Z
			from T_BetBill_Wash a , #CID b  
			, T_BetBill c  
			where a.AgentID = b.AgentID and  a.BillID = c.BillID and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate ${InWhereSql}
			group by a.AgentID,a.AgentName,a.LogName,b.Principal,b.F_3,a.DrawRate,a.WashRate,a.IntoRate

			select 
				AgentID A_ID
				,AgentName A_Name
				,LogName A_UserID
				,Principal A_Prncpl
				,F_3 A_Perm
				,DrawRate A_DrawR
				,WashRate A_WashR
				,IntoRate A_IntoR
				,SUM(CompanyAmount) A_CmpyMony
				,SUM(AgentAmount) A_Mony
				,SUM(DrawFee) A_DrawF
				,SUM(DrawSum) A_DrawS
				,SUM(WashFee) A_WashF
				,CAST(0 as numeric(10,4)) A_WashF_No
				,SUM(WashSum) A_WashS
				,CAST(0 as numeric(12,2)) A_WashS_No
				,SUM(ChouShui) A_TotalOdds
				,CAST(0 as numeric(10,4)) A_TotalOdds_No
				,SUM(WinSum) A_TotalWin
				,SUM(BetSum) A_BetS
				,SUM(BetSumAct) A_BetSAct
				,SUM(TipSum) A_TipSum
				,SUM(Wash_Z) A_WashS_Z
			into #AgentCount
			from #AgentTemp group by AgentID,AgentName,LogName,Principal,F_3,DrawRate,WashRate,IntoRate
			
			select 
				count(*) as TotalRecords
				,SUM(A_BetS) A_Bets_T
				,SUM(A_BetSAct) A_BetSAct_T
				,SUM(A_DrawF) A_DrawF_T
				,SUM(A_DrawS) A_DrawS_T
				,SUM(A_TipSum) A_TipSum_T
				,SUM(A_TotalOdds) A_TotalOdds_T
				,SUM(A_TotalWin) A_TotalWin_T
				,SUM(A_WashF) A_WashF_T
				,SUM(A_WashS_Z) A_WashS_Z_T
				,SUM(A_WashS) A_WashS_T		
				,SUM(A_CmpyMony + ( A_TotalOdds* (1-A_IntoR))) A_CmpyMony_T	
				,SUM(A_Mony + ( A_TotalOdds * A_IntoR)) A_Mony_T		  
			from #AgentCount 

			drop table #CID
			drop table #AgentTemp
			drop table #AgentCount
		]]>
	</sql>

	<sql id="A_GetAgentDayDataPage">
		<![CDATA[
			------------------------------------
			---代理每日汇总查询
			-- 返回列:代理号 名称 账单日期 总赢 洗码费 公司金额 代理金额 总押码 实际押码 总洗码量  加点 减点 小费 和局费 庄洗码
			------------------------------------
			-- 输入参数
			declare @ParentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			DECLARE @pageSize INTEGER --每页数量
			DECLARE @curePage INTEGER --当前页
			DECLARE @TotalRecords INTEGER --总记录数

			SET @pageSize ='${PageSize}'
			SET @curePage ='${CurePage}'

			set @ParentID = '${ParentID}'
			set @StartDate = '${StartDate}'
			set @EndDate = '${EndDate}'

			select
				AgentID
				,Principal
				,F_3
			into #CID				
			from T_Agent where AgentID = @ParentID or ParentID = @ParentID

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
				,StatisticsDay
				,SUM(CompanyAmount) CompanyAmount
				,SUM(AgentAmount)  AgentAmount
				,SUM(DrawFee) DrawFee
				,SUM(DrawSum) DrawSum
				,SUM(a.WashFee) WashFee  
				,SUM(WashSum) WashSum
				,SUM(ChouShui) ChouShui
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(TipSum) TipSum
				,SUM(Wash_Z) Wash_Z
			into #AgentTemp
			from T_BetBill_Wash_Archive a (nolock) , #CID b  
			, T_BetBill_Archive c (nolock)  
			where a.AgentID = b.AgentID and a.BillID = c.BillID and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate 
			group by a.AgentID,a.AgentName,a.LogName,b.F_3,a.DrawRate,a.WashRate,a.IntoRate,StatisticsDay

			insert #AgentTemp

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
				,StatisticsDay
				,SUM(CompanyAmount) CompanyAmount
				,SUM(AgentAmount)  AgentAmount
				,SUM(DrawFee) DrawFee
				,SUM(DrawSum) DrawSum
				,SUM(a.WashFee) WashFee  
				,SUM(WashSum) WashSum
				,SUM(ChouShui) ChouShui
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(TipSum) TipSum
				,SUM(Wash_Z) Wash_Z
			from T_BetBill_Wash a , #CID b  
			,T_BetBill c   
			where a.AgentID = b.AgentID and a.BillID = c.BillID and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate 
			group by a.AgentID,a.AgentName,a.LogName,b.F_3,a.DrawRate,a.WashRate,a.IntoRate,StatisticsDay

			select 
				AgentID A_ID
				,AgentName A_Name
				,LogName A_UserID
				,CAST(0 as numeric(20,4)) A_Prncpl
				,F_3 A_Perm
				,DrawRate A_DrawR
				,WashRate A_WashR
				,IntoRate A_IntoR
				,StatisticsDay A_CreDate
				,SUM(CompanyAmount) A_CmpyMony
				,SUM(AgentAmount) A_Mony
				,SUM(DrawFee) A_DrawF
				,SUM(DrawSum) A_DrawS
				,SUM(WashFee) A_WashF
				,CAST(0 as numeric(10,4)) A_WashF_No
				,SUM(WashSum) A_WashS
				,CAST(0 as numeric(12,2)) A_WashS_No
				,SUM(ChouShui) A_TotalOdds
				,CAST(0 as numeric(10,4)) A_TotalOdds_No
				,SUM(WinSum) A_TotalWin
				,SUM(BetSum) A_BetS
				,SUM(BetSumAct) A_BetSAct
				,SUM(TipSum) A_TipSum
				,SUM(Wash_Z) A_WashS_Z
			into #AgentCount
			from #AgentTemp group by AgentID,AgentName,LogName,F_3,DrawRate,WashRate,IntoRate,StatisticsDay
			
			select 
				a.AgentID
				,CreateTime
				,a.Principal
			into #Principal
			from T_Agent_Archive a,#CID b where a.AgentID = b.AgentID and a.CreateTime between @StartDate and @EndDate

			insert #Principal

			select 
				AgentID
				,CONVERT(varchar(10), GETDATE(), 120) AS CreateTime
				,Principal
			from T_Agent where AgentID = @ParentID or ParentID = @ParentID

			update a set
				a.A_Prncpl =ISNULL( b.Principal,0)
			from #AgentCount a,#Principal b where a.A_ID = b.AgentID and a.A_CreDate = b.CreateTime

			select @TotalRecords = count(*) from #AgentCount

			SELECT TOP (@pageSize) *
				From (
					SELECT TOP (@pageSize * @curePage) ROW_NUMBER() OVER (order by ABS(A_TotalWin) desc, A_Name) AS rowNo
						,@TotalRecords TotalRecords
						,*
					From #AgentCount
				)as a
			WHERE rowNo BETWEEN (((@curePage - 1) * @pageSize) + 1)
			AND (@pageSize * @curePage)
			order by ABS(A_TotalWin) desc, A_Name

			drop table #CID
			drop table #AgentTemp
			drop table #AgentCount
			drop table #Principal
		]]>
	</sql>

	<sql id="A_GetADayCount">
		<![CDATA[
			------------------------------------
			---代理每日汇总查询
			-- 返回列:代理号 名称 账单日期 总赢 洗码费 公司金额 代理金额 总押码 实际押码 总洗码量  加点 减点 小费 和局费 庄洗码
			------------------------------------
			-- 输入参数
			declare @ParentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)


			set @ParentID = '${ParentID}'
			set @StartDate = '${StartDate}'
			set @EndDate = '${EndDate}'

			select
				AgentID
				,Principal
				,F_3
			into #CID				
			from T_Agent where AgentID = @ParentID or ParentID = @ParentID

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.Principal 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
				,StatisticsDay
			into #AgentTemp
			from T_BetBill_Wash_Archive a (nolock) , #CID b  
			, T_BetBill_Archive c (nolock)  
			where a.AgentID = b.AgentID and a.BillID = c.BillID and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate ${InWhereSql}
			group by a.AgentID,a.AgentName,a.LogName,b.Principal,b.F_3,a.DrawRate,a.WashRate,a.IntoRate,StatisticsDay

			insert #AgentTemp

			select
				a.AgentID 
				,a.AgentName 
				,a.LogName 
				,b.Principal 
				,b.F_3 
				,a.DrawRate 
				,a.WashRate 
				,a.IntoRate 
				,StatisticsDay
			from T_BetBill_Wash a , #CID b  
			,T_BetBill c  
			where a.AgentID = b.AgentID and a.BillID = c.BillID and c.State =N'#Pay' and c.StatisticsDay between @StartDate and @EndDate ${InWhereSql}
			group by a.AgentID,a.AgentName,a.LogName,b.Principal,b.F_3,a.DrawRate,a.WashRate,a.IntoRate,StatisticsDay

			select 
				AgentID A_ID
				,AgentName A_Name
				,LogName A_UserID
				,Principal A_Prncpl
				,F_3 A_Perm
				,DrawRate A_DrawR
				,WashRate A_WashR
				,IntoRate A_IntoR
				,StatisticsDay A_CreDate
			into #AgentCount
			from #AgentTemp group by AgentID,AgentName,LogName,Principal,F_3,DrawRate,WashRate,IntoRate,StatisticsDay
			
			select  count(*) from #AgentCount			

			drop table #CID
			drop table #AgentTemp
			drop table #AgentCount
		]]>
	</sql>

	<sql id="A_GetClientTotalLoopPage_New">
		<![CDATA[
			------------------------------------
			---会员多日汇总查询
			-- 返回列:代理号 名称 账单日期 总赢 洗码费 公司金额 代理金额 总押码 实际押码 总洗码量  加点 减点 小费 和局费 庄洗码
			------------------------------------
			-- 输入参数
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)
			declare @pageSize int
			declare @curePage int

			set @AgentID ='${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'
			set @pageSize = '${pageSize}'
			set @curePage ='${curePage}'
 
			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
				,SUM(vdq.WinSum) WinSum
				,SUM(vdq.BetSum) BetSum
				,SUM(vdq.BetSumAct) BetSumAct
				,SUM(vdq.ClientSum) ClientSum
				,SUM(vdq.DrawFee_Client) DrawFee_Client
				,SUM(vdq.DrawSum) DrawSum
				,SUM(vdq.TipSum) TipSum
				,SUM(vdq.Wash_Z) Wash_Z
				,SUM(vdq.WashFee) WashFee
				,SUM(vdq.WashSum_Client) WashSum_Client
				,SUM(vdq.WashSum_D) WashSum_D
				,SUM(vdq.WashSum_S) WashSum_S
				,SUM(vdq.WashSum_Z) WashSum_Z
				,SUM(vdq.WinSum_Agent) WinSum_Agent
			into #billTemp
			from T_BetBill vdq,T_Client b
			where vdq.ClientID = b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate 
			and (b.ClientID = @AgentID or b.AgentID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance

			insert #billTemp 

			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
				,SUM(vdq.WinSum) WinSum
				,SUM(vdq.BetSum) BetSum
				,SUM(vdq.BetSumAct) BetSumAct
				,SUM(vdq.ClientSum) ClientSum
				,SUM(vdq.DrawFee_Client) DrawFee_Client
				,SUM(vdq.DrawSum) DrawSum
				,SUM(vdq.TipSum) TipSum
				,SUM(vdq.Wash_Z) Wash_Z
				,SUM(vdq.WashFee) WashFee
				,SUM(vdq.WashSum_Client) WashSum_Client
				,SUM(vdq.WashSum_D) WashSum_D
				,SUM(vdq.WashSum_S) WashSum_S
				,SUM(vdq.WashSum_Z) WashSum_Z
				,SUM(vdq.WinSum_Agent) WinSum_Agent
			from T_BetBill_Archive vdq (nolock),T_Client b
			where vdq.ClientID =b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate
			and (b.AgentID = @AgentID or b.ClientID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance

			select 
				ClientID C_ID
				,ClientName C_Name
				,LogName C_UserID
				,WashRate_Client C_WashR
				,DrawRate_Client C_DrawR
				,Balance C_Balnc
				,SUM(WinSum) C_TotalWin
				,SUM(BetSum) C_BetS
				,SUM(BetSumAct) C_BetSAct
				,SUM(ClientSum) C_LoseWin
				,SUM(DrawFee_Client) C_DrawF
				,SUM(DrawSum) C_DrawS
				,SUM(TipSum) C_TipSum
				,SUM(Wash_Z) C_Wash_Z
				,SUM(WashFee) C_WashF
				,SUM(WashSum_Client) C_WashS
				,SUM(WashSum_D) C_WashS_D
				,SUM(WashSum_S) C_WashS_S
				,SUM(WashSum_Z) C_WashS_Z
				,SUM(WinSum_Agent) C_TotalWin_A
				,CAST(0 as numeric(20,4)) as C_Charge
				,CAST(0 as numeric(20,4)) as C_Cash
			into #countsTemp 
			from #billTemp a group by ClientID,ClientName,LogName,WashRate_Client,DrawRate_Client,Balance
			
			select top (@pageSize) * into #lastTemp from
			(
				select top (@pageSize*@curePage) ROW_NUMBER() over(order by ABS(C_TotalWin) desc, C_UserID) as rowNo
					,*
					,(select count(*) from #countsTemp) TotalRecords
				from #countsTemp
			)b where rowNo between (((@curePage-1)*@pageSize)+1) and (@curePage*@pageSize)
			order by ABS(C_TotalWin) desc, C_UserID

			select 
				a.TargetID C_ID 
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash
			into #point	 
			from T_Point a,T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID

			insert #point 

			select 
				a.TargetID 
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash	 
			from T_Point_Archive a(nolock),T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID

			insert #point 

			select 
				a.SourceID 
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash	 
			from T_Point a,T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'XD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID

			insert #point 

			select 
				a.SourceID 
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash	 
			from T_Point_Archive a(nolock),T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'XD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID

			insert #point 

			select 
				a.TargetID 
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point a,T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and (a.OperationType = 'XD' or a.OperationType = 'QL' or a.OperationType = 'QK')
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID

			insert #point

			select 
				a.TargetID 
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point_Archive a(nolock),T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and (a.OperationType = 'XD' or a.OperationType = 'QL' or a.OperationType = 'QK')
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID

			insert #point 

			select 
				a.SourceID 
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point a,T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID

			insert #point 

			select 
				a.SourceID 
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point_Archive a,T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			 and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID	

			select 
				C_ID
				,SUM(C_Charge) C_Charge
				,SUM(C_Cash) C_Cash
			into #pointSum
			from #point group by C_ID

			update a set
				a.C_Charge = ISNULL(b.C_Charge,0)
				,a.C_Cash = ISNULL(b.C_Cash,0)
			from #lastTemp a,#pointSum b where a.C_ID = b.C_ID

			select * from #lastTemp

			drop table #billTemp
			drop table #lastTemp
			drop table #countsTemp
			drop table #point
			drop table #pointSum
		]]>
	</sql>

	<sql id="A_GetCCountCount_New">
		<![CDATA[
			------------------------------------
			---会员多日汇总查询
			-- 返回列:代理号 名称 账单日期 总赢 洗码费 公司金额 代理金额 总押码 实际押码 总洗码量  加点 减点 小费 和局费 庄洗码
			------------------------------------
			-- 输入参数
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID ='${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'
 
			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
			into #billTemp
			from T_BetBill vdq,T_Client b
			where vdq.ClientID = b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate 
			and (b.ClientID = @AgentID or b.AgentID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance

			insert #billTemp 

			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
			from T_BetBill_Archive vdq (nolock),T_Client b
			where vdq.ClientID =b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate
			and (b.AgentID = @AgentID or b.ClientID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance

			select 
				ClientID C_ID
				,ClientName C_Name
				,LogName C_UserID
				,WashRate_Client C_WashR
				,DrawRate_Client C_DrawR
				,Balance C_Balnc
			into #countsTemp 
			from #billTemp a group by ClientID,ClientName,LogName,WashRate_Client,DrawRate_Client,Balance

			select COUNT(*) from #countsTemp

			drop table #billTemp
			drop table #countsTemp
		]]>
	</sql>

	<sql id="A_GetClientTotalData_New">
		<![CDATA[
			------------------------------------
			---会员多日汇总查询
			-- 返回列:代理号 名称 账单日期 总赢 洗码费 公司金额 代理金额 总押码 实际押码 总洗码量  加点 减点 小费 和局费 庄洗码
			------------------------------------
			-- 输入参数
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID ='${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'
 
			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
				,SUM(vdq.WinSum) WinSum
				,SUM(vdq.BetSum) BetSum
				,SUM(vdq.BetSumAct) BetSumAct
				,SUM(vdq.ClientSum) ClientSum
				,SUM(vdq.DrawFee_Client) DrawFee_Client
				,SUM(vdq.DrawSum) DrawSum
				,SUM(vdq.TipSum) TipSum
				,SUM(vdq.Wash_Z) Wash_Z
				,SUM(vdq.WashFee) WashFee
				,SUM(vdq.WashSum_Client) WashSum_Client
				,SUM(vdq.WashSum_D) WashSum_D
				,SUM(vdq.WashSum_S) WashSum_S
				,SUM(vdq.WashSum_Z) WashSum_Z
				,SUM(vdq.WinSum_Agent) WinSum_Agent
			into #billTemp
			from T_BetBill vdq,T_Client b
			where vdq.ClientID = b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate 
			and (b.ClientID = @AgentID or b.AgentID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance

			insert #billTemp 

			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
				,SUM(vdq.WinSum) WinSum
				,SUM(vdq.BetSum) BetSum
				,SUM(vdq.BetSumAct) BetSumAct
				,SUM(vdq.ClientSum) ClientSum
				,SUM(vdq.DrawFee_Client) DrawFee_Client
				,SUM(vdq.DrawSum) DrawSum
				,SUM(vdq.TipSum) TipSum
				,SUM(vdq.Wash_Z) Wash_Z
				,SUM(vdq.WashFee) WashFee
				,SUM(vdq.WashSum_Client) WashSum_Client
				,SUM(vdq.WashSum_D) WashSum_D
				,SUM(vdq.WashSum_S) WashSum_S
				,SUM(vdq.WashSum_Z) WashSum_Z
				,SUM(vdq.WinSum_Agent) WinSum_Agent
			from T_BetBill_Archive vdq (nolock),T_Client b
			where vdq.ClientID =b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate
			and (b.AgentID = @AgentID or b.ClientID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance

			select 
				ClientID C_ID
				,ClientName C_Name
				,LogName C_UserID
				,WashRate_Client C_WashR
				,DrawRate_Client C_DrawR
				,Balance C_Balnc
				,SUM(WinSum) C_TotalWin
				,SUM(BetSum) C_BetS
				,SUM(BetSumAct) C_BetSAct
				,SUM(ClientSum) C_LoseWin
				,SUM(DrawFee_Client) C_DrawF
				,SUM(DrawSum) C_DrawS
				,SUM(TipSum) C_TipSum
				,SUM(Wash_Z) C_Wash_Z
				,SUM(WashFee) C_WashF
				,SUM(WashSum_Client) C_WashS
				,SUM(WashSum_D) C_WashS_D
				,SUM(WashSum_S) C_WashS_S
				,SUM(WashSum_Z) C_WashS_Z
				,SUM(WinSum_Agent) C_TotalWin_A
				,CAST(0 as numeric(20,4)) as C_Charge
				,CAST(0 as numeric(20,4)) as C_Cash
			into #countsTemp 
			from #billTemp a group by ClientID,ClientName,LogName,WashRate_Client,DrawRate_Client,Balance		

			select 
				a.TargetID C_ID 
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash
			into #point	 
			from T_Point a,T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID

			insert #point 

			select 
				a.TargetID 
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash	 
			from T_Point_Archive a(nolock),T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID

			insert #point 

			select 
				a.SourceID 
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash	 
			from T_Point a,T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'XD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID

			insert #point 

			select 
				a.SourceID 
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash	 
			from T_Point_Archive a(nolock),T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'XD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID

			insert #point 

			select 
				a.TargetID 
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point a,T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and (a.OperationType = 'XD' or a.OperationType = 'QL' or a.OperationType = 'QK')
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID

			insert #point

			select 
				a.TargetID 
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point_Archive a(nolock),T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and (a.OperationType = 'XD' or a.OperationType = 'QL' or a.OperationType = 'QK')
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID

			insert #point 

			select 
				a.SourceID 
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point a,T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID

			insert #point 

			select 
				a.SourceID 
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point_Archive a,T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			 and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID	

			select 
				C_ID
				,SUM(C_Charge) C_Charge
				,SUM(C_Cash) C_Cash
			into #pointSum
			from #point group by C_ID

			update a set
				a.C_Charge = ISNULL(b.C_Charge,0)
				,a.C_Cash = ISNULL(b.C_Cash,0)
			from #countsTemp a,#pointSum b where a.C_ID = b.C_ID

			select
				SUM(C_WashS_Z) C_Wash_Z_T
				,SUM(C_WashF) C_WashF_T
				,SUM(C_WashS) C_WashS_T
				,SUM(C_TotalWin) C_TotalWin_T
				,SUM(C_LoseWin) C_LoseWin_T
				,SUM(C_DrawF) C_DrawF_T
				,SUM(C_DrawS) C_DrawS_T
				,SUM(C_Cash) C_Cash_T
				,SUM(C_Charge) C_Charge_T
				,SUM(C_BetS) C_BetS_T
				,SUM(C_BetSAct) C_BetActS_T
				,(select COUNT(*) from #countsTemp ) TotalRecords
			from #countsTemp 

			drop table #billTemp
			drop table #countsTemp
			drop table #point
			drop table #pointSum
		]]>
	</sql>

	<sql id="A_GetClientDayDataPage">
		<![CDATA[
			------------------------------------
			-- 会员单日汇总查询
			------------------------------------

			-- 输入参数
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)
			declare @pageSize int
			declare @curePage int

			set @AgentID ='${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'
			set @pageSize = '${pageSize}'
			set @curePage ='${curePage}'
 
			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
				,StatisticsDay
				,SUM(vdq.WinSum) WinSum
				,SUM(vdq.BetSum) BetSum
				,SUM(vdq.BetSumAct) BetSumAct
				,SUM(vdq.ClientSum) ClientSum
				,SUM(vdq.DrawFee_Client) DrawFee_Client
				,SUM(vdq.DrawSum) DrawSum
				,SUM(vdq.TipSum) TipSum
				,SUM(vdq.Wash_Z) Wash_Z
				,SUM(vdq.WashFee) WashFee
				,SUM(vdq.WashSum_Client) WashSum_Client
				,SUM(vdq.WashSum_D) WashSum_D
				,SUM(vdq.WashSum_S) WashSum_S
				,SUM(vdq.WashSum_Z) WashSum_Z
				,SUM(vdq.WinSum_Agent) WinSum_Agent
			into #billTemp
			from T_BetBill vdq,T_Client b
			where vdq.ClientID = b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate 
			and (b.ClientID = @AgentID or b.AgentID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance,StatisticsDay

			insert #billTemp 

			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
				,StatisticsDay
				,SUM(vdq.WinSum) WinSum
				,SUM(vdq.BetSum) BetSum
				,SUM(vdq.BetSumAct) BetSumAct
				,SUM(vdq.ClientSum) ClientSum
				,SUM(vdq.DrawFee_Client) DrawFee_Client
				,SUM(vdq.DrawSum) DrawSum
				,SUM(vdq.TipSum) TipSum
				,SUM(vdq.Wash_Z) Wash_Z
				,SUM(vdq.WashFee) WashFee
				,SUM(vdq.WashSum_Client) WashSum_Client
				,SUM(vdq.WashSum_D) WashSum_D
				,SUM(vdq.WashSum_S) WashSum_S
				,SUM(vdq.WashSum_Z) WashSum_Z
				,SUM(vdq.WinSum_Agent) WinSum_Agent
			from T_BetBill_Archive vdq (nolock),T_Client b
			where vdq.ClientID =b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate
			and (b.AgentID = @AgentID or b.ClientID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance,StatisticsDay

			select 
				ClientID C_ID
				,ClientName C_Name
				,LogName C_UserID
				,WashRate_Client C_WashR
				,DrawRate_Client C_DrawR
				,Balance C_Balnc
				,StatisticsDay C_CreDate
				,SUM(WinSum) C_TotalWin
				,SUM(BetSum) C_BetS
				,SUM(BetSumAct) C_BetSAct
				,SUM(ClientSum) C_LoseWin
				,SUM(DrawFee_Client) C_DrawF
				,SUM(DrawSum) C_DrawS
				,SUM(TipSum) C_TipSum
				,SUM(Wash_Z) C_Wash_Z
				,SUM(WashFee) C_WashF
				,SUM(WashSum_Client) C_WashS
				,SUM(WashSum_D) C_WashS_D
				,SUM(WashSum_S) C_WashS_S
				,SUM(WashSum_Z) C_WashS_Z
				,SUM(WinSum_Agent) C_TotalWin_A
				,CAST(0 as numeric(20,4)) as C_Charge
				,CAST(0 as numeric(20,4)) as C_Cash
			into #countsTemp 
			from #billTemp a group by ClientID,ClientName,LogName,WashRate_Client,DrawRate_Client,Balance,StatisticsDay
			
			select top (@pageSize) * into #lastTemp from
			(
				select top (@pageSize*@curePage) ROW_NUMBER() over(order by ABS(C_TotalWin) desc, C_UserID) as rowNo
					,*
				from #countsTemp
			)b where rowNo between (((@curePage-1)*@pageSize)+1) and (@curePage*@pageSize)
			order by ABS(C_TotalWin) desc, C_UserID

			select 
				a.TargetID C_ID 
				,StatisticsDay
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash
			into #point	 
			from T_Point a,T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID,StatisticsDay

			insert #point 

			select 
				a.TargetID 
				,StatisticsDay
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash	 
			from T_Point_Archive a(nolock),T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID,StatisticsDay

			insert #point 

			select 
				a.SourceID 
				,StatisticsDay
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash	 
			from T_Point a,T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'XD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID,StatisticsDay

			insert #point 

			select 
				a.SourceID 
				,StatisticsDay
				,SUM(a.Delta) C_Charge
				,CAST(0 as numeric(20,4)) C_Cash	 
			from T_Point_Archive a(nolock),T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'XD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID,StatisticsDay

			insert #point 

			select 
				a.TargetID 
				,StatisticsDay
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point a,T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and (a.OperationType = 'XD' or a.OperationType = 'QL' or a.OperationType = 'QK')
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID,StatisticsDay

			insert #point

			select 
				a.TargetID 
				,StatisticsDay
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point_Archive a(nolock),T_Client b
			where a.TargetID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and (a.OperationType = 'XD' or a.OperationType = 'QL' or a.OperationType = 'QK')
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.TargetID,StatisticsDay

			insert #point 

			select 
				a.SourceID 
				,StatisticsDay
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point a,T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID,StatisticsDay

			insert #point 

			select 
				a.SourceID 
				,StatisticsDay
				,CAST(0 as numeric(20,4)) C_Charge
				,SUM(Delta) C_Cash	 
			from T_Point_Archive a,T_Client b
			where a.SourceID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate and a.Delta>0 
			and Delta >0 and a.OperationType = 'BD'
			 and (b.AgentID = @AgentID or b.ClientID = @AgentID)
			group by a.SourceID	,StatisticsDay

			select 
				C_ID
				,StatisticsDay
				,SUM(C_Charge) C_Charge
				,SUM(C_Cash) C_Cash
			into #pointSum
			from #point group by C_ID,StatisticsDay

			update a set
				a.C_Charge = ISNULL(b.C_Charge,0)
				,a.C_Cash = ISNULL(b.C_Cash,0)
			from #lastTemp a,#pointSum b where a.C_ID = b.C_ID and a.C_CreDate = b.StatisticsDay


			select * from #lastTemp

			drop table #billTemp
			drop table #lastTemp
			drop table #countsTemp
			drop table #point
			drop table #pointSum
		]]>
	</sql>

	<sql id="A_GetCDayCount">
		<![CDATA[
			------------------------------------
			-- 会员单日汇总查询
			------------------------------------

			-- 输入参数
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID ='${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'
 
			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
				,StatisticsDay
			into #billTemp
			from T_BetBill vdq,T_Client b
			where vdq.ClientID = b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate 
			and (b.ClientID = @AgentID or b.AgentID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance,StatisticsDay

			insert #billTemp 

			select 
				vdq.ClientID 
				,vdq.LogName
				,vdq.ClientName
				,vdq.WashRate_Client
				,vdq.DrawRate_Client
				,Balance
				,StatisticsDay
			from T_BetBill_Archive vdq (nolock),T_Client b
			where vdq.ClientID =b.ClientID and vdq.State='#PAY' and vdq.StatisticsDay between @StartDate and @EndDate
			and (b.AgentID = @AgentID or b.ClientID = @AgentID) ${WhereSql}
			group by vdq.ClientID,vdq.LogName,vdq.ClientName,vdq.WashRate_Client,vdq.DrawRate_Client,Balance,StatisticsDay

			select 
				ClientID C_ID
				,ClientName C_Name
				,LogName C_UserID
				,WashRate_Client C_WashR
				,DrawRate_Client C_DrawR
				,Balance C_Balnc
				,StatisticsDay C_CreDate
			into #countsTemp 
			from #billTemp a group by ClientID,ClientName,LogName,WashRate_Client,DrawRate_Client,Balance,StatisticsDay

			select COUNT(*) from #countsTemp

			drop table #billTemp
			drop table #countsTemp
		]]>
	</sql>

	<sql id="A_GetAllT_ClientDetailsPage_New">
		<![CDATA[			
			--注单查询
			declare @ClientID nvarchar(40)
			declare @StartDate nvarchar(10) 
			declare @EndDate nvarchar(10)

			DECLARE @pageSize INTEGER --每页数量
			DECLARE @curePage INTEGER --当前页
			DECLARE @TotalRecords INTEGER --总记录数

			SET @pageSize ='${pageSize}'
			SET @curePage ='${curePage}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'
			set @ClientID ='${ClientID}'

			select 
				BillID as B_ID
				,a.GameID  G_ID   
				,c.TableName as T_Name
				,Ju T_Ju
				,Kou C_Kou
				,CreateTime C_CreTime
				,ResultTime C_ResTime
				,ClientID C_ID
				,LogName C_UserID
				,ClientName C_Name
				,RemainBalance C_RMBalnc 
				,WinSum C_TotalWin
				,WashFee C_WashF
				,GameResult C_GameR
				,Bet_Z  C_BZ
				,Bet_X C_BX
				,Bet_H C_BH
				,Bet_ZD C_BZD
				,Bet_XD C_BXD
				,(case a.GameType when 'B' then '百家乐' when 'L' then '龙虎' else '' end) as C_GameT
				,BetSum C_BetS
				,BetSumAct C_BetSAct
				,WashRate_Client as C_WashR
				,WashSum_Client as C_WashS
				,(case WashType_Client when 'S' then '双边' when 'D' then '单边' else '' end) as C_WashT
				,TipSum C_TipSum
				,DrawSum C_DrawS
				,Wash_Z C_WashS_Z
				,IP U_IP
				,Address U_Addr
				,Balance_B  C_Balnc_B
				,DrawRate_Client as C_DrawR
				,DrawFee_Client as C_DrawF
				,a.Memo U_Memo
				,a.State
			into #billTemp
			from T_BetBill a left join T_Game b on a.GameID = b.GameID
			left join T_Table c on b.TableID = c.TableID
			where a.ClientID = @ClientID and a.StatisticsDay between @StartDate and @EndDate 
			${WhereSql}

			insert #billTemp (B_ID,G_ID,T_Name,T_Ju,C_Kou,C_CreTime,C_ResTime,C_ID,C_UserID,C_Name
							 ,C_RMBalnc,C_TotalWin,C_WashF,C_GameR,C_BZ,C_BX,C_BH,C_BZD,C_BXD
							 ,C_GameT,C_BetS,C_BetSAct,C_WashR,C_WashS,C_WashT,C_TipSum,C_DrawS,C_WashS_Z,U_IP
							 ,U_Addr,C_Balnc_B,C_DrawR,C_DrawF,U_Memo,State)

			select 
				BillID as B_ID
				,a.GameID  G_ID   
				,c.TableName as T_Name
				,Ju T_Ju
				,Kou C_Kou
				,CreateTime C_CreTime
				,ResultTime C_ResTime
				,ClientID C_ID
				,LogName C_UserID
				,ClientName C_Name
				,RemainBalance C_RMBalnc 
				,WinSum C_TotalWin
				,WashFee C_WashF
				,GameResult C_GameR
				,Bet_Z  C_BZ
				,Bet_X C_BX
				,Bet_H C_BH
				,Bet_ZD C_BZD
				,Bet_XD C_BXD
				,(case a.GameType when 'B' then '百家乐' when 'L' then '龙虎' else '' end) as C_GameT
				,BetSum C_BetS
				,BetSumAct C_BetSAct
				,WashRate_Client as C_WashR
				,WashSum_Client as C_WashS
				,(case WashType_Client when 'S' then '双边' when 'D' then '单边' else '' end) as C_WashT
				,TipSum C_TipSum
				,DrawSum C_DrawS
				,Wash_Z C_WashS_Z
				,IP U_IP
				,Address U_Addr
				,Balance_B  C_Balnc_B
				,DrawRate_Client as C_DrawR
				,DrawFee_Client as C_DrawF
				,a.Memo U_Memo
				,a.State
			from T_BetBill_Archive a(nolock) left join T_Game_Archive b(nolock) on a.GameID = b.GameID
			left join T_Table c on b.TableID = c.TableID
			where a.ClientID = @ClientID and a.StatisticsDay between @StartDate and @EndDate
			${WhereSql}

			insert #billTemp (B_ID,G_ID,T_Name,T_Ju,C_Kou,C_CreTime,C_ResTime,C_ID,C_UserID,C_Name
							 ,C_RMBalnc,C_TotalWin,C_WashF,C_GameR,C_BZ,C_BX,C_BH,C_BZD,C_BXD
							 ,C_GameT,C_BetS,C_BetSAct,C_WashR,C_WashS,C_WashT,C_TipSum,C_DrawS,C_WashS_Z,U_IP
							 ,U_Addr,C_Balnc_B,C_DrawR,C_DrawF,U_Memo,State)

			select 
				CAST('' as nvarchar(40)) B_ID
				,CAST('' as nvarchar(40)) G_ID
				,CAST('' as nvarchar(200)) T_Name
				,CAST(0 as int) T_Ju
				,CAST(0 as int) C_Kou
				,CreateTime
				,CreateTime
				,TargetID
				,TargetLogName
				,TargetName
				,TargetBalance_E
				,Delta
				,CAST(0 as numeric(12,2)) C_WashF
				,CAST('' as nvarchar(10)) C_GameR
				,CAST(0 as int) C_BZ
				,CAST(0 as int) C_BX
				,CAST(0 as int) C_BH
				,CAST(0 as int) C_BZD
				,CAST(0 as int) C_BXD
				,'上分' C_GameT
				,CAST(0 as numeric(12,2)) C_Bets
				,CAST(0 as numeric(12,2)) C_BetSAct
				,CAST(0 as numeric(12,4)) C_WashR
				,CAST(0 as numeric(12,2)) C_WashS
				,CAST('' as nvarchar(20)) C_WashT
				,CAST(0 as numeric(12,2)) C_TipSum
				,CAST(0 as numeric(12,2)) C_DrawS
				,CAST(0 as numeric(12,2)) C_WashS_Z
				,IP
				,Address
				,TargetBalance_B
				,CAST(0 as numeric(10,4)) C_DrawR
				,CAST(0 as numeric(10,4)) C_DrawF
				,Memo
				,CAST('#PAY' as nvarchar(10)) State
			from T_Point 
			where TargetID = @ClientID and StatisticsDay between @StartDate and @EndDate 
			and OperationType ='BD' and Delta >0

			insert #billTemp (B_ID,G_ID,T_Name,T_Ju,C_Kou,C_CreTime,C_ResTime,C_ID,C_UserID,C_Name
							 ,C_RMBalnc,C_TotalWin,C_WashF,C_GameR,C_BZ,C_BX,C_BH,C_BZD,C_BXD
							 ,C_GameT,C_BetS,C_BetSAct,C_WashR,C_WashS,C_WashT,C_TipSum,C_DrawS,C_WashS_Z,U_IP
							 ,U_Addr,C_Balnc_B,C_DrawR,C_DrawF,U_Memo,State)

			select 
				CAST('' as nvarchar(40)) B_ID
				,CAST('' as nvarchar(40)) G_ID
				,CAST('' as nvarchar(200)) T_Name
				,CAST(0 as int) T_Ju
				,CAST(0 as int) C_Kou
				,CreateTime
				,CreateTime
				,TargetID
				,TargetLogName
				,TargetName
				,TargetBalance_E
				,Delta
				,CAST(0 as numeric(12,2)) C_WashF
				,CAST('' as nvarchar(10)) C_GameR
				,CAST(0 as int) C_BZ
				,CAST(0 as int) C_BX
				,CAST(0 as int) C_BH
				,CAST(0 as int) C_BZD
				,CAST(0 as int) C_BXD
				,'上分' C_GameT
				,CAST(0 as numeric(12,2)) C_Bets
				,CAST(0 as numeric(12,2)) C_BetSAct
				,CAST(0 as numeric(12,4)) C_WashR
				,CAST(0 as numeric(12,2)) C_WashS
				,CAST('' as nvarchar(20)) C_WashT
				,CAST(0 as numeric(12,2)) C_TipSum
				,CAST(0 as numeric(12,2)) C_DrawS
				,CAST(0 as numeric(12,2)) C_WashS_Z
				,IP
				,Address
				,TargetBalance_B
				,CAST(0 as numeric(10,4)) C_DrawR
				,CAST(0 as numeric(10,4)) C_DrawF
				,Memo
				,CAST('#PAY' as nvarchar(10)) State
			from T_Point_Archive (nolock) 
			where TargetID = @ClientID and StatisticsDay between @StartDate and @EndDate 
			and OperationType ='BD' and Delta >0

			insert #billTemp (B_ID,G_ID,T_Name,T_Ju,C_Kou,C_CreTime,C_ResTime,C_ID,C_UserID,C_Name
							 ,C_RMBalnc,C_TotalWin,C_WashF,C_GameR,C_BZ,C_BX,C_BH,C_BZD,C_BXD
							 ,C_GameT,C_BetS,C_BetSAct,C_WashR,C_WashS,C_WashT,C_TipSum,C_DrawS,C_WashS_Z,U_IP
							 ,U_Addr,C_Balnc_B,C_DrawR,C_DrawF,U_Memo,State)

			select 
				CAST('' as nvarchar(40)) B_ID
				,CAST('' as nvarchar(40)) G_ID
				,CAST('' as nvarchar(200)) T_Name
				,CAST(0 as int) T_Ju
				,CAST(0 as int) C_Kou
				,CreateTime
				,CreateTime
				,SourceID
				,SourceLogName
				,SourceName
				,SourcePrincipal_E
				,Delta
				,CAST(0 as numeric(12,2)) C_WashF
				,CAST('' as nvarchar(10)) C_GameR
				,CAST(0 as int) C_BZ
				,CAST(0 as int) C_BX
				,CAST(0 as int) C_BH
				,CAST(0 as int) C_BZD
				,CAST(0 as int) C_BXD
				,'上分' C_GameT
				,CAST(0 as numeric(12,2)) C_Bets
				,CAST(0 as numeric(12,2)) C_BetSAct
				,CAST(0 as numeric(12,4)) C_WashR
				,CAST(0 as numeric(12,2)) C_WashS
				,CAST('' as nvarchar(20)) C_WashT
				,CAST(0 as numeric(12,2)) C_TipSum
				,CAST(0 as numeric(12,2)) C_DrawS
				,CAST(0 as numeric(12,2)) C_WashS_Z
				,IP
				,Address
				,SourcePrincipal_B
				,CAST(0 as numeric(10,4)) C_DrawR
				,CAST(0 as numeric(10,4)) C_DrawF
				,Memo
				,CAST('#PAY' as nvarchar(10)) State
			from T_Point 
			where SourceID = @ClientID and StatisticsDay between @StartDate and @EndDate 
			and OperationType ='XD' and Delta >0

			insert #billTemp (B_ID,G_ID,T_Name,T_Ju,C_Kou,C_CreTime,C_ResTime,C_ID,C_UserID,C_Name
							 ,C_RMBalnc,C_TotalWin,C_WashF,C_GameR,C_BZ,C_BX,C_BH,C_BZD,C_BXD
							 ,C_GameT,C_BetS,C_BetSAct,C_WashR,C_WashS,C_WashT,C_TipSum,C_DrawS,C_WashS_Z,U_IP
							 ,U_Addr,C_Balnc_B,C_DrawR,C_DrawF,U_Memo,State)

			select 
				CAST('' as nvarchar(40)) B_ID
				,CAST('' as nvarchar(40)) G_ID
				,CAST('' as nvarchar(200)) T_Name
				,CAST(0 as int) T_Ju
				,CAST(0 as int) C_Kou
				,CreateTime
				,CreateTime
				,SourceID
				,SourceLogName
				,SourceName
				,SourcePrincipal_E
				,Delta
				,CAST(0 as numeric(12,2)) C_WashF
				,CAST('' as nvarchar(10)) C_GameR
				,CAST(0 as int) C_BZ
				,CAST(0 as int) C_BX
				,CAST(0 as int) C_BH
				,CAST(0 as int) C_BZD
				,CAST(0 as int) C_BXD
				,'上分' C_GameT
				,CAST(0 as numeric(12,2)) C_Bets
				,CAST(0 as numeric(12,2)) C_BetSAct
				,CAST(0 as numeric(12,4)) C_WashR
				,CAST(0 as numeric(12,2)) C_WashS
				,CAST('' as nvarchar(20)) C_WashT
				,CAST(0 as numeric(12,2)) C_TipSum
				,CAST(0 as numeric(12,2)) C_DrawS
				,CAST(0 as numeric(12,2)) C_WashS_Z
				,IP
				,Address
				,SourcePrincipal_B
				,CAST(0 as numeric(10,4)) C_DrawR
				,CAST(0 as numeric(10,4)) C_DrawF
				,Memo
				,CAST('#PAY' as nvarchar(10)) State
			from T_Point_Archive 
			where SourceID = @ClientID and StatisticsDay between @StartDate and @EndDate 
			and OperationType ='XD' and Delta >0

			insert #billTemp (B_ID,G_ID,T_Name,T_Ju,C_Kou,C_CreTime,C_ResTime,C_ID,C_UserID,C_Name
							 ,C_RMBalnc,C_TotalWin,C_WashF,C_GameR,C_BZ,C_BX,C_BH,C_BZD,C_BXD
							 ,C_GameT,C_BetS,C_BetSAct,C_WashR,C_WashS,C_WashT,C_TipSum,C_DrawS,C_WashS_Z,U_IP
							 ,U_Addr,C_Balnc_B,C_DrawR,C_DrawF,U_Memo,State)

			select 
				CAST('' as nvarchar(40)) B_ID
				,CAST('' as nvarchar(40)) G_ID
				,CAST('' as nvarchar(200)) T_Name
				,CAST(0 as int) T_Ju
				,CAST(0 as int) C_Kou
				,CreateTime
				,CreateTime
				,TargetID
				,TargetLogName
				,TargetName
				,TargetBalance_E
				,(0 - ISNULL(Delta,0)) Delta
				,CAST(0 as numeric(12,2)) C_WashF
				,CAST('' as nvarchar(10)) C_GameR
				,CAST(0 as int) C_BZ
				,CAST(0 as int) C_BX
				,CAST(0 as int) C_BH
				,CAST(0 as int) C_BZD
				,CAST(0 as int) C_BXD
				,'下分' C_GameT
				,CAST(0 as numeric(12,2)) C_Bets
				,CAST(0 as numeric(12,2)) C_BetSAct
				,CAST(0 as numeric(12,4)) C_WashR
				,CAST(0 as numeric(12,2)) C_WashS
				,CAST('' as nvarchar(20)) C_WashT
				,CAST(0 as numeric(12,2)) C_TipSum
				,CAST(0 as numeric(12,2)) C_DrawS
				,CAST(0 as numeric(12,2)) C_WashS_Z
				,IP
				,Address
				,TargetBalance_B
				,CAST(0 as numeric(10,4)) C_DrawR
				,CAST(0 as numeric(10,4)) C_DrawF
				,Memo
				,CAST('#PAY' as nvarchar(10)) State
			from T_Point 
			where TargetID = @ClientID and StatisticsDay between @StartDate and @EndDate 
			and (OperationType ='XD' or OperationType ='QK' or OperationType ='QL') and Delta >0

			insert #billTemp (B_ID,G_ID,T_Name,T_Ju,C_Kou,C_CreTime,C_ResTime,C_ID,C_UserID,C_Name
							 ,C_RMBalnc,C_TotalWin,C_WashF,C_GameR,C_BZ,C_BX,C_BH,C_BZD,C_BXD
							 ,C_GameT,C_BetS,C_BetSAct,C_WashR,C_WashS,C_WashT,C_TipSum,C_DrawS,C_WashS_Z,U_IP
							 ,U_Addr,C_Balnc_B,C_DrawR,C_DrawF,U_Memo,State)

			select 
				CAST('' as nvarchar(40)) B_ID
				,CAST('' as nvarchar(40)) G_ID
				,CAST('' as nvarchar(200)) T_Name
				,CAST(0 as int) T_Ju
				,CAST(0 as int) C_Kou
				,CreateTime
				,CreateTime
				,TargetID
				,TargetLogName
				,TargetName
				,TargetBalance_E
				,(0 - ISNULL(Delta,0)) Delta
				,CAST(0 as numeric(12,2)) C_WashF
				,CAST('' as nvarchar(10)) C_GameR
				,CAST(0 as int) C_BZ
				,CAST(0 as int) C_BX
				,CAST(0 as int) C_BH
				,CAST(0 as int) C_BZD
				,CAST(0 as int) C_BXD
				,'下分' C_GameT
				,CAST(0 as numeric(12,2)) C_Bets
				,CAST(0 as numeric(12,2)) C_BetSAct
				,CAST(0 as numeric(12,4)) C_WashR
				,CAST(0 as numeric(12,2)) C_WashS
				,CAST('' as nvarchar(20)) C_WashT
				,CAST(0 as numeric(12,2)) C_TipSum
				,CAST(0 as numeric(12,2)) C_DrawS
				,CAST(0 as numeric(12,2)) C_WashS_Z
				,IP
				,Address
				,TargetBalance_B
				,CAST(0 as numeric(10,4)) C_DrawR
				,CAST(0 as numeric(10,4)) C_DrawF
				,Memo
				,CAST('#PAY' as nvarchar(10)) State
			from T_Point_Archive (nolock) 
			where TargetID = @ClientID and StatisticsDay between @StartDate and @EndDate 
			and (OperationType ='XD' or OperationType ='QK' or OperationType ='QL') and Delta >0

			insert #billTemp (B_ID,G_ID,T_Name,T_Ju,C_Kou,C_CreTime,C_ResTime,C_ID,C_UserID,C_Name
							 ,C_RMBalnc,C_TotalWin,C_WashF,C_GameR,C_BZ,C_BX,C_BH,C_BZD,C_BXD
							 ,C_GameT,C_BetS,C_BetSAct,C_WashR,C_WashS,C_WashT,C_TipSum,C_DrawS,C_WashS_Z,U_IP
							 ,U_Addr,C_Balnc_B,C_DrawR,C_DrawF,U_Memo,State)

			select 
				CAST('' as nvarchar(40)) B_ID
				,CAST('' as nvarchar(40)) G_ID
				,CAST('' as nvarchar(200)) T_Name
				,CAST(0 as int) T_Ju
				,CAST(0 as int) C_Kou
				,CreateTime
				,CreateTime
				,SourceID
				,SourceLogName
				,SourceName
				,SourcePrincipal_E
				,(0 - ISNULL(Delta,0)) Delta
				,CAST(0 as numeric(12,2)) C_WashF
				,CAST('' as nvarchar(10)) C_GameR
				,CAST(0 as int) C_BZ
				,CAST(0 as int) C_BX
				,CAST(0 as int) C_BH
				,CAST(0 as int) C_BZD
				,CAST(0 as int) C_BXD
				,'下分' C_GameT
				,CAST(0 as numeric(12,2)) C_Bets
				,CAST(0 as numeric(12,2)) C_BetSAct
				,CAST(0 as numeric(12,4)) C_WashR
				,CAST(0 as numeric(12,2)) C_WashS
				,CAST('' as nvarchar(20)) C_WashT
				,CAST(0 as numeric(12,2)) C_TipSum
				,CAST(0 as numeric(12,2)) C_DrawS
				,CAST(0 as numeric(12,2)) C_WashS_Z
				,IP
				,Address
				,SourcePrincipal_B
				,CAST(0 as numeric(10,4)) C_DrawR
				,CAST(0 as numeric(10,4)) C_DrawF
				,Memo
				,CAST('#PAY' as nvarchar(10)) State
			from T_Point 
			where SourceID = @ClientID and StatisticsDay between @StartDate and @EndDate 
			and OperationType ='BD' and Delta >0

			insert #billTemp (B_ID,G_ID,T_Name,T_Ju,C_Kou,C_CreTime,C_ResTime,C_ID,C_UserID,C_Name
							 ,C_RMBalnc,C_TotalWin,C_WashF,C_GameR,C_BZ,C_BX,C_BH,C_BZD,C_BXD
							 ,C_GameT,C_BetS,C_BetSAct,C_WashR,C_WashS,C_WashT,C_TipSum,C_DrawS,C_WashS_Z,U_IP
							 ,U_Addr,C_Balnc_B,C_DrawR,C_DrawF,U_Memo,State)

			select 
				CAST('' as nvarchar(40)) B_ID
				,CAST('' as nvarchar(40)) G_ID
				,CAST('' as nvarchar(200)) T_Name
				,CAST(0 as int) T_Ju
				,CAST(0 as int) C_Kou
				,CreateTime
				,CreateTime
				,SourceID
				,SourceLogName
				,SourceName
				,SourcePrincipal_E
				,(0 - ISNULL(Delta,0)) Delta
				,CAST(0 as numeric(12,2)) C_WashF
				,CAST('' as nvarchar(10)) C_GameR
				,CAST(0 as int) C_BZ
				,CAST(0 as int) C_BX
				,CAST(0 as int) C_BH
				,CAST(0 as int) C_BZD
				,CAST(0 as int) C_BXD
				,'下分' C_GameT
				,CAST(0 as numeric(12,2)) C_Bets
				,CAST(0 as numeric(12,2)) C_BetSAct
				,CAST(0 as numeric(12,4)) C_WashR
				,CAST(0 as numeric(12,2)) C_WashS
				,CAST('' as nvarchar(20)) C_WashT
				,CAST(0 as numeric(12,2)) C_TipSum
				,CAST(0 as numeric(12,2)) C_DrawS
				,CAST(0 as numeric(12,2)) C_WashS_Z
				,IP
				,Address
				,SourcePrincipal_B
				,CAST(0 as numeric(10,4)) C_DrawR
				,CAST(0 as numeric(10,4)) C_DrawF
				,Memo
				,CAST('#PAY' as nvarchar(10)) State
			from T_Point_Archive (nolock) 
			where SourceID = @ClientID and StatisticsDay between @StartDate and @EndDate 
			and OperationType ='BD' and Delta >0

			SELECT TOP (@pageSize* @curePage*2) *		
			into #c
				From (
					SELECT TOP (@pageSize * @curePage*2) ROW_NUMBER() OVER (order by C_CreTime) AS id
						,*
					From #billTemp
				)as a
			WHERE id between 1 AND (@pageSize*@curePage*2) 
			order by  C_CreTime 

			declare @i int 
			set @i=1
			declare _cursor cursor for select id from #c order by id
			open _cursor;
			fetch next from _cursor into @i 
			while @@fetch_status = 0
			begin
				if (@i =1 )
				begin
					update #c set C_RMBalnc =ISNULL( C_Balnc_B,0)+ISNULL(C_TotalWin,0) where id = @i
				end
				else
				begin
					update #c set C_RMBalnc = ISNULL((select top 1 C_RMBalnc  from #c where id = @i -1 ),0) + ISNULL(C_TotalWin,0) where id = @i
				end
				fetch next from _cursor into @i 
			end
			close _cursor
			deallocate _cursor


			select top (@pageSize)
					* 
					,(select (COUNT(*)+1) from #billTemp where id>1 and State='#PAY') TotalRecords
				from (		
					select top (@pageSize*@curePage) ROW_NUMBER() OVER(order by C_CreTime) as rowNo			
						,*
					from #c where id>1 and State='#PAY'
				) a where rowNo between (((@curePage - 1) * @pageSize) + 1) AND (@pageSize * @curePage) order by C_CreTime

			drop table #billTemp
			drop table #c
		]]>
	</sql>

	<sql id="A_GetBillCount_New">
		<![CDATA[
			--注单行数查询
			declare @ClientID nvarchar(40)
			declare @StartDate nvarchar(10) 
			declare @EndDate nvarchar(10)
			DECLARE @TotalRecords INTEGER --总记录数

			set @StartDate ='2018-01-01'-- '${StartDate}'
			set @EndDate = '2018-06-24'--'${EndDate}'
			set @ClientID ='1afce8540d094b2b9cc2d355d4891bfc' --'${ClientID}' select * from [dbo].[T_BetBill_Archive]

			select 
				@TotalRecords = COUNT(*)
			from T_Point 
			where (TargetID = @ClientID or SourceID = @ClientID) and StatisticsDay between @StartDate and @EndDate and Delta >0

			select 
				@TotalRecords += COUNT(*)
			from T_Point_Archive 
			where (TargetID = @ClientID or SourceID = @ClientID) and StatisticsDay between @StartDate and @EndDate and Delta >0

			select 
				@TotalRecords += COUNT(*)
			from T_BetBill a
			where ClientID = @ClientID and StatisticsDay between @StartDate and @EndDate and State ='#PAY' ${WhereSql}

			select 
				@TotalRecords += COUNT(*)
			from T_BetBill_Archive a
			where ClientID = @ClientID and StatisticsDay between @StartDate and @EndDate and State ='#PAY' ${WhereSql}

			select top 1 CreateTime
				,CAST('#PAY' as nvarchar(10)) as State
			into #stateTemp
			from T_Point 
			where (TargetID = @ClientID or SourceID = @ClientID) and StatisticsDay between @StartDate and @EndDate and Delta >0
			order by CreateTime

			insert #stateTemp

			select top 1 CreateTime
				,CAST('#PAY' as nvarchar(10)) as State
			from T_Point_Archive 
			where (TargetID = @ClientID or SourceID = @ClientID) and StatisticsDay between @StartDate and @EndDate and Delta >0
			order by CreateTime

			insert #stateTemp

			select top 1 CreateTime
				,State
			from T_BetBill a
			where ClientID= @ClientID and StatisticsDay between @StartDate and @EndDate ${WhereSql}
			order by CreateTime

			insert #stateTemp

			select top 1 CreateTime
				,State
			from T_BetBill_Archive a
			where ClientID= @ClientID and StatisticsDay between @StartDate and @EndDate ${WhereSql}
			order by CreateTime

			declare @State nvarchar(10)

			select top 1 @State = State  from #stateTemp order by CreateTime

			if @State ='#ABO'
			begin 
				set @TotalRecords = @TotalRecords+1
			end

			select @TotalRecords

			drop table #stateTemp
		]]>
	</sql>

	<sql id="A_QueryPointPage">
		<![CDATA[
			--获取上下分统计数据
			declare @BeginDate nvarchar(40)
			declare @EndDate nvarchar(40)
			DECLARE @pageSize INTEGER --每页数量
			DECLARE @curePage INTEGER --当前页
			DECLARE @TotalRecords INTEGER --总记录数

			SET @pageSize ='${pageSize}'
			SET @curePage ='${curePage}'

			set @BeginDate = '${BeginDate}'
			set @EndDate = '${EndDate}'

			SELECT  
				PointID P_ID
				, CreateID C_CreID
				, CreateTime C_CreTime
				, Delta C_Delta
				, SourceID C_SID
				, SourcePrincipal_B C_SPrncpl_B
				,SourcePrincipal_E C_SPrncpl_E
				, TargetID C_TID
				, TargetBalance_B C_Tbalnc_B
				, TargetBalance_E C_Tbalnc_E
				,(case OperationType when 'XD' then '下分' when 'BD' then '上分' when 'QK' then '清卡' when 'QL' then '清零' else '' end) as C_OpTYpe
				, TargetPrincipal_B  C_TPrncpl_B
				, TargetPrincipal_E  C_TPrncpl_E
				, IP U_IP
				, Address U_Addr
				, IPLocal U_IPLocal
				, SourceLogName C_SUserID
				, SourceName C_SName		
				,TargetLogName C_TUserID
				, TargetName C_TName
				,(case  when LEN(TargetLogName) >=8 then '会员' else '代理' end) as C_Type 
				,IsNull(Memo,' ') U_Memo
			into #Point
			FROM  dbo.T_Point WHERE StatisticsDay between @BeginDate and @EndDate 
			${SqlWhere}
			
			insert #Point
			
			SELECT 
				 PointID P_ID
				, CreateID C_CreID
				, CreateTime C_CreTime
				, Delta C_Delta
				, SourceID C_SID
				, SourcePrincipal_B C_SPrncpl_B
				,SourcePrincipal_E C_SPrncpl_E
				, TargetID C_TID
				, TargetBalance_B C_Tbalnc_B
				, TargetBalance_E C_Tbalnc_E
				,(case OperationType when 'XD' then '下分' when 'BD' then '上分' when 'QK' then '清卡' when 'QL' then '清零' else '' end) as C_OpTYpe
				, TargetPrincipal_B  C_TPrncpl_B
				, TargetPrincipal_E  C_TPrncpl_E
				, IP U_IP
				, Address U_Addr
				, IPLocal U_IPLocal
				, SourceLogName C_SUserID
				, SourceName C_SName		
				,TargetLogName C_TUserID
				, TargetName C_TName
				,(case LEN(TargetLogName) when 8 then '会员' when 6 then '代理' else '' end) as C_TType 
				,IsNull(Memo,' ') U_Memo
			FROM  dbo.T_Point_Archive WHERE StatisticsDay between @BeginDate and @EndDate  
			${SqlWhere1}

			select @TotalRecords = COUNT(*) from #Point

			SELECT TOP (@pageSize) *
			From (
			SELECT TOP (@pageSize * @curePage) ROW_NUMBER() OVER (
			order by  C_CreTime desc)
				AS rowNo
				,@TotalRecords TotalRecords
				,*
				From #Point

				)as a
			WHERE rowNo BETWEEN (((@curePage - 1) * @pageSize) + 1)
			AND (@pageSize * @curePage)
			order by  C_CreTime 
			
			drop table #Point
		]]>
	</sql>

	<sql id="A_GetPointCount">
		<![CDATA[
		    --获取上下分统计数据
			declare @BeginDate nvarchar(40)
			declare @EndDate nvarchar(40)		

			set @BeginDate = '${BeginDate}'
			set @EndDate = '${EndDate}'
			
			SELECT  
				PointID P_ID				
			into #Point
			FROM  dbo.T_Point WHERE StatisticsDay between @BeginDate and @EndDate 
			${SqlWhere}
			
			insert #Point
			
			SELECT 
				 PointID P_ID
			FROM  dbo.T_Point_Archive WHERE StatisticsDay between @BeginDate and @EndDate  
			${SqlWhere1}

			select  COUNT(*) from #Point
			
			drop table #Point
		]]>
	</sql>

	<sql id="A_QueryPoint">
		<![CDATA[
			--获取上下分统计数据
			declare @BeginDate nvarchar(40)
			declare @EndDate nvarchar(40)

			set @BeginDate = '${BeginDate}'
			set @EndDate = '${EndDate}'

			SELECT  
				PointID P_ID
				, CreateID C_CreID
				, CreateTime C_CreTime
				, Delta C_Delta
				, SourceID C_SID
				, SourcePrincipal_B C_SPrncpl_B
				,SourcePrincipal_E C_SPrncpl_E
				, TargetID C_TID
				, TargetBalance_B C_Tbalnc_B
				, TargetBalance_E C_Tbalnc_E
				,(case OperationType when 'XD' then '下分' when 'BD' then '上分' when 'QK' then '清卡' when 'QL' then '清零' else '' end) as C_OpTYpe
				, TargetPrincipal_B  C_TPrncpl_B
				, TargetPrincipal_E  C_TPrncpl_E
				, IP U_IP
				, Address U_Addr
				, IPLocal U_IPLocal
				, SourceLogName C_SUserID
				, SourceName C_SName		
				,TargetLogName C_TUserID
				, TargetName C_TName
				,(case LEN(TargetLogName) when 8 then '会员' when 6 then '代理' else '' end) as C_TType 
			into #lastT
			FROM  dbo.T_Point WHERE StatisticsDay between @BeginDate and @EndDate 
				${SqlWhere}
			
			insert #lastT

			SELECT 
				PointID P_ID
				, CreateID C_CreID
				, CreateTime C_CreTime
				, Delta C_Delta
				, SourceID C_SID
				, SourcePrincipal_B C_SPrncpl_B
				,SourcePrincipal_E C_SPrncpl_E
				, TargetID C_TID
				, TargetBalance_B C_Tbalnc_B
				, TargetBalance_E C_Tbalnc_E
				,(case OperationType when 'XD' then '下分' when 'BD' then '上分' when 'QK' then '清卡' when 'QL' then '清零' else '' end) as C_OpTYpe
				, TargetPrincipal_B  C_TPrncpl_B
				, TargetPrincipal_E  C_TPrncpl_E
				, IP U_IP
				, Address U_Addr
				, IPLocal U_IPLocal
				, SourceLogName C_SUserID
				,SourceName C_SName		
				,TargetLogName C_TUserID
				,TargetName C_TName
				,(case LEN(TargetLogName) when 8 then '会员' when 6 then '代理' else '' end) as C_TType 
				FROM  dbo.T_Point_Archive WHERE StatisticsDay between @BeginDate and @EndDate 
				${SqlWhere1}
				order by C_CreTime desc 

			 declare @TotalRecords int
			 select @TotalRecords = COUNT(*) from #lastT
			
			 select 							
				(case when C_OpTYpe = '上分' then SUM(isnull(C_Delta,0)) end)  C_Charge_T
				,(case when C_OpTYpe = '下分' then SUM(isnull(C_Delta,0)) end)  C_Cash_T
				,(case when C_OpTYpe = '清零' then SUM(isnull(C_Delta,0)) end)  C_Zero_T
				,(case when C_OpTYpe = '清卡' then SUM(isnull(C_Delta,0)) end)  C_ClearCa_T
			into #cT
			from #lastT group by C_OpTYpe 
			
			select 
				(case when C_OpTYpe ='上分' then C_Delta else 0-ISNULL(C_Delta,0) end) Delta
			into #allPoint
			from #lastT

			select 
				@TotalRecords TotalRecords
				,SUM(ISNULL(C_Charge_T,0))  C_Charge_T
				,SUM(ISNULL(C_Cash_T,0)) C_Cash_T
				,SUM(ISNULL(C_Zero_T,0)) C_Zero_T
				,SUM(ISNULL(C_ClearCa_T,0)) C_ClearCa_T	
				,(select SUM(Delta) from #allPoint) C_SumDelta
			from #cT

			drop table #lastT
			drop table #cT
			drop table #allPoint
		]]>
	</sql>

	<sql id="A_GetAllGamesByTableIDPage">
		<![CDATA[
			declare @TableID nvarchar(40)
			declare @NDate nvarchar(40)
			declare @Ju int
			DECLARE @pageSize INTEGER --每页数量
			DECLARE @curePage INTEGER --当前页

			SET @pageSize ='${pageSize}'
			SET @curePage ='${curePage}'
			SET @TableID='${TableID}' 
			SET @NDate='${NDate}'
			SET @Ju = ${Ju}


			SELECT TOP (@pageSize) *
			From (
				SELECT TOP (@pageSize * @curePage) ROW_NUMBER() OVER (order by  T_JU ,T_Kou ) AS rowNo
				 ,*
			From(
				select 
					a.TableID T_ID
					, b.TableName T_Name
					,(case b.GameType when 'B' then '百家乐' when 'L' then '龙虎' else '' end) as T_GameT
					,a.Ju T_JU
					, a.Kou T_Kou
					,(case a.State when '#COU' then '倒计时中' when '#PUB' then '等待录入结果' when '#OVE' then '已结束' when '#MOD' then '修改结果' when '#ABO' then '已作废' else '' end) as T_State
					,a.CountDownTime_B T_CDTime_B
					,a.CountDownTime_E T_CDTime_E
					,a.GameResult T_GameR
					,a.ResultTime T_ResTime
					, a.ResultID T_RID
					,a.Memo U_Memo
					,a.StatisticsDay T_SDay
				 FROM V_ALL_GAME AS a INNER JOIN T_Table AS b ON a.TableID = b.TableID
				where a.StatisticsDay = @NDate and a.TableID = @TableID and a.Ju=@Ju 
				) AS AllData
			)as a
			WHERE rowNo BETWEEN (((@curePage - 1) * @pageSize) + 1)
			AND (@pageSize * @curePage)
			order by  T_JU ,T_Kou
		]]>
	</sql>

	<sql id="A_GetAllGamesByTableIDAndDate">
		<![CDATA[
			declare @TableID nvarchar(40)
			declare @NDate nvarchar(40)
			declare @Ju int

			SET @TableID='${TableID}' 
			SET @NDate='${NDate}'
			SET @Ju = ${Ju}

			select 		
				Count(*)
			 FROM V_ALL_GAME AS a INNER JOIN T_Table AS b ON a.TableID = b.TableID
			where a.StatisticsDay = @NDate and a.TableID = @TableID and a.Ju=@Ju 
			order by T_JU ,T_Kou
		]]>
	</sql>
	
	<sql id="T_GetAllT_Tables">
		<![CDATA[
			select 
				TableID T_ID
				,TableName T_Name
				,Max_Z T_MX_Z
				,Min_Z T_MN_Z
				,Max_X T_MX_X
				,Min_X T_MN_X
				,Max_H T_MX_H
				,Min_H T_MN_H
				,Max_ZD T_MX_ZD
				,Min_ZD T_MN_ZD
				,Max_XD T_MX_XD
				,Min_XD  T_MN_XD
			from T_Table  
			where State = 'YES' --and F_1='StopPhone'
			order by GameType, T_Name 
		]]>
	</sql>

	<sql id="A_GetJu">
		<![CDATA[
			declare @TableID nvarchar(40)
			declare @NDate nvarchar(40)

			SET @TableID = '${TableID}'
			SET @NDate = '${NDate}'
			SELECT 
				distinct(Ju) T_Ju
			 FROM V_ALL_GAME WHERE TableID=@TableID and StatisticsDay = @NDate  order by T_Ju
		]]>
	</sql>

	<sql id="PromotionA_Clnt4A">
		<![CDATA[
			--总增量查询
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)
			declare @pageSize int
			declare @curePage int
			declare @TotalRecords int
			declare @SubAgent int --指定代理下直属代理数量
			declare @SubClent int --指定代理直接邀请会员数量
			declare @LeftOver int --根据查询条件中的CurPage和PageSize计算出除了直属代理还需要查询的数据条数

			set @AgentID = '${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'
			set @pageSize ='${pageSize}'
			set @curePage ='${curePage}'

			declare @StartD nvarchar(40) --将查询时间转化成包含时分秒格式的
			declare @EndD nvarchar(40) --将查询时间转化成包含时分秒格式的
			select @StartD = convert(varchar(11),@StartDate,120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			select @EndD = convert(varchar(11),DATEADD(DAY,1,@EndDate),120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			
			;WITH AtreeCTE(AgentID,ParentID,TopAID,Level) AS(
						select AgentID,ParentID,AgentID,0 from T_Agent where  AgentID = @AgentID and IsHide = 'FALSE'
						union all 
						select a.AgentID,a.ParentID,cte.TopAID,cte.Level+1 from T_Agent a  join AtreeCTE cte on a.ParentID = cte.AgentID where a.IsHide ='FALSE'
					)

			select AgentID,ParentID,TopAID,Level 
				,(select COUNT(ClientID) from T_WeiTou_Detail where InviterID = a.AgentID and cCeateTime between @StartD and @EndD ) A_Prom
				,(select COUNT(ClientID) from T_WeiTou_Detail where AgentID3Bao = a.AgentID and cCeateTime between @StartD and @EndD) A_PromT
				,CAST(0 as numeric(20,4)) C_TotalWin --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS
				,CAST(0 as numeric(20,4)) C_BetActS 
				,CAST(0 as numeric(20,4)) C_3BaoA --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash--推广会下分
			into #aTreeTemp from AtreeCTE a			
			
			--递归查找会员邀请关系
			;WITH AgentCTE (ClientID,InviterID,InviterLogName,TopClientID,IsTop)AS(
				SELECT ClientID,InviterID,InviterLogName, ClientID, 1 
					FROM T_WeiTou_Detail 
					where InviterID= @AgentID or ClientID = @AgentID 
				UNION ALL
				SELECT a.ClientID,a.InviterID,a.InviterLogName,cte.TopClientID, 0 
					FROM T_WeiTou_Detail a JOIN AgentCTE cte ON a .InviterID = cte.ClientID 
			)
			select a.* into #IDTemp1  from AgentCTE a,T_WeiTou_Detail c where a.ClientID = c.ClientID  and c.cCeateTime between @StartD and @EndD 
				 
			select TopClientID,COUNT(TopClientID) couts into #proTemp1 from #IDTemp1 where IsTop=0 group by TopClientID

			--查询直接邀请会员列表
			select 
				a.ClientID C_ID
				,c.ClientName C_Name
				,a.logName C_UserID
				,'OwnC' C_Type
				,InviterID C_InID
				,InviterLogName C_InUserID
				,InviterType C_InT
				,AgentID3Bao C_AID
				,(select COUNT(*) from T_WeiTou_Detail b,T_Client d where b.InviterID = a.ClientID and b.ClientID = d.ClientID and d.CreateTime between @StartD and @EndD) C_ProA --推广量
				,isnull((select couts from #proTemp1 where TopClientID = a.ClientID),0) C_ProA_T --总推广量
				,CAST(0 as numeric(20,4)) C_TotalWin --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS
				,CAST(0 as numeric(20,4)) C_BetActS 
				,CAST(0 as numeric(20,4)) C_3BaoA --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash--推广会下分
				,CAST(0 as numeric(20,4)) C_TotalWin_Self --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS_Self --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF_Self --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS_Self
				,CAST(0 as numeric(20,4)) C_BetActS_Self 
				,(select SUM(Amount3Bao) from T_WeiTou_BillWash t ,T_Client tt where a.ClientID = t.ClientID and t.ClientID= tt.ClientID and tt.CreateTime between @StartD and @EndD) C_3BaoA_Self --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge_Self--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash_Self--推广会下分
				,a.cCeateTime C_CreTime
			into #ClntTemp
			from T_WeiTou_Detail a  left join T_Client c on a.ClientID= c.ClientID
			where InviterID = @AgentID

			--查询直属代理列表
			select 
				AgentID C_ID
				,AgentName C_Name
				,logName C_UserID
				,'OwnA' C_Type
				,'' C_InID
				,'' C_InUserID
				,'' C_InT
				,ParentID C_AID
				,CAST(0 as int) C_ProA --推广量(select A_Prom from #aTreeTemp b where a.AgentID = b.AgentID)
				,CAST(0 as int) C_ProA_T --总推广量 (select A_PromT from #aTreeTemp b where a.AgentID = b.AgentID)
				,CAST(0 as numeric(20,4)) C_TotalWin --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS
				,CAST(0 as numeric(20,4)) C_BetActS 
				,CAST(0 as numeric(20,4)) C_3BaoA --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash--推广会下分
				,CAST(0 as numeric(20,4)) C_TotalWin_Self --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS_Self --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF_Self --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS_Self
				,CAST(0 as numeric(20,4)) C_BetActS_Self 
				,CAST(0 as numeric(20,4)) C_3BaoA_Self --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge_Self--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash_Self--推广会下分
				,CreateTime C_CreTime
			into #AgentTemp
			from T_Agent a
			where ParentID = @AgentID and IsHide = 'FALSE'

			set @SubAgent = (select COUNT(*) from #AgentTemp where C_ProA>0 or C_ProA_T>0 or (C_CreTime between @StartD and @EndD))

			select @SubClent = (select COUNT(*) from #ClntTemp where C_ProA>0 or C_ProA_T>0 or (C_CreTime between @StartD and @EndD))

			if ((@pageSize*(@curePage-1)>@SubAgent+@SubClent and (@SubAgent+@SubClent)>0 and @curePage>1) or (@SubAgent+@SubClent)<=0)
			begin
				raiserror('没有找到数据！', 16, 1)
				return
			end

			if @SubAgent>= @pageSize*@curePage
			begin
				set @LeftOver = 0
			end else 
			begin
				set @LeftOver = @pageSize*@curePage - @SubAgent
			end			
				
			--计算所查代理/直属代理下推广会员的费用合计
			select 
				c.AgentID
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
				,SUM(a.WashFee) WashFee
				,SUM(a.WashSum_Client) WashSum
			into #cFeeTemp
			from T_BetBill a,T_WeiTou_Detail b,#aTreeTemp c 
			where c.AgentID = b.AgentID3Bao and a.ClientID = b.ClientID and b.cCeateTime between @StartD and @EndD
			and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by c.AgentID				

			insert #cFeeTemp(AgentID,WinSum,BetSum,BetSumAct,WashFee,WashSum)
					
			select 
				c.AgentID
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
				,SUM(a.WashFee) WashFee
				,SUM(a.WashSum_Client) WashSum
			from T_BetBill_Archive a (nolock),T_WeiTou_Detail b,#aTreeTemp c
			where c.AgentID = b.AgentID3Bao and a.ClientID = b.ClientID and b.cCeateTime between @StartD and @EndD
			and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by c.AgentID

			select 
				AgentID 
				,SUM(WashFee) WashFee
				,SUM(WashSum) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(WinSum) WinSum
			into #feeTemp
			from #cFeeTemp  group by AgentID

			update a set 
				a.C_BetActS = isnull(b.BetSumAct,0)
				,a.C_BetS = isnull(b.BetSum,0)
				,a.C_TotalWin = isnull(b.WinSum,0)
				,a.C_WashF = isnull(b.WashFee,0)
				,a.C_WashS = isnull(b.WashSum,0)
			from #aTreeTemp a,#feeTemp b where a.AgentID = b.AgentID

			--计算所查代理/直属代理的三宝费
			select 
				b.AgentID AgentID3Bao
				,SUM(Amount3Bao) Amount3Bao 
			into #bFeeTemp 
			from T_WeiTou_BillWash a,#aTreeTemp b ,T_WeiTou_Detail c
			where c.AgentID3Bao = b.AgentID and c.cCeateTime between @StartD and @EndD 
			and a.ClientID = c.ClientID and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID					

			update #aTreeTemp set C_3BaoA = isnull((select Amount3Bao from #bFeeTemp where AgentID3Bao = #aTreeTemp.AgentID),0)

			--计算所查代理/直属代理下推广会员的上分合计
			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			into #chTemp
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID  and c.cCeateTime between @StartD and @EndD
			and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			select TargetID,SUM(Delta) Delta into #chsTemp from #chTemp group by TargetID

			update a set
				a.C_Charge =isnull( b.Delta,0)
				from #aTreeTemp a,#chsTemp b where a.AgentID= b.TargetID
				
			--计算所查代理/直属代理下推广会员的下分合计
			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			into #cashTemp
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID  and c.cCeateTime between @StartD and @EndD
			and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID  and c.cCeateTime between @StartD and @EndD
			and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID  and c.cCeateTime between @StartD and @EndD 
			and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock) ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID  and c.cCeateTime between @StartD and @EndD
			and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			select TargetID,SUM(Delta) Delta into #cashsTemp from #cashTemp group by TargetID

			update a set 
				a.C_Cash = isnull(b.Delta,0)
				from #aTreeTemp a ,#cashsTemp b where a.AgentID = b.TargetID
				
			--计算总推广量
			DECLARE @Level int;
			select @Level = max(Level) from #aTreeTemp;

			while (@Level>=0) begin	
				update #aTreeTemp set 
					#aTreeTemp.A_PromT = isnull(#aTreeTemp.A_PromT,0)  +
					isnull((select sum(isnull(b.A_PromT,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_TotalWin = isnull(#aTreeTemp.C_TotalWin,0)  +
					isnull((select sum(isnull(b.C_TotalWin,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_WashS = isnull(#aTreeTemp.C_WashS,0)  +
					isnull((select sum(isnull(b.C_WashS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_WashF = isnull(#aTreeTemp.C_WashF,0)  +
					isnull((select sum(isnull(b.C_WashF,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_BetS = isnull(#aTreeTemp.C_BetS,0)  +
					isnull((select sum(isnull(b.C_BetS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_BetActS = isnull(#aTreeTemp.C_BetActS,0)  +
					isnull((select sum(isnull(b.C_BetActS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_3BaoA = isnull(#aTreeTemp.C_3BaoA,0)  +
					isnull((select sum(isnull(b.C_3BaoA,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
					,#aTreeTemp.C_Charge = isnull(#aTreeTemp.C_Charge,0)  +
					isnull((select sum(isnull(b.C_Charge,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
					,#aTreeTemp.C_Cash = isnull(#aTreeTemp.C_Cash,0)  +
					isnull((select sum(isnull(b.C_Cash,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
				where #aTreeTemp.level = @Level
				set @Level = @Level -1
			end;				

			update a set
				a.C_ProA = b.A_Prom
				,a.C_ProA_T = b.A_PromT
			from #AgentTemp a, #aTreeTemp b where a.C_ID = b.AgentID

			SELECT TOP (@pageSize) * into #targetTemp 	
			From (
				SELECT TOP (@pageSize * @curePage) ROW_NUMBER() OVER (order by  C_ProA desc ,C_ProA_T desc) AS rowNo
					,CAST(0 as int) TotalRecords
					,*
				From 
				(
					select * from #AgentTemp where C_ProA>0 or C_ProA_T>0 or (C_CreTime between @StartD and @EndD)
				) b
			)as a
			WHERE rowNo BETWEEN (((@curePage - 1) * @pageSize) + 1)
			AND (@pageSize * @curePage)
			order by  C_ProA desc ,	C_ProA_T desc

			update a set  
				a.C_TotalWin = b.C_TotalWin
				,a.C_WashS = b.C_WashS
				,a.C_WashF = b.C_WashF
				,a.C_BetS = b.C_BetS
				,a.C_BetActS = b.C_BetActS
				,a.C_3BaoA = b.C_3BaoA
				,a.C_Charge = b.C_Charge
				,a.C_Cash = b.C_Cash
			from #targetTemp a,#aTreeTemp b where a.C_ID = b.AgentID

			update #targetTemp set TotalRecords = @SubAgent

			if @LeftOver < = 0 --指定代理的直属会员数量已经满足当前页查询所需数据条数
			begin
				select * from #targetTemp where C_CreTime  between @StartD and @EndD or (C_ProA_T>0 or C_ProA>0)
			end else begin  --指定代理的直属会员数量不满足当前页查询所需数据条数,还需继续加上指定代理直接邀请会员数据
				declare @tempPageSize int  --计算出直接邀请会员每页条数
				declare @tempCurePage int  --计算出直接邀请会员当前页
				declare @beginNum int --
				declare @endNum int
								
				if @subAgent <= 0 --根据查询条件的PageSize 和CurePage 以及直属代理数量计算所需要查询直接邀请会员情况
				begin
					set @tempCurePage = @CurePage  
					set @tempPageSize =@pageSize
					set @beginNum = (((@tempCurePage-1)*@tempPageSize)+1)
					set @endNum = (@tempCurePage*@tempPageSize)
				end else
				begin
					set @tempCurePage = (@CurePage -(@SubAgent/@pageSize))
					if @SubAgent % @pageSize !=0
					begin
						if @tempCurePage >1
						begin
							set @tempPageSize =@pageSize
							set @beginNum = ((@pageSize - (@SubAgent % @pageSize)) + ((@tempCurePage-2)*@tempPageSize)+1)
							set @endNum = (@beginNum + @tempPageSize)
						end else
						begin
							set @tempPageSize = @pageSize - (@SubAgent % @pageSize)	
							set @beginNum = 1
							set @endNum = @tempPageSize
						end						
					end else
					begin						
						set @tempPageSize =@pageSize
						set @beginNum = (((@tempCurePage-1)*@tempPageSize)+1)
						set @endNum = (@tempCurePage*@tempPageSize)
					end					
				end				
				 
				if @tempPageSize <= 0
				begin
					set @tempPageSize = 1
				end
				
				if @tempCurePage <= 0
				begin
					set @tempCurePage = 1
				end							

				SELECT TOP (@tempPageSize) * into #targetTemp1 	 	
					From (
						SELECT TOP (@tempPageSize*@tempCurePage) ROW_NUMBER() OVER (order by  C_ProA desc,C_ProA_T desc) AS rowNo
				,CAST(0 as int) TotalRecords
				,*
				From 
					(
						select * from #ClntTemp where C_ProA>0 or C_ProA_T>0 or (C_CreTime between @StartD and @EndD)
					)as b
				)as a
			WHERE rowNo BETWEEN @beginNum--(((@tempCurePage - 1) * @tempPageSize) + 1)
			AND @endNum--(@tempPageSize * @tempCurePage)--@LeftOver--
			order by  C_ProA desc,C_ProA_T desc		

			select 
				b.TopClientID ClientID
				,SUM(Amount3Bao) Amount3Bao	
				into #feeTemp1
				from T_WeiTou_BillWash a ,#IDTemp1 b
				where a.ClientID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate
				group by b.TopClientID

			update a set 
				a.C_3BaoA = isnull(b.Amount3Bao,0)
				from #targetTemp1 a,#feeTemp1 b  
				where a.C_ID = b.ClientID 

			select 
				b.TopClientID ClientID				
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
			into #winTemp1
			from T_BetBill  a,#IDTemp1 b
			where a.ClientID = b.ClientID and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #winTemp1(ClientID,WashFee,WashSum,WinSum,BetSum,BetSumAct)

			select 
				b.TopClientID ClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
			from T_BetBill_Archive a(nolock),#IDTemp1 b 
			where a.ClientID = b.ClientID and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			select 
				ClientID
				,SUM(WashFee) WashFee 
				,SUM(WashSum) WashSum
				,SUM(WinSum) WinSum 
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				into #winSTemp1
				from #winTemp1 group by ClientID

			update a set
				a.C_TotalWin = isnull(b.WinSum,0)
				,a.C_WashF = isnull(b.WashFee,0)
				,a.C_WashS = isnull(b.WashSum,0)
				,a.C_BetS = isnull(b.BetSum,0)
				,a.C_BetActS = isnull(b.BetSumAct,0)
			from #targetTemp1 a,#winSTemp1 b where a.C_ID = b.ClientID

			select 
				a.ClientID
				,SUM(WinSum) WinSum
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			into #selfWTemp
			from T_BetBill a,#IDTemp1 b
			where a.ClientID = b.ClientID and b.IsTop=1 and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by a.ClientID

			insert #selfWTemp(ClientID,WinSum,WashFee,WashSum,BetSum,BetSumAct)

			select 
				a.ClientID
				,SUM(WinSum) WinSum
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			from T_BetBill_Archive a,#IDTemp1 b
			where a.ClientID = b.ClientID and b.IsTop=1 and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate 
			group by a.ClientID

			select 
				ClientID
				,SUM(WinSum) WinSum
				,SUM(WashFee) WashFee
				,SUM(WashSum) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			into #sumSelfWTemp
			from #selfWTemp group by ClientID

			update a set  
				a.C_TotalWin_Self = isnull(b.WinSum,0)
				,a.C_WashF_Self = isnull(b.WashFee,0)
				,a.C_WashS_Self = isnull(b.WashSum,0)
				,a.C_BetActS_Self = isnull(b.BetSumAct,0)
				,a.C_BetS_Self = isnull(b.BetSum,0)
			from #targetTemp1 a,#sumSelfWTemp b where a.C_ID = b.ClientID

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			into #chTemp1
			from T_Point a ,#IDTemp1 b
			where a.TargetID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp1 b 
			where a.TargetID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point a,#IDTemp1 b 
			where a.SourceID = b.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp1 b 
			where a.SourceID = b.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			select TargetID,SUM(Delta) Delta into #chsTemp1 from #chTemp1 group by TargetID

			update a set
				a.C_Charge = isnull(b.Delta,0)
			from #targetTemp1 a,#chsTemp1 b where a.C_ID= b.TargetID

			select 
				a.TargetID
				,SUM(Delta) Delta
			into #selfChTemp
			from T_Point a,#IDTemp1 b
			where a.TargetID = b.ClientID and b.IsTop=1 and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by a.TargetID

			insert #selfChTemp(TargetID,Delta)
			
			select 
				a.TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock),#IDTemp1 b
			where a.TargetID = b.ClientID and b.IsTop=1 and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by a.TargetID

			insert #selfChTemp(TargetID,Delta)
			
			select 
				a.SourceID
				,SUM(Delta) Delta
			from T_Point a,#IDTemp1 b
			where a.SourceID = b.ClientID and b.IsTop=1 and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by a.SourceID

			insert #selfChTemp(TargetID,Delta)
			
			select 
				a.SourceID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock),#IDTemp1 b
			where a.SourceID = b.ClientID and b.IsTop=1 and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by a.SourceID

			select TargetID,SUM(Delta) Delta into #sumSelfChTemp from #selfChTemp group by TargetID

			update a set a.C_Charge_Self = ISNULL(b.Delta,0) from #targetTemp1 a,#sumSelfChTemp b where a.C_ID = b.TargetID

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			into #cashTemp1
			from T_Point a ,#IDTemp1 b
			where a.TargetID = b.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock) ,#IDTemp1 b
			where a.TargetID = b.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#IDTemp1 b
			where a.SourceID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock) ,#IDTemp1 b
			where a.SourceID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			select TargetID,SUM(Delta) Delta into #cashsTemp1 from #cashTemp1 group by TargetID

			update a set 
				a.C_Cash = isnull(b.Delta,0)
				from #targetTemp1 a ,#cashsTemp1 b where a.C_ID = b.TargetID
			
			select 
				a.TargetID
				,SUM(Delta) Delta
			into #selfCashTemp
			from T_Point a,#IDTemp1 b 
			where a.TargetID = b.ClientID and b.IsTop=1 and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK')
			and a.StatisticsDay between @StartDate and @EndDate
			group by a.TargetID

			insert #selfCashTemp(TargetID,Delta)

			select 
				a.TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock),#IDTemp1 b 
			where a.TargetID = b.ClientID and b.IsTop=1 and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK')
			and a.StatisticsDay between @StartDate and @EndDate
			group by a.TargetID

			insert #selfCashTemp(TargetID,Delta)

			select 
				a.SourceID
				,SUM(Delta) Delta
			from T_Point a,#IDTemp1 b 
			where a.SourceID = b.ClientID and b.IsTop=1 and a.OperationType='BD'
			and a.StatisticsDay between @StartDate and @EndDate
			group by a.SourceID

			insert #selfCashTemp(TargetID,Delta)

			select 
				a.SourceID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock),#IDTemp1 b 
			where a.SourceID = b.ClientID and b.IsTop=1 and a.OperationType='BD'
			and a.StatisticsDay between @StartDate and @EndDate
			group by a.SourceID

			select TargetID,SUM(Delta) Delta into #sumSelfCashTemp from #selfCashTemp group by TargetID

			update a set a.C_Cash_Self = ISNULL(Delta,0) from #targetTemp1 a,#sumSelfCashTemp b where a.C_ID = b.TargetID			
			
			update #targetTemp1 set TotalRecords = @SubAgent + @SubClent
			
			update #targetTemp set TotalRecords = @SubAgent + @SubClent
			
			select top (@pageSize) * from (
				select * from #targetTemp
				union all
				select * from #targetTemp1
			) a where (a.C_CreTime between @StartD and @EndD) or (a.C_ProA_T > 0 or a.C_ProA >0)
		
			drop table #selfChTemp
			drop table #sumSelfChTemp
			drop table #cashTemp1
			drop table #cashsTemp1
			drop table #selfCashTemp
			drop table #sumSelfCashTemp
			drop table #chsTemp1
			drop table #chTemp1
			drop table #feeTemp1
			drop table #targetTemp1
			drop table #winSTemp1
			drop table #winTemp1
			drop table #selfWTemp
			drop table #sumSelfWTemp
		end
		drop table #AgentTemp
		drop table #aTreeTemp
		drop table #ClntTemp
		drop table #IDTemp1
		drop table #proTemp1
		drop table #targetTemp 
		drop table #cFeeTemp
		drop table #feeTemp
		drop table #bFeeTemp
		drop table #cashsTemp
		drop table #cashTemp
		drop table #chsTemp
		drop table #chTemp
		]]>
	</sql>

	<sql id="Promotion_Agent">
		<![CDATA[
			--当前代理增量查询
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID ='${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'

			declare @StartD nvarchar(40)
			declare @EndD nvarchar(40)
			select @StartD = convert(varchar(11),@StartDate,120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			select @EndD = convert(varchar(11),DATEADD(DAY,1,@EndDate),120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
				
			select
				AgentID A_ID
				,AgentName A_Name
				,LogName A_UserID
				,'SelfA' A_Type
				,ParentID P_ID
				,CAST(0 as int) A_ProA_T
				,CAST(0 as int) A_ProA
				,CAST(0 as numeric(20,4)) A_TotalWin
				,CAST(0 as numeric(20,4)) A_WashS
				,CAST(0 as numeric(20,4)) A_WashF
				,CAST(0 as numeric(20,4)) A_BetS
				,CAST(0 as numeric(20,4)) A_BetActS
				,CAST(0 as numeric(20,4)) A_3BaoA
				,CAST(0 as numeric(20,4)) A_Charge
				,CAST(0 as numeric(20,4)) A_Cash
				,CAST(0 as numeric(20,4)) A_TotalWin_Self --推广会员总赢
				,CAST(0 as numeric(20,4)) A_WashS_Self --推广会员洗码量
				,CAST(0 as numeric(20,4)) A_WashF_Self --推广会员洗码费
				,CAST(0 as numeric(20,4)) A_BetS_Self
				,CAST(0 as numeric(20,4)) A_BetActS_Self 
				,CAST(0 as numeric(20,4)) A_3BaoA_Self --推广会三宝费
				,CAST(0 as numeric(20,4)) A_Charge_Self--推广会上分
				,CAST(0 as numeric(20,4)) A_Cash_Self--推广会下分
				,CreateTime A_CreTime
			into #agentTemp
			from T_Agent a where AgentID = @AgentID and IsHide = 'FALSE'

			;WITH AtreeCTE(AgentID,ParentID,TopAID,Level) AS(
						select AgentID,ParentID,AgentID,0 from T_Agent where  AgentID = @AgentID and IsHide = 'FALSE'
						union all 
						select a.AgentID,a.ParentID,cte.TopAID,cte.Level+1 from T_Agent a  join AtreeCTE cte on a.ParentID = cte.AgentID where a.IsHide ='FALSE'
					)

			select AgentID,ParentID,TopAID,Level 
				,(select COUNT(ClientID) from T_WeiTou_Detail where InviterID = a.AgentID and cCeateTime between @StartD and @EndD ) A_Prom
				,(select COUNT(ClientID) from T_WeiTou_Detail where AgentID3Bao = a.AgentID and cCeateTime between @StartD and @EndD) A_PromT
				,CAST(0 as numeric(20,4)) C_TotalWin --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS
				,CAST(0 as numeric(20,4)) C_BetActS 
				,CAST(0 as numeric(20,4)) C_3BaoA --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash--推广会下分
			into #aTreeTemp from AtreeCTE a	
				
			--计算所查代理/直属代理下推广会员的费用合计
			select 
				c.AgentID
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
				,SUM(a.WashFee) WashFee
				,SUM(a.WashSum_Client) WashSum
			into #cFeeTemp
			from T_BetBill a,T_WeiTou_Detail b,#aTreeTemp c 
			where c.AgentID = b.AgentID3Bao and a.ClientID = b.ClientID and b.cCeateTime between @StartD and @EndD
			and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by c.AgentID				

			insert #cFeeTemp(AgentID,WinSum,BetSum,BetSumAct,WashFee,WashSum)
					
			select 
				c.AgentID
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
				,SUM(a.WashFee) WashFee
				,SUM(a.WashSum_Client) WashSum
			from T_BetBill_Archive a (nolock),T_WeiTou_Detail b,#aTreeTemp c
			where c.AgentID = b.AgentID3Bao and a.ClientID = b.ClientID and b.cCeateTime between @StartD and @EndD 
			and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by c.AgentID

			select 
				AgentID 
				,SUM(WashFee) WashFee
				,SUM(WashSum) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(WinSum) WinSum
			into #feeTemp
			from #cFeeTemp  group by AgentID

			update a set 
				a.C_BetActS = isnull(b.BetSumAct,0)
				,a.C_BetS = isnull(b.BetSum,0)
				,a.C_TotalWin = isnull(b.WinSum,0)
				,a.C_WashF = isnull(b.WashFee,0)
				,a.C_WashS = isnull(b.WashSum,0)
			from #aTreeTemp a,#feeTemp b where a.AgentID = b.AgentID

			--计算所查代理/直属代理的三宝费
			select 
				b.AgentID AgentID3Bao
				,SUM(Amount3Bao) Amount3Bao 
			into #bFeeTemp 
			from T_WeiTou_BillWash a,#aTreeTemp b,T_WeiTou_Detail c 
			where c.AgentID3Bao = b.AgentID and c.cCeateTime between @StartD and @EndD and a.ClientID = c.ClientID
			and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID					

			update #aTreeTemp set C_3BaoA = isnull((select Amount3Bao from #bFeeTemp where AgentID3Bao = #aTreeTemp.AgentID),0)

			--计算所查代理/直属代理下推广会员的上分合计
			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			into #chTemp
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			select TargetID,SUM(Delta) Delta into #chsTemp from #chTemp group by TargetID

			update a set
				a.C_Charge =isnull( b.Delta,0)
				from #aTreeTemp a,#chsTemp b where a.AgentID= b.TargetID
				
			--计算所查代理/直属代理下推广会员的下分合计
			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			into #cashTemp
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock) ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and c.cCeateTime between @StartD and @EndD
			and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			select TargetID,SUM(Delta) Delta into #cashsTemp from #cashTemp group by TargetID

			update a set 
				a.C_Cash = isnull(b.Delta,0)
				from #aTreeTemp a ,#cashsTemp b where a.AgentID = b.TargetID
				
			--计算总推广量
			DECLARE @Level int;
			select @Level = max(Level) from #aTreeTemp;

			while (@Level>=0) begin	
				update #aTreeTemp set 
					#aTreeTemp.A_PromT = isnull(#aTreeTemp.A_PromT,0)  +
					isnull((select sum(isnull(b.A_PromT,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_TotalWin = isnull(#aTreeTemp.C_TotalWin,0)  +
					isnull((select sum(isnull(b.C_TotalWin,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_WashS = isnull(#aTreeTemp.C_WashS,0)  +
					isnull((select sum(isnull(b.C_WashS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_WashF = isnull(#aTreeTemp.C_WashF,0)  +
					isnull((select sum(isnull(b.C_WashF,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_BetS = isnull(#aTreeTemp.C_BetS,0)  +
					isnull((select sum(isnull(b.C_BetS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_BetActS = isnull(#aTreeTemp.C_BetActS,0)  +
					isnull((select sum(isnull(b.C_BetActS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_3BaoA = isnull(#aTreeTemp.C_3BaoA,0)  +
					isnull((select sum(isnull(b.C_3BaoA,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
					,#aTreeTemp.C_Charge = isnull(#aTreeTemp.C_Charge,0)  +
					isnull((select sum(isnull(b.C_Charge,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
					,#aTreeTemp.C_Cash = isnull(#aTreeTemp.C_Cash,0)  +
					isnull((select sum(isnull(b.C_Cash,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
				where #aTreeTemp.level = @Level
				set @Level = @Level -1
			end;				

			update a set
				a.A_ProA = b.A_Prom
				,a.A_ProA_T = b.A_PromT
				,a.A_TotalWin = b.C_TotalWin
				,a.A_WashS = b.C_WashS
				,a.A_WashF = b.C_WashF
				,a.A_BetS = b.C_BetS
				,a.A_BetActS = b.C_BetActS
				,a.A_3BaoA = b.C_3BaoA
				,a.A_Charge = b.C_Charge
				,a.A_Cash = b.C_Cash
			from #agentTemp a,#aTreeTemp b where a.A_ID = b.AgentID

			select * from #agentTemp

			drop table #agentTemp
			drop table #aTreeTemp
			drop table #bFeeTemp
			drop table #cashsTemp
			drop table #cashTemp
			drop table #cFeeTemp
			drop table #chsTemp
			drop table #chTemp
			drop table #feeTemp
		]]>
	</sql>

	<sql id="Promotion_Clnt">
		<![CDATA[
			--当前会员增量查询
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID ='${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'

			declare @StartD nvarchar(40)
			declare @EndD nvarchar(40)
			select @StartD = convert(varchar(11),@StartDate,120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			select @EndD = convert(varchar(11),DATEADD(DAY,1,@EndDate),120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			
			select
				ClientID A_ID
				,ClientName A_Name
				,LogName A_UserID
				,'SelfC' A_Type
				,AgentID P_ID
				,0 A_ProA_T
				,(select COUNT(*) from T_WeiTou_Detail b,T_Client c where b.InviterID = a.ClientID and b.ClientID = c.ClientID and c.CreateTime between @StartD and @EndD) A_ProA
				,(CAST(0 as numeric(20,2))) A_TotalWin
				,(CAST(0 as numeric(20,2))) A_TotalWin_Self
				,(CAST(0 as numeric(20,2))) A_WashS
				,(CAST(0 as numeric(20,2))) A_WashS_Self
				,(CAST(0 as numeric(20,2))) A_WashF
				,(CAST(0 as numeric(20,2))) A_WashF_Self
				,(CAST(0 as numeric(20,2))) A_BetS
				,(CAST(0 as numeric(20,2))) A_BetS_Self
				,(CAST(0 as numeric(20,2))) A_BetActS
				,(CAST(0 as numeric(20,2))) A_BetActS_Self
				,(CAST(0 as numeric(20,2))) A_3BaoA
				,(select SUM(Amount3Bao) from T_WeiTou_BillWash d where d.ClientID = @AgentID and a.CreateTime between @StartD and @EndD) A_3BaoA_Self
				,(CAST(0 as numeric(20,2))) A_Charge
				,(CAST(0 as numeric(20,2))) A_Charge_Self
				,(CAST(0 as numeric(20,2))) A_Cash
				,(CAST(0 as numeric(20,2))) A_Cash_Self
				,CreateTime A_CreTime
			into #agentTemp
			from T_Client a where ClientID=@AgentID

			;WITH AgentCTE (ClientID,InviterID,InviterLogName,TopClientID,IsTop)AS(
				SELECT ClientID,InviterID,InviterLogName, ClientID,1
					FROM T_WeiTou_Detail --a,#agentTemp b  
				where InviterID=@AgentID or ClientID=@AgentID--a.InviterID = b.A_ID or a.ClientID = b.A_ID
				UNION ALL
				SELECT a.ClientID,a.InviterID,a.InviterLogName,cte.TopClientID,0 
					FROM T_WeiTou_Detail a JOIN AgentCTE cte ON a .InviterID = cte.ClientID --join T_Client c on a.ClientID = c.ClientID and c.CreateTime between @StartD and @EndD
			)
			select a.* into #IDTemp from AgentCTE a,T_WeiTou_Detail c where a.ClientID = c.ClientID  and c.cCeateTime between @StartD and @EndD 
			
			--select * from #IDTemp
			select TopClientID,COUNT(TopClientID) couts into #proTemp2 from #IDTemp where IsTop=0 group by TopClientID --a,T_Client c where a.ClientID = c.ClientID and c.CreateTime between @StartD and @EndD group by TopClientID
			
			update #agentTemp set A_ProA_T =isnull((select couts from #proTemp2 where  TopClientID = #agentTemp.A_ID),0)

			--update #agentTemp set A_3BaoA = isnull((select SUM(Amount3Bao) from T_WeiTou_BillWash where InviterID = @AgentID and StatisticsDay between @StartDate and @EndDate),0)

			--update #agentTemp set A_ProA = isnull((select COUNT(*) from T_WeiTou_Detail where InviterID = @AgentID),0)

			select 
				b.TopClientID
				,SUM(Amount3Bao) Amount3Bao
				into #feeTemp
				from T_WeiTou_BillWash a,#IDTemp b
				where a.ClientID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate
				group by b.TopClientID

			update a set
				a.A_3BaoA = ISNULL(b.Amount3Bao,0)
				--,a.A_WashF = isnull(b.WashFee,0)
				--,a.A_WashS = isnull(b.WashSum,0)
			from #agentTemp a ,#feeTemp b where a.A_ID = b.TopClientID

			select 
				b.TopClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			into #winTemp
			from T_BetBill a,#IDTemp b
			where a.ClientID= b.ClientID and State ='#PAY' and StatisticsDay between @StartDate and @EndDate 
			group by b.TopClientID

			insert #winTemp(TopClientID,WashFee,WashSum,WinSum,BetSum,BetSumAct)

			select 
				b.TopClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			from T_BetBill_Archive a(nolock),#IDTemp b
			where a.ClientID= b.ClientID and State ='#PAY' and StatisticsDay between @StartDate and @EndDate 
			group by b.TopClientID

			select 
				TopClientID
				,SUM(WashFee) WashFee 
				,SUM(WashSum) WashSum
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			into #winTemp_A from #winTemp group by TopClientID


			update a set a.A_TotalWin =ISNULL(c.WinSum,0)
						,a.A_BetActS = ISNULL(c.BetSumAct,0)
						,a.A_BetS = ISNULL(c.BetSum,0)
						,a.A_WashF =ISNULL(c.WashFee,0)
						,a.A_WashS = ISNULL(c.WashSum,0)
			  from #agentTemp a,#winTemp_A c where a.A_ID = c.TopClientID

			select  
				SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
			into #selfFeeTemp
 			from T_BetBill a,T_Client b
			where a.ClientID= @AgentID and a.ClientID = b.ClientID and b.CreateTime between @StartD and @EndD 
			and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate

			insert #selfFeeTemp(WinSum,BetSum,BetSumAct,WashFee,WashSum)

			select  
				SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
 			from T_BetBill_Archive a(nolock),T_Client b
			where a.ClientID= @AgentID and a.ClientID= b.ClientID and b.CreateTime between @StartD and @EndD 
			and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate

			select SUM(WashFee) WashFee,SUM(WashSum) WashSum,SUM(WinSum) WinSum,SUM(BetSum) BetSum,SUM(BetSumAct) BetSumAct into #sumSelfFeeTemp from #selfFeeTemp

			update a set
				a.A_TotalWin_Self = isnull(b.WinSum,0)
				,a.A_BetActS_Self = isnull(b.BetSumAct,0)
				,a.A_BetS_Self = isnull(b.BetSum,0)
				,a.A_WashF_Self = isnull(b.WashFee,0)
				,a.A_WashS_Self = isnull(b.WashSum,0)
			from #agentTemp a,#sumSelfFeeTemp b

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			into #chTemp
			from T_Point a ,#IDTemp b
			where a.TargetID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp b
			where a.TargetID =b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point a  ,#IDTemp b
			where a.SourceID =b.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp b
			where a.SourceID =b.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			select TargetID,SUM(Delta) Delta into #chsTemp from #chTemp group by TargetID

			update a set
				a.A_Charge = isnull(b.Delta,0)
			from #agentTemp a,#chsTemp b where a.A_ID= b.TargetID

			select 
				SUM(Delta) Delta
			into #selfChTemp
			from T_Point a,T_Client b 
			where a.TargetID = @AgentID and a.TargetID= b.ClientID and b.CreateTime between @StartD and @EndD
			and a.StatisticsDay between @StartDate and @EndDate and a.OperationType='BD'
			
			insert #selfChTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point_Archive a(nolock),T_Client b 
			where a.TargetID = @AgentID and a.TargetID= b.ClientID and b.CreateTime between @StartD and @EndD
			and a.StatisticsDay between @StartDate and @EndDate and a.OperationType='BD'
			
			insert #selfChTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point a ,T_Client b 
			where a.SourceID = @AgentID and a.SourceID= b.ClientID and b.CreateTime between @StartD and @EndD
			and a.StatisticsDay between @StartDate and @EndDate and a.OperationType='XD'

			insert #selfChTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point_Archive a(nolock),T_Client b 
			where a.SourceID = @AgentID and a.SourceID= b.ClientID and b.CreateTime between @StartD and @EndD
			and a.StatisticsDay between @StartDate and @EndDate and a.OperationType='XD'

			select SUM(Delta) Delta into #sumSelfChTemp from #selfChTemp

			update a set a.A_Charge_Self = ISNULL(b.Delta,0)  from #agentTemp a,#sumSelfChTemp b

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			into #cashTemp
			from T_Point a ,#IDTemp b
			where a.TargetID = b.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp b
			where a.TargetID = b.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point a  ,#IDTemp b
			where a.SourceID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp b
			where a.SourceID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			select TargetID,SUM(Delta) Delta into #cashsTemp from #cashTemp group by TargetID

			update a set 
				a.A_Cash =isnull( b.Delta,0)
			from #agentTemp a ,#cashsTemp b where a.A_ID = b.TargetID

			select 
				SUM(Delta) Delta
			into #selfCashTemp
			from T_Point a,T_Client b
			where a.TargetID= @AgentID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate and a.TargetID= b.ClientID 
			and b.CreateTime between @StartD and @EndD

			insert #selfCashTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point_Archive a(nolock),T_Client b
			where a.TargetID= @AgentID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate and a.TargetID= b.ClientID 
			and b.CreateTime between @StartD and @EndD

			insert #selfCashTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point a ,T_Client b
			where a.SourceID= @AgentID and a.OperationType='BD'
			and a.StatisticsDay between @StartDate and @EndDate and a.SourceID= b.ClientID 
			and b.CreateTime between @StartD and @EndD

			insert #selfCashTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point_Archive a(nolock),T_Client b
			where a.SourceID= @AgentID and a.OperationType='BD'
			and a.StatisticsDay between @StartDate and @EndDate and a.SourceID= b.ClientID 
			and b.CreateTime between @StartD and @EndD

			select SUM(Delta) Delta into #sumSelfCashTemp from #selfCashTemp

			update a set a.A_Cash_Self =ISNULL( b.Delta,0) from #agentTemp a,#sumSelfCashTemp b

			select * from #agentTemp

			drop table #cashsTemp
			drop table #cashTemp
			drop table #chsTemp
			drop table #chTemp
			drop table #feeTemp
			drop table #agentTemp
			drop table #proTemp2
			drop table #winTemp
			drop table #winTemp_A
			drop table #IDTemp
			drop table #selfFeeTemp
			drop table #sumSelfFeeTemp
			drop table #selfChTemp
			drop table #sumSelfChTemp
			drop table #sumSelfCashTemp
			drop table #selfCashTemp
		]]>
	</sql>

	<sql id="Promotion_AllClnt">
		<![CDATA[
			--当前会员存量查询
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID ='${AgentID}'--'52B245578A624AF4B571FF0AE6C52779'
			set @StartDate ='${StartDate}'--'2018-04-01'
			set @EndDate ='${EndDate}'--'2018-06-04'

			declare @StartD nvarchar(40)
			declare @EndD nvarchar(40)
			select @StartD = convert(varchar(11),@StartDate,120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			select @EndD = convert(varchar(11),DATEADD(DAY,1,@EndDate),120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			
			select
				ClientID A_ID
				,ClientName A_Name
				,LogName A_UserID
				,'SelfC' A_Type
				,AgentID P_ID
				,0 A_ProA_T
				,(select COUNT(*) from T_WeiTou_Detail b,T_Client c where b.InviterID = a.ClientID and b.ClientID = c.ClientID ) A_ProA --and c.CreateTime between @StartD and @EndD
				,(CAST(0 as numeric(20,2))) A_TotalWin
				,(CAST(0 as numeric(20,2))) A_TotalWin_Self
				,(CAST(0 as numeric(20,2))) A_WashS
				,(CAST(0 as numeric(20,2))) A_WashS_Self
				,(CAST(0 as numeric(20,2))) A_WashF
				,(CAST(0 as numeric(20,2))) A_WashF_Self
				,(CAST(0 as numeric(20,2))) A_BetS
				,(CAST(0 as numeric(20,2))) A_BetS_Self
				,(CAST(0 as numeric(20,2))) A_BetActS
				,(CAST(0 as numeric(20,2))) A_BetActS_Self
				,(CAST(0 as numeric(20,2))) A_3BaoA
				,(select SUM(Amount3Bao) from T_WeiTou_BillWash d where d.ClientID = @AgentID and a.CreateTime between @StartD and @EndD) A_3BaoA_Self
				,(CAST(0 as numeric(20,2))) A_Charge
				,(CAST(0 as numeric(20,2))) A_Charge_Self
				,(CAST(0 as numeric(20,2))) A_Cash
				,(CAST(0 as numeric(20,2))) A_Cash_Self
				,CreateTime A_CreTime
			into #agentTemp
			from T_Client a where ClientID=@AgentID

			;WITH AgentCTE (ClientID,InviterID,InviterLogName,TopClientID,IsTop)AS(
				SELECT ClientID,InviterID,InviterLogName, ClientID,1
					FROM T_WeiTou_Detail --a,#agentTemp b  
				where InviterID=@AgentID or ClientID=@AgentID--a.InviterID = b.A_ID or a.ClientID = b.A_ID
				UNION ALL
				SELECT a.ClientID,a.InviterID,a.InviterLogName,cte.TopClientID,0 
					FROM T_WeiTou_Detail a JOIN AgentCTE cte ON a .InviterID = cte.ClientID --join T_Client c on a.ClientID = c.ClientID and c.CreateTime between @StartD and @EndD
			)
			select * into #IDTemp from AgentCTE 
			
			--select * from #IDTemp
			select TopClientID,COUNT(TopClientID) couts into #proTemp2 from #IDTemp a,T_Client c where a.ClientID = c.ClientID and IsTop =0  group by TopClientID --and c.CreateTime between @StartD and @EndD
			
			update #agentTemp set A_ProA_T =isnull((select couts from #proTemp2 where  TopClientID = #agentTemp.A_ID),0)

			--update #agentTemp set A_3BaoA = isnull((select SUM(Amount3Bao) from T_WeiTou_BillWash where InviterID = @AgentID and StatisticsDay between @StartDate and @EndDate),0)

			--update #agentTemp set A_ProA = isnull((select COUNT(*) from T_WeiTou_Detail where InviterID = @AgentID),0)

			select 
				b.TopClientID
				,SUM(Amount3Bao) Amount3Bao
				into #feeTemp
				from T_WeiTou_BillWash a,#IDTemp b
				where a.ClientID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate
				group by b.TopClientID

			update a set
				a.A_3BaoA = ISNULL(b.Amount3Bao,0)
				--,a.A_WashF = isnull(b.WashFee,0)
				--,a.A_WashS = isnull(b.WashSum,0)
			from #agentTemp a ,#feeTemp b where a.A_ID = b.TopClientID

			select 
				b.TopClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			into #winTemp
			from T_BetBill a,#IDTemp b
			where a.ClientID= b.ClientID and State ='#PAY' and StatisticsDay between @StartDate and @EndDate 
			group by b.TopClientID

			insert #winTemp(TopClientID,WashFee,WashSum,WinSum,BetSum,BetSumAct)

			select 
				b.TopClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			from T_BetBill_Archive a(nolock),#IDTemp b
			where a.ClientID= b.ClientID and State ='#PAY' and StatisticsDay between @StartDate and @EndDate 
			group by b.TopClientID

			select 
				TopClientID
				,SUM(WashFee) WashFee 
				,SUM(WashSum) WashSum
				,SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			into #winTemp_A from #winTemp group by TopClientID


			update a set a.A_TotalWin =ISNULL(c.WinSum,0)
						,a.A_BetActS = ISNULL(c.BetSumAct,0)
						,a.A_BetS = ISNULL(c.BetSum,0)
						,a.A_WashF =ISNULL(c.WashFee,0)
						,a.A_WashS = ISNULL(c.WashSum,0)
			  from #agentTemp a,#winTemp_A c where a.A_ID = c.TopClientID

			select  
				SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
			into #selfFeeTemp
 			from T_BetBill a--,T_Client b
			where a.ClientID= @AgentID --and a.ClientID = b.ClientID and b.CreateTime between @StartD and @EndD 
			and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate

			insert #selfFeeTemp(WinSum,BetSum,BetSumAct,WashFee,WashSum)

			select  
				SUM(WinSum) WinSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
 			from T_BetBill_Archive a(nolock)--,T_Client b
			where a.ClientID= @AgentID-- and a.ClientID= b.ClientID and b.CreateTime between @StartD and @EndD 
			and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate

			select SUM(WashFee) WashFee,SUM(WashSum) WashSum,SUM(WinSum) WinSum,SUM(BetSum) BetSum,SUM(BetSumAct) BetSumAct into #sumSelfFeeTemp from #selfFeeTemp

			update a set
				a.A_TotalWin_Self = isnull(b.WinSum,0)
				,a.A_BetActS_Self = isnull(b.BetSumAct,0)
				,a.A_BetS_Self = isnull(b.BetSum,0)
				,a.A_WashF_Self = isnull(b.WashFee,0)
				,a.A_WashS_Self = isnull(b.WashSum,0)
			from #agentTemp a,#sumSelfFeeTemp b

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			into #chTemp
			from T_Point a ,#IDTemp b
			where a.TargetID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp b
			where a.TargetID =b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#IDTemp b
			where a.SourceID =b.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp b
			where a.SourceID =b.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			select TargetID,SUM(Delta) Delta into #chsTemp from #chTemp group by TargetID

			update a set
				a.A_Charge = isnull(b.Delta,0)
			from #agentTemp a,#chsTemp b where a.A_ID= b.TargetID

			select 
				SUM(Delta) Delta
			into #selfChTemp
			from T_Point a--,T_Client b 
			where a.TargetID = @AgentID --and a.TargetID= b.ClientID and b.CreateTime between @StartD and @EndD
			and a.StatisticsDay between @StartDate and @EndDate and a.OperationType='BD'
			
			insert #selfChTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point_Archive a(nolock)--,T_Client b 
			where a.TargetID = @AgentID --and a.TargetID= b.ClientID and b.CreateTime between @StartD and @EndD
			and a.StatisticsDay between @StartDate and @EndDate and a.OperationType='BD'
			
			insert #selfChTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point a --,T_Client b 
			where a.SourceID = @AgentID --and a.TargetID= b.ClientID and b.CreateTime between @StartD and @EndD
			and a.StatisticsDay between @StartDate and @EndDate and a.OperationType='XD'
			
			insert #selfChTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point_Archive a(nolock)--,T_Client b 
			where a.SourceID = @AgentID --and a.TargetID= b.ClientID and b.CreateTime between @StartD and @EndD
			and a.StatisticsDay between @StartDate and @EndDate and a.OperationType='XD'
			
			select SUM(Delta) Delta into #sumSelfChTemp from #selfChTemp

			update a set a.A_Charge_Self = ISNULL(b.Delta,0)  from #agentTemp a,#sumSelfChTemp b

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			into #cashTemp
			from T_Point a ,#IDTemp b
			where a.TargetID = b.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp b
			where a.TargetID = b.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point a,#IDTemp b
			where a.SourceID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp b
			where a.SourceID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID
			
			select TargetID,SUM(Delta) Delta into #cashsTemp from #cashTemp group by TargetID

			update a set 
				a.A_Cash =isnull( b.Delta,0)
			from #agentTemp a ,#cashsTemp b where a.A_ID = b.TargetID

			select 
				SUM(Delta) Delta
			into #selfCashTemp
			from T_Point a--,T_Client b
			where a.TargetID= @AgentID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate --and a.TargetID= b.ClientID 
			--and b.CreateTime between @StartD and @EndD

			insert #selfCashTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point_Archive a(nolock)--,T_Client b
			where a.TargetID= @AgentID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate --and a.TargetID= b.ClientID 
			--and b.CreateTime between @StartD and @EndD

			insert #selfCashTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point a --,T_Client b
			where a.SourceID= @AgentID and a.OperationType='BD'
			and a.StatisticsDay between @StartDate and @EndDate --and a.TargetID= b.ClientID 
			--and b.CreateTime between @StartD and @EndD

			insert #selfCashTemp(Delta)

			select 
				SUM(Delta) Delta
			from T_Point_Archive a(nolock)--,T_Client b
			where a.SourceID= @AgentID and a.OperationType='BD'
			and a.StatisticsDay between @StartDate and @EndDate --and a.TargetID= b.ClientID 
			--and b.CreateTime between @StartD and @EndD

			select SUM(Delta) Delta into #sumSelfCashTemp from #selfCashTemp

			update a set a.A_Cash_Self =ISNULL( b.Delta,0) from #agentTemp a,#sumSelfCashTemp b

			select * from #agentTemp

			drop table #cashsTemp
			drop table #cashTemp
			drop table #chsTemp
			drop table #chTemp
			drop table #feeTemp
			drop table #agentTemp
			drop table #proTemp2
			drop table #winTemp
			drop table #winTemp_A
			drop table #IDTemp
			drop table #selfFeeTemp
			drop table #sumSelfFeeTemp
			drop table #selfChTemp
			drop table #sumSelfChTemp
			drop table #sumSelfCashTemp
			drop table #selfCashTemp
		]]>
	</sql>

	<sql id="Promotion_AllAgent">
		<![CDATA[
			--当前代理存量查询
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID ='${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'

			declare @StartD nvarchar(40)
			declare @EndD nvarchar(40)
			select @StartD = convert(varchar(11),@StartDate,120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			select @EndD = convert(varchar(11),DATEADD(DAY,1,@EndDate),120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
				
			select
				AgentID A_ID
				,AgentName A_Name
				,LogName A_UserID
				,'SelfA' A_Type
				,ParentID P_ID
				,CAST(0 as int) A_ProA_T
				,CAST(0 as int) A_ProA
				,CAST(0 as numeric(20,4)) A_TotalWin
				,CAST(0 as numeric(20,4)) A_WashS
				,CAST(0 as numeric(20,4)) A_WashF
				,CAST(0 as numeric(20,4)) A_BetS
				,CAST(0 as numeric(20,4)) A_BetActS
				,CAST(0 as numeric(20,4)) A_3BaoA
				,CAST(0 as numeric(20,4)) A_Charge
				,CAST(0 as numeric(20,4)) A_Cash
				,CAST(0 as numeric(20,4)) A_TotalWin_Self --推广会员总赢
				,CAST(0 as numeric(20,4)) A_WashS_Self --推广会员洗码量
				,CAST(0 as numeric(20,4)) A_WashF_Self --推广会员洗码费
				,CAST(0 as numeric(20,4)) A_BetS_Self
				,CAST(0 as numeric(20,4)) A_BetActS_Self 
				,CAST(0 as numeric(20,4)) A_3BaoA_Self --推广会三宝费
				,CAST(0 as numeric(20,4)) A_Charge_Self--推广会上分
				,CAST(0 as numeric(20,4)) A_Cash_Self--推广会下分
				,CreateTime A_CreTime
			into #agentTemp
			from T_Agent a where AgentID = @AgentID and IsHide = 'FALSE'

			;WITH AtreeCTE(AgentID,ParentID,TopAID,Level) AS(
						select AgentID,ParentID,AgentID,0 from T_Agent where  AgentID = @AgentID and IsHide = 'FALSE'
						union all 
						select a.AgentID,a.ParentID,cte.TopAID,cte.Level+1 from T_Agent a  join AtreeCTE cte on a.ParentID = cte.AgentID where a.IsHide ='FALSE'
					)

			select AgentID,ParentID,TopAID,Level 
				,(select COUNT(ClientID) from T_WeiTou_Detail where InviterID = a.AgentID) A_Prom
				,(select COUNT(ClientID) from T_WeiTou_Detail where AgentID3Bao = a.AgentID) A_PromT
				,CAST(0 as numeric(20,4)) C_TotalWin --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS
				,CAST(0 as numeric(20,4)) C_BetActS 
				,CAST(0 as numeric(20,4)) C_3BaoA --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash--推广会下分
			into #aTreeTemp from AtreeCTE a	
				
			--计算所查代理/直属代理下推广会员的费用合计
			select 
				c.AgentID
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
				,SUM(a.WashFee) WashFee
				,SUM(a.WashSum_Client) WashSum
			into #cFeeTemp
			from T_BetBill a,T_WeiTou_Detail b,#aTreeTemp c 
			where c.AgentID = b.AgentID3Bao and a.ClientID = b.ClientID and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by c.AgentID				

			insert #cFeeTemp(AgentID,WinSum,BetSum,BetSumAct,WashFee,WashSum)
					
			select 
				c.AgentID
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
				,SUM(a.WashFee) WashFee
				,SUM(a.WashSum_Client) WashSum
			from T_BetBill_Archive a (nolock),T_WeiTou_Detail b,#aTreeTemp c
			where c.AgentID = b.AgentID3Bao and a.ClientID = b.ClientID and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by c.AgentID

			select 
				AgentID 
				,SUM(WashFee) WashFee
				,SUM(WashSum) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(WinSum) WinSum
			into #feeTemp
			from #cFeeTemp  group by AgentID

			update a set 
				a.C_BetActS = isnull(b.BetSumAct,0)
				,a.C_BetS = isnull(b.BetSum,0)
				,a.C_TotalWin = isnull(b.WinSum,0)
				,a.C_WashF = isnull(b.WashFee,0)
				,a.C_WashS = isnull(b.WashSum,0)
			from #aTreeTemp a,#feeTemp b where a.AgentID = b.AgentID

			--计算所查代理/直属代理的三宝费
			select 
				b.AgentID AgentID3Bao
				,SUM(Amount3Bao) Amount3Bao 
			into #bFeeTemp 
			from T_WeiTou_BillWash a,#aTreeTemp b 
			where a.AgentID3Bao = b.AgentID and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID					

			update #aTreeTemp set C_3BaoA = isnull((select Amount3Bao from #bFeeTemp where AgentID3Bao = #aTreeTemp.AgentID),0)

			--计算所查代理/直属代理下推广会员的上分合计
			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			into #chTemp
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			select TargetID,SUM(Delta) Delta into #chsTemp from #chTemp group by TargetID

			update a set
				a.C_Charge =isnull( b.Delta,0)
				from #aTreeTemp a,#chsTemp b where a.AgentID= b.TargetID
				
			--计算所查代理/直属代理下推广会员的下分合计
			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			into #cashTemp
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock) ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			select TargetID,SUM(Delta) Delta into #cashsTemp from #cashTemp group by TargetID

			update a set 
				a.C_Cash = isnull(b.Delta,0)
				from #aTreeTemp a ,#cashsTemp b where a.AgentID = b.TargetID
				
			--计算总推广量
			DECLARE @Level int;
			select @Level = max(Level) from #aTreeTemp;

			while (@Level>=0) begin	
				update #aTreeTemp set 
					#aTreeTemp.A_PromT = isnull(#aTreeTemp.A_PromT,0)  +
					isnull((select sum(isnull(b.A_PromT,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_TotalWin = isnull(#aTreeTemp.C_TotalWin,0)  +
					isnull((select sum(isnull(b.C_TotalWin,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_WashS = isnull(#aTreeTemp.C_WashS,0)  +
					isnull((select sum(isnull(b.C_WashS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_WashF = isnull(#aTreeTemp.C_WashF,0)  +
					isnull((select sum(isnull(b.C_WashF,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_BetS = isnull(#aTreeTemp.C_BetS,0)  +
					isnull((select sum(isnull(b.C_BetS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_BetActS = isnull(#aTreeTemp.C_BetActS,0)  +
					isnull((select sum(isnull(b.C_BetActS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_3BaoA = isnull(#aTreeTemp.C_3BaoA,0)  +
					isnull((select sum(isnull(b.C_3BaoA,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
					,#aTreeTemp.C_Charge = isnull(#aTreeTemp.C_Charge,0)  +
					isnull((select sum(isnull(b.C_Charge,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
					,#aTreeTemp.C_Cash = isnull(#aTreeTemp.C_Cash,0)  +
					isnull((select sum(isnull(b.C_Cash,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
				where #aTreeTemp.level = @Level
				set @Level = @Level -1
			end;				

			update a set
				a.A_ProA = b.A_Prom
				,a.A_ProA_T = b.A_PromT
				,a.A_TotalWin = b.C_TotalWin
				,a.A_WashS = b.C_WashS
				,a.A_WashF = b.C_WashF
				,a.A_BetS = b.C_BetS
				,a.A_BetActS = b.C_BetActS
				,a.A_3BaoA = b.C_3BaoA
				,a.A_Charge = b.C_Charge
				,a.A_Cash = b.C_Cash
			from #agentTemp a,#aTreeTemp b where a.A_ID = b.AgentID

			select * from #agentTemp

			drop table #agentTemp
			drop table #aTreeTemp
			drop table #bFeeTemp
			drop table #cashsTemp
			drop table #cashTemp
			drop table #cFeeTemp
			drop table #chsTemp
			drop table #chTemp
			drop table #feeTemp
		]]>
	</sql>

	<sql id="Promotion_AllClnt4A">
		<![CDATA[			
			--总存量查询
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)
			declare @pageSize int
			declare @curePage int
			declare @TotalRecords int
			declare @SubAgent int --指定代理下直属代理数量
			declare @SubClent int --指定代理直接邀请会员数量
			declare @LeftOver int --根据查询条件中的CurPage和PageSize计算出除了直属代理还需要查询的数据条数

			set @AgentID = '${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'
			set @pageSize ='${pageSize}'
			set @curePage ='${curePage}'

			declare @StartD nvarchar(40) --将查询时间转化成包含时分秒格式的
			declare @EndD nvarchar(40) --将查询时间转化成包含时分秒格式的
			select @StartD = convert(varchar(11),@StartDate,120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			select @EndD = convert(varchar(11),DATEADD(DAY,1,@EndDate),120)+ ' ' + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			
			;WITH AtreeCTE(AgentID,ParentID,TopAID,Level) AS(
						select AgentID,ParentID,AgentID,0 from T_Agent where  AgentID = @AgentID and IsHide = 'FALSE'
						union all 
						select a.AgentID,a.ParentID,cte.TopAID,cte.Level+1 from T_Agent a  join AtreeCTE cte on a.ParentID = cte.AgentID where a.IsHide ='FALSE'
					)

			select AgentID,ParentID,TopAID,Level 
				,(select COUNT(ClientID) from T_WeiTou_Detail where InviterID = a.AgentID) A_Prom
				,(select COUNT(ClientID) from T_WeiTou_Detail where AgentID3Bao = a.AgentID) A_PromT
				,CAST(0 as numeric(20,4)) C_TotalWin --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS
				,CAST(0 as numeric(20,4)) C_BetActS 
				,CAST(0 as numeric(20,4)) C_3BaoA --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash--推广会下分
			into #aTreeTemp from AtreeCTE a			
			
			--递归查找会员邀请关系
			;WITH AgentCTE (ClientID,InviterID,InviterLogName,TopClientID,IsTop)AS(
				SELECT ClientID,InviterID,InviterLogName, ClientID, 1 
					FROM T_WeiTou_Detail 
					where InviterID= @AgentID or ClientID = @AgentID 
				UNION ALL
				SELECT a.ClientID,a.InviterID,a.InviterLogName,cte.TopClientID, 0 
					FROM T_WeiTou_Detail a JOIN AgentCTE cte ON a .InviterID = cte.ClientID 
			)
			select a.* into #IDTemp1  from AgentCTE a--,T_Client c where a.ClientID = c.ClientID  and c.CreateTime between @StartD and @EndD 
				 
			select TopClientID,COUNT(TopClientID) couts into #proTemp1 from #IDTemp1 where IsTop=0 group by TopClientID

			--查询直接邀请会员列表
			select 
				a.ClientID C_ID
				,c.ClientName C_Name
				,a.logName C_UserID
				,'OwnC' C_Type
				,InviterID C_InID
				,InviterLogName C_InUserID
				,InviterType C_InT
				,AgentID3Bao C_AID
				,(select COUNT(*) from T_WeiTou_Detail b,T_Client d where b.InviterID = a.ClientID and b.ClientID = d.ClientID and d.CreateTime between @StartD and @EndD) C_ProA --推广量
				,isnull((select couts from #proTemp1 where TopClientID = a.ClientID),0) C_ProA_T --总推广量
				,CAST(0 as numeric(20,4)) C_TotalWin --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS
				,CAST(0 as numeric(20,4)) C_BetActS 
				,CAST(0 as numeric(20,4)) C_3BaoA --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash--推广会下分
				,CAST(0 as numeric(20,4)) C_TotalWin_Self --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS_Self --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF_Self --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS_Self
				,CAST(0 as numeric(20,4)) C_BetActS_Self 
				,(select SUM(Amount3Bao) from T_WeiTou_BillWash t ,T_Client tt where a.ClientID = t.ClientID and t.ClientID= tt.ClientID and tt.CreateTime between @StartD and @EndD) C_3BaoA_Self --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge_Self--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash_Self--推广会下分
				,c.CreateTime C_CreTime
			into #ClntTemp
			from T_WeiTou_Detail a  left join T_Client c on a.ClientID= c.ClientID
			where InviterID = @AgentID

			--查询直属代理列表
			select 
				AgentID C_ID
				,AgentName C_Name
				,logName C_UserID
				,'OwnA' C_Type
				,'' C_InID
				,'' C_InUserID
				,'' C_InT
				,ParentID C_AID
				,CAST(0 as int) C_ProA --推广量(select A_Prom from #aTreeTemp b where a.AgentID = b.AgentID)
				,CAST(0 as int) C_ProA_T --总推广量 (select A_PromT from #aTreeTemp b where a.AgentID = b.AgentID)
				,CAST(0 as numeric(20,4)) C_TotalWin --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS
				,CAST(0 as numeric(20,4)) C_BetActS 
				,CAST(0 as numeric(20,4)) C_3BaoA --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash--推广会下分
				,CAST(0 as numeric(20,4)) C_TotalWin_Self --推广会员总赢
				,CAST(0 as numeric(20,4)) C_WashS_Self --推广会员洗码量
				,CAST(0 as numeric(20,4)) C_WashF_Self --推广会员洗码费
				,CAST(0 as numeric(20,4)) C_BetS_Self
				,CAST(0 as numeric(20,4)) C_BetActS_Self 
				,CAST(0 as numeric(20,4)) C_3BaoA_Self --推广会三宝费
				,CAST(0 as numeric(20,4)) C_Charge_Self--推广会上分
				,CAST(0 as numeric(20,4)) C_Cash_Self--推广会下分
				,CreateTime C_CreTime
			into #AgentTemp
			from T_Agent a
			where ParentID = @AgentID and IsHide = 'FALSE'

			set @SubAgent = (select COUNT(*) from #AgentTemp)

			select @SubClent = (select COUNT(*) from #ClntTemp)

			if ((@pageSize*(@curePage-1)>@SubAgent+@SubClent and (@SubAgent+@SubClent)>0 and @curePage>1) or (@SubAgent+@SubClent)<=0)
			begin
				raiserror('没有找到数据！', 16, 1)
				return
			end

			if @SubAgent>= @pageSize*@curePage
			begin
				set @LeftOver = 0
			end else 
			begin
				set @LeftOver = @pageSize*@curePage - @SubAgent
			end			
				
			--计算所查代理/直属代理下推广会员的费用合计
			select 
				c.AgentID
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
				,SUM(a.WashFee) WashFee
				,SUM(a.WashSum_Client) WashSum
			into #cFeeTemp
			from T_BetBill a,T_WeiTou_Detail b,#aTreeTemp c 
			where c.AgentID = b.AgentID3Bao and a.ClientID = b.ClientID and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by c.AgentID				

			insert #cFeeTemp(AgentID,WinSum,BetSum,BetSumAct,WashFee,WashSum)
					
			select 
				c.AgentID
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
				,SUM(a.WashFee) WashFee
				,SUM(a.WashSum_Client) WashSum
			from T_BetBill_Archive a (nolock),T_WeiTou_Detail b,#aTreeTemp c
			where c.AgentID = b.AgentID3Bao and a.ClientID = b.ClientID and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by c.AgentID

			select 
				AgentID 
				,SUM(WashFee) WashFee
				,SUM(WashSum) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				,SUM(WinSum) WinSum
			into #feeTemp
			from #cFeeTemp  group by AgentID

			update a set 
				a.C_BetActS = isnull(b.BetSumAct,0)
				,a.C_BetS = isnull(b.BetSum,0)
				,a.C_TotalWin = isnull(b.WinSum,0)
				,a.C_WashF = isnull(b.WashFee,0)
				,a.C_WashS = isnull(b.WashSum,0)
			from #aTreeTemp a,#feeTemp b where a.AgentID = b.AgentID

			--计算所查代理/直属代理的三宝费
			select 
				b.AgentID AgentID3Bao
				,SUM(Amount3Bao) Amount3Bao 
			into #bFeeTemp 
			from T_WeiTou_BillWash a,#aTreeTemp b 
			where a.AgentID3Bao = b.AgentID and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID					

			update #aTreeTemp set C_3BaoA = isnull((select Amount3Bao from #bFeeTemp where AgentID3Bao = #aTreeTemp.AgentID),0)

			--计算所查代理/直属代理下推广会员的上分合计
			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			into #chTemp
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #chTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			select TargetID,SUM(Delta) Delta into #chsTemp from #chTemp group by TargetID

			update a set
				a.C_Charge =isnull( b.Delta,0)
				from #aTreeTemp a,#chsTemp b where a.AgentID= b.TargetID
				
			--计算所查代理/直属代理下推广会员的下分合计
			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			into #cashTemp
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c 
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.TargetID = c.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') 
			and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			insert #cashTemp(TargetID,Delta)

			select
				b.AgentID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock) ,#aTreeTemp b,T_WeiTou_Detail c
			where b.AgentID = c.AgentID3Bao and a.SourceID = c.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.AgentID

			select TargetID,SUM(Delta) Delta into #cashsTemp from #cashTemp group by TargetID

			update a set 
				a.C_Cash = isnull(b.Delta,0)
				from #aTreeTemp a ,#cashsTemp b where a.AgentID = b.TargetID
				
			--计算总推广量
			DECLARE @Level int;
			select @Level = max(Level) from #aTreeTemp;

			while (@Level>=0) begin	
				update #aTreeTemp set 
					#aTreeTemp.A_PromT = isnull(#aTreeTemp.A_PromT,0)  +
					isnull((select sum(isnull(b.A_PromT,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_TotalWin = isnull(#aTreeTemp.C_TotalWin,0)  +
					isnull((select sum(isnull(b.C_TotalWin,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_WashS = isnull(#aTreeTemp.C_WashS,0)  +
					isnull((select sum(isnull(b.C_WashS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_WashF = isnull(#aTreeTemp.C_WashF,0)  +
					isnull((select sum(isnull(b.C_WashF,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_BetS = isnull(#aTreeTemp.C_BetS,0)  +
					isnull((select sum(isnull(b.C_BetS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0) 
					,#aTreeTemp.C_BetActS = isnull(#aTreeTemp.C_BetActS,0)  +
					isnull((select sum(isnull(b.C_BetActS,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)
					,#aTreeTemp.C_3BaoA = isnull(#aTreeTemp.C_3BaoA,0)  +
					isnull((select sum(isnull(b.C_3BaoA,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
					,#aTreeTemp.C_Charge = isnull(#aTreeTemp.C_Charge,0)  +
					isnull((select sum(isnull(b.C_Charge,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
					,#aTreeTemp.C_Cash = isnull(#aTreeTemp.C_Cash,0)  +
					isnull((select sum(isnull(b.C_Cash,0)) from #aTreeTemp b where b.ParentID = #aTreeTemp.AgentID ),0)  
				where #aTreeTemp.level = @Level
				set @Level = @Level -1
			end;				

			update a set
				a.C_ProA = b.A_Prom
				,a.C_ProA_T = b.A_PromT
			from #AgentTemp a, #aTreeTemp b where a.C_ID = b.AgentID

			SELECT TOP (@pageSize) * into #targetTemp 	
			From (
				SELECT TOP (@pageSize * @curePage) ROW_NUMBER() OVER (order by  C_ProA desc ,C_ProA_T desc) AS rowNo
					,CAST(0 as int) TotalRecords
					,*
				From #AgentTemp
			)as a
			WHERE rowNo BETWEEN (((@curePage - 1) * @pageSize) + 1)
			AND (@pageSize * @curePage)
			order by  C_ProA desc ,	C_ProA_T desc

			update a set  
				a.C_TotalWin = b.C_TotalWin
				,a.C_WashS = b.C_WashS
				,a.C_WashF = b.C_WashF
				,a.C_BetS = b.C_BetS
				,a.C_BetActS = b.C_BetActS
				,a.C_3BaoA = b.C_3BaoA
				,a.C_Charge = b.C_Charge
				,a.C_Cash = b.C_Cash
			from #targetTemp a,#aTreeTemp b where a.C_ID = b.AgentID

			update #targetTemp set TotalRecords = @SubAgent

			if @LeftOver < = 0 --指定代理的直属会员数量已经满足当前页查询所需数据条数
			begin
				select * from #targetTemp
			end else begin  --指定代理的直属会员数量不满足当前页查询所需数据条数,还需继续加上指定代理直接邀请会员数据
				declare @tempPageSize int  --计算出直接邀请会员每页条数
				declare @tempCurePage int  --计算出直接邀请会员当前页
				declare @beginNum int --
				declare @endNum int
								
				if @subAgent <= 0 --根据查询条件的PageSize 和CurePage 以及直属代理数量计算所需要查询直接邀请会员情况
				begin
					set @tempCurePage = @CurePage  
					set @tempPageSize =@pageSize
					set @beginNum = (((@tempCurePage-1)*@tempPageSize)+1)
					set @endNum = (@tempCurePage*@tempPageSize)
				end else
				begin
					set @tempCurePage = (@CurePage -(@SubAgent/@pageSize))
					if @SubAgent % @pageSize !=0
					begin
						if @tempCurePage >1
						begin
							set @tempPageSize =@pageSize
							set @beginNum = ((@pageSize - (@SubAgent % @pageSize)) + ((@tempCurePage-2)*@tempPageSize)+1)
							set @endNum = (@beginNum + @tempPageSize)
						end else
						begin
							set @tempPageSize = @pageSize - (@SubAgent % @pageSize)	
							set @beginNum = 1
							set @endNum = @tempPageSize
						end						
					end else
					begin						
						set @tempPageSize =@pageSize
						set @beginNum = (((@tempCurePage-1)*@tempPageSize)+1)
						set @endNum = (@tempCurePage*@tempPageSize)
					end					
				end				
				 
				if @tempPageSize <= 0
				begin
					set @tempPageSize = 1
				end
				
				if @tempCurePage <= 0
				begin
					set @tempCurePage = 1
				end							

				SELECT TOP (@tempPageSize) * into #targetTemp1 	 	
					From (
						SELECT TOP (@tempPageSize*@tempCurePage) ROW_NUMBER() OVER (order by  C_ProA desc,C_ProA_T desc) AS rowNo
				,CAST(0 as int) TotalRecords
					,*
					From #ClntTemp
				)as a
			WHERE rowNo BETWEEN @beginNum--(((@tempCurePage - 1) * @tempPageSize) + 1)
			AND @endNum--(@tempPageSize * @tempCurePage)--@LeftOver--
			order by  C_ProA desc,C_ProA_T desc		

			select 
				b.TopClientID ClientID
				,SUM(Amount3Bao) Amount3Bao	
				into #feeTemp1
				from T_WeiTou_BillWash a ,#IDTemp1 b
				where a.ClientID = b.ClientID and a.StatisticsDay between @StartDate and @EndDate
				group by b.TopClientID

			update a set 
				a.C_3BaoA = isnull(b.Amount3Bao,0)
				from #targetTemp1 a,#feeTemp1 b  
				where a.C_ID = b.ClientID 

			select 
				b.TopClientID ClientID				
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
			into #winTemp1
			from T_BetBill  a,#IDTemp1 b
			where a.ClientID = b.ClientID and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #winTemp1(ClientID,WashFee,WashSum,WinSum,BetSum,BetSumAct)

			select 
				b.TopClientID ClientID
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(a.WinSum) WinSum
				,SUM(a.BetSum) BetSum
				,SUM(a.BetSumAct) BetSumAct
			from T_BetBill_Archive a(nolock),#IDTemp1 b 
			where a.ClientID = b.ClientID and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			select 
				ClientID
				,SUM(WashFee) WashFee 
				,SUM(WashSum) WashSum
				,SUM(WinSum) WinSum 
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
				into #winSTemp1
				from #winTemp1 group by ClientID

			update a set
				a.C_TotalWin = isnull(b.WinSum,0)
				,a.C_WashF = isnull(b.WashFee,0)
				,a.C_WashS = isnull(b.WashSum,0)
				,a.C_BetS = isnull(b.BetSum,0)
				,a.C_BetActS = isnull(b.BetSumAct,0)
			from #targetTemp1 a,#winSTemp1 b where a.C_ID = b.ClientID

			select 
				a.ClientID
				,SUM(WinSum) WinSum
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			into #selfWTemp
			from T_BetBill a,#IDTemp1 b
			where a.ClientID = b.ClientID and b.IsTop=1 and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate
			group by a.ClientID

			insert #selfWTemp(ClientID,WinSum,WashFee,WashSum,BetSum,BetSumAct)

			select 
				a.ClientID
				,SUM(WinSum) WinSum
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			from T_BetBill_Archive a,#IDTemp1 b
			where a.ClientID = b.ClientID and b.IsTop=1 and a.State='#PAY' and a.StatisticsDay between @StartDate and @EndDate 
			group by a.ClientID

			select 
				ClientID
				,SUM(WinSum) WinSum
				,SUM(WashFee) WashFee
				,SUM(WashSum) WashSum
				,SUM(BetSum) BetSum
				,SUM(BetSumAct) BetSumAct
			into #sumSelfWTemp
			from #selfWTemp group by ClientID

			update a set  
				a.C_TotalWin_Self = isnull(b.WinSum,0)
				,a.C_WashF_Self = isnull(b.WashFee,0)
				,a.C_WashS_Self = isnull(b.WashSum,0)
				,a.C_BetActS_Self = isnull(b.BetSumAct,0)
				,a.C_BetS_Self = isnull(b.BetSum,0)
			from #targetTemp1 a,#sumSelfWTemp b where a.C_ID = b.ClientID

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			into #chTemp1
			from T_Point a ,#IDTemp1 b
			where a.TargetID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp1 b 
			where a.TargetID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point a,#IDTemp1 b 
			where a.SourceID = b.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #chTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a (nolock),#IDTemp1 b 
			where a.SourceID = b.ClientID and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			select TargetID,SUM(Delta) Delta into #chsTemp1 from #chTemp1 group by TargetID

			update a set
				a.C_Charge = isnull(b.Delta,0)
			from #targetTemp1 a,#chsTemp1 b where a.C_ID= b.TargetID

			select 
				a.TargetID
				,SUM(Delta) Delta
			into #selfChTemp
			from T_Point a,#IDTemp1 b
			where a.TargetID = b.ClientID and b.IsTop=1 and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by a.TargetID

			insert #selfChTemp(TargetID,Delta)
			
			select 
				a.TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock),#IDTemp1 b
			where a.TargetID = b.ClientID and b.IsTop=1 and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by a.TargetID

			insert #selfChTemp(TargetID,Delta)
			
			select 
				a.SourceID
				,SUM(Delta) Delta
			from T_Point a,#IDTemp1 b
			where a.SourceID = b.ClientID and b.IsTop=1 and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by a.SourceID

			insert #selfChTemp(TargetID,Delta)
			
			select 
				a.SourceID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock),#IDTemp1 b
			where a.SourceID = b.ClientID and b.IsTop=1 and a.OperationType='XD' and a.StatisticsDay between @StartDate and @EndDate
			group by a.SourceID

			select TargetID,SUM(Delta) Delta into #sumSelfChTemp from #selfChTemp group by TargetID

			update a set a.C_Charge_Self = ISNULL(b.Delta,0) from #targetTemp1 a,#sumSelfChTemp b where a.C_ID = b.TargetID

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			into #cashTemp1
			from T_Point a ,#IDTemp1 b
			where a.TargetID = b.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock) ,#IDTemp1 b
			where a.TargetID = b.ClientID and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK') and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point a ,#IDTemp1 b
			where a.SourceID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			insert #cashTemp1(TargetID,Delta)

			select
				b.TopClientID TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock) ,#IDTemp1 b
			where a.SourceID = b.ClientID and a.OperationType='BD' and a.StatisticsDay between @StartDate and @EndDate
			group by b.TopClientID

			select TargetID,SUM(Delta) Delta into #cashsTemp1 from #cashTemp1 group by TargetID

			update a set 
				a.C_Cash = isnull(b.Delta,0)
				from #targetTemp1 a ,#cashsTemp1 b where a.C_ID = b.TargetID
			
			select 
				a.TargetID
				,SUM(Delta) Delta
			into #selfCashTemp
			from T_Point a,#IDTemp1 b 
			where a.TargetID = b.ClientID and b.IsTop=1 and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK')
			and a.StatisticsDay between @StartDate and @EndDate
			group by a.TargetID

			insert #selfCashTemp(TargetID,Delta)

			select 
				a.TargetID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock),#IDTemp1 b 
			where a.TargetID = b.ClientID and b.IsTop=1 and (a.OperationType='XD' or a.OperationType='QL' or a.OperationType='QK')
			and a.StatisticsDay between @StartDate and @EndDate
			group by a.TargetID

			insert #selfCashTemp(TargetID,Delta)

			select 
				a.SourceID
				,SUM(Delta) Delta
			from T_Point a,#IDTemp1 b 
			where a.SourceID = b.ClientID and b.IsTop=1 and a.OperationType='BD'
			and a.StatisticsDay between @StartDate and @EndDate
			group by a.SourceID

			insert #selfCashTemp(TargetID,Delta)

			select 
				a.SourceID
				,SUM(Delta) Delta
			from T_Point_Archive a(nolock),#IDTemp1 b 
			where a.SourceID = b.ClientID and b.IsTop=1 and a.OperationType='BD'
			and a.StatisticsDay between @StartDate and @EndDate
			group by a.SourceID

			select TargetID,SUM(Delta) Delta into #sumSelfCashTemp from #selfCashTemp group by TargetID

			update a set a.C_Cash_Self = ISNULL(Delta,0) from #targetTemp1 a,#sumSelfCashTemp b where a.C_ID = b.TargetID			
			
			update #targetTemp1 set TotalRecords = @SubAgent + @SubClent
			
			update #targetTemp set TotalRecords = @SubAgent + @SubClent			
			
			select * from #targetTemp
			union all
			select * from #targetTemp1			
		
			drop table #selfChTemp
			drop table #sumSelfChTemp
			drop table #cashTemp1
			drop table #cashsTemp1
			drop table #selfCashTemp
			drop table #sumSelfCashTemp
			drop table #chsTemp1
			drop table #chTemp1
			drop table #feeTemp1
			drop table #targetTemp1
			drop table #winSTemp1
			drop table #winTemp1
			drop table #selfWTemp
			drop table #sumSelfWTemp
		end
		drop table #AgentTemp
		drop table #aTreeTemp
		drop table #ClntTemp
		drop table #IDTemp1
		drop table #proTemp1
		drop table #targetTemp 
		drop table #cFeeTemp
		drop table #feeTemp
		drop table #bFeeTemp
		drop table #cashsTemp
		drop table #cashTemp
		drop table #chsTemp
		drop table #chTemp
		]]>
	</sql>

	<sql id="BorrowAgent_Sum">
		<![CDATA[
			--第三方代理放分统计
			declare @StartDate nvarchar(40)
			declare @EndDate nvarchar(40)
			declare @SourceID nvarchar(40)
			declare @AgentID nvarchar(40)
			declare @Counts int
			declare @SumMoney numeric(18,4)
			declare @IsAgent int

			set @IsAgent = '${IsAgent}'
			select @SourceID = [Value] from T_Cfg where [Name] ='H5_BorrowerID'
			set @StartDate = '${StartDate}'-- '2018-03-01 07:00:00'
			set @EndDate ='${EndDate}'--'2018-06-25 07:00:00'		
			set @AgentID ='${AgentID}'

			select 
				 COUNT(*) couts
				,MIN(a.CreateTime) minCreaTime
				,MAX(a.CreateTime) maxCreaTime
			into #pointTemp
			from T_Point a ,T_Client b
			where  a.TargetID = b.ClientID and a.SourceID = @SourceID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql}

			insert #pointTemp

			select 
				 COUNT(*) couts
				,MIN(a.CreateTime) minCreaTime
				,MAX(a.CreateTime) maxCreaTime
			from T_Point_Archive a,T_Client b
			where a.TargetID = b.ClientID and a.SourceID = @SourceID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql}

			select 
				@SumMoney =ISNULL( SUM(Delta),0)
			from T_Point a,T_Client b
			where a.TargetID = b.ClientID and a.SourceID = @SourceID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql}

			select 
				@SumMoney +=ISNULL( SUM(Delta),0)
			from T_Point_Archive a,T_Client b
			where a.TargetID = b.ClientID and a.SourceID = @SourceID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql}

			if @IsAgent =1
			begin
				select 
					(select SUM(couts) from #pointTemp) Counts
					,@SumMoney SumMoney 
					,(select MIN(minCreaTime) from #pointTemp) StartDate
					,(select max(maxCreaTime) from #pointTemp) EndDate
					,AgentID A_ID
					,LogName A_BorrowUserID
					,AgentName A_BorrowName
				from T_Agent where AgentID = @AgentID
			end else
			begin
				select 
					(select SUM(couts) from #pointTemp) Counts
					,@SumMoney SumMoney 
					,(select MIN(minCreaTime) from #pointTemp) StartDate
					,(select max(maxCreaTime) from #pointTemp) EndDate
					,ClientID A_ID
					,LogName A_BorrowUserID
					,ClientName A_BorrowName
				from T_Client where ClientID = @AgentID
			end

			drop table #pointTemp
		]]>
	</sql>

	<sql id="H5ClntPoint_Sum">
		<![CDATA[
			--H5会员上下分合计
			declare @StartDate nvarchar(40)
			declare @EndDate nvarchar(40)
			declare @SourceID nvarchar(40)
			declare @Counts int
			declare @PageSize int
			declare @CurePage int

			select @SourceID = [Value] from T_Cfg where [Name] ='H5_BorrowerID'
			set @StartDate = '${StartDate}'
			set @EndDate ='${EndDate}'
			set @PageSize ='${pageSize}'
			set @CurePage ='${curePage}'

			select 
				TargetID
				,SUM(Delta) Delta
				,COUNT(TargetID) Counts
				,MIN(a.CreateTime) minCreaTime
				,MAX(a.CreateTime) maxCreaTime
			into #clntPoint
			from T_Point a,T_Client b
			where a.TargetID = b.ClientID and a.SourceID = @SourceID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql}
			group by TargetID

			insert #clntPoint

			select 
				TargetID
				,SUM(Delta) Delta
				,COUNT(TargetID) Counts
				,MIN(a.CreateTime) minCreaTime
				,MAX(a.CreateTime) maxCreaTime
			from T_Point_Archive a,T_Client b
			where a.TargetID = b.ClientID and a.SourceID = @SourceID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql}
			group by TargetID

			select  
				TargetID
				,SUM(Delta) Delta
				,SUM(Counts) Counts
				,MIN(minCreaTime) minCreaTime
				,MAX(maxCreaTime) maxCreaTime
			into #sumClntPoint
			from #clntPoint group by TargetID

			select top (@PageSize) *,(select COUNT(*) from #sumClntPoint ) TotalRecords from
			(
				select top (@PageSize*@CurePage) ROW_NUMBER() OVER(order by Delta desc) as rowNo 
					,* from 
				(		
					select 
						a.Counts
						,a.Delta
						,b.ClientID C_ID
						,b.LogName C_UserID
						,b.ClientName C_Name
						,c.AgentID C_AID
						,c.LogName C_OwnerUserID
						,c.AgentName C_OwnerName
						,minCreaTime StartDate
						,maxCreaTime EndDate
					from #sumClntPoint a left join  T_Client b on a.TargetID = b.ClientID
					left join T_Agent c on b.AgentID = c.AgentID
				)b
			)a where rowNo between (((@CurePage-1)*@PageSize)+1) and (@PageSize*@CurePage)
			order by Delta desc
			
			drop table #clntPoint
			drop table #sumClntPoint
		]]>
	</sql>

	<sql id="H5ClentPointDetail">
		<![CDATA[
			--H5会员上下分明细
			declare @StartDate nvarchar(40)
			declare @EndDate nvarchar(40)
			declare @SourceID nvarchar(40)
			declare @ClientID nvarchar(40)
			declare @PageSize int
			declare @CurePage int
			declare @totalRecords int

			select @SourceID = [Value] from T_Cfg where [Name] ='H5_BorrowerID'
			set @StartDate = '${StartDate}'
			set @EndDate ='${EndDate}'
			set @PageSize ='${pageSize}'
			set @CurePage ='${curePage}'
			set @ClientID='${ClientID}'
			
			set @totalRecords = (select count(*) from T_point where SourceID = @SourceID and TargetID = @ClientID and CreateTime between @StartDate and @EndDate and OperationType ='BD' ) +
								(select count(*) from T_Point_Archive where SourceID = @SourceID and TargetID = @ClientID and CreateTime between @StartDate and @EndDate and OperationType ='BD')			

			select top (@PageSize) *,@totalRecords TotalRecords from 
			(
				select top (@PageSize*@CurePage) ROW_NUMBER() OVER(order by C_CreTime desc) as rowNo
					,* from 
					(
						select 
							TargetID C_ID
							,TargetLogName C_UserID
							,TargetName C_Name
							,Delta
							,TargetBalance_B C_Balanc_B
							,TargetBalance_E C_Balanc_E
							,SourceID C_SrID
							,SourceLogName C_SrUserID
							,SourceName C_SrName
							,SourcePrincipal_B C_SrBalanc_B
							,SourcePrincipal_E C_SrBalanc_E
							,CreateTime C_CreTime
						from T_Point
						where SourceID = @SourceID and TargetID = @ClientID and CreateTime between @StartDate and @EndDate and OperationType ='BD' --${WhereSql}
 
						 union all
 
						select 
							TargetID C_ID
							,TargetLogName C_UserID
							,TargetName C_Name
							,Delta
							,TargetBalance_B C_Balanc_B
							,TargetBalance_E C_Balanc_E
							,SourceID C_SrID
							,SourceLogName C_SrUserID
							,SourceName C_SrName
							,SourcePrincipal_B C_SrBalanc_B
							,SourcePrincipal_E C_SrBalanc_E
							,CreateTime C_CreTime
						from T_Point_Archive
						where SourceID = @SourceID and TargetID = @ClientID and CreateTime between @StartDate and @EndDate and OperationType ='BD' --${WhereSql}
					)b
			)a where rowNo between (((@CurePage-1)*@PageSize)+1) and (@CurePage*@PageSize)
			order by C_CreTime desc
		]]>
	</sql>

	<sql id="H5ClentPointDetail_A">
		<![CDATA[
			--获取指定代理下所有H5会员第三方上分明细
			declare @StartDate nvarchar(40)
			declare @EndDate nvarchar(40)
			declare @SourceID nvarchar(40)
			declare @Counts int
			declare @PageSize int
			declare @CurePage int
			declare @totalRecords int

			select @SourceID = [Value] from T_Cfg where [Name] ='H5_BorrowerID'
			set @StartDate = '${StartDate}'
			set @EndDate ='${EndDate}'
			set @PageSize ='${pageSize}'
			set @CurePage ='${curePage}'
			
			set @totalRecords = (select count(*) from T_Point a,T_Client b 
						where SourceID = @SourceID and TargetID = b.ClientID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql} ) +
						(select count(*) from T_Point_Archive a,T_Client b 
						where SourceID = @SourceID and TargetID = b.ClientID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql} )
			
			select top (@PageSize) * 
				,@totalRecords TotalRecords from 
			(
				select top (@PageSize*@CurePage) ROW_NUMBER() OVER(order by C_CreTime desc) as rowNo
					,* from 
					(
						select 
							TargetID C_ID
							,TargetLogName C_UserID
							,TargetName C_Name
							,Delta
							,TargetBalance_B C_Balanc_B
							,TargetBalance_E C_Balanc_E
							,SourceID C_SrID
							,SourceLogName C_SrUserID
							,SourceName C_SrName
							,SourcePrincipal_B C_SrBalanc_B
							,SourcePrincipal_E C_SrBalanc_E
							,a.CreateTime C_CreTime
						from T_Point a,T_Client b
						where SourceID = @SourceID and TargetID = b.ClientID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql}
 
						union all
 
						select 
							TargetID C_ID
							,TargetLogName C_UserID
							,TargetName C_Name
							,Delta
							,TargetBalance_B C_Balanc_B
							,TargetBalance_E C_Balanc_E
							,SourceID C_SrID
							,SourceLogName C_SrUserID
							,SourceName C_SrName
							,SourcePrincipal_B C_SrBalanc_B
							,SourcePrincipal_E C_SrBalanc_E
							,a.CreateTime C_CreTime
						from T_Point_Archive a,T_Client b
						where SourceID = @SourceID and TargetID = b.ClientID and a.CreateTime between @StartDate and @EndDate and OperationType ='BD' ${WhereSql}
					)b
			)a where rowNo between (((@CurePage-1)*@PageSize)+1) and (@CurePage*@PageSize)
			order by C_CreTime desc
		]]>
	</sql>

	<sql id="RedEnvelopeSum">
		<![CDATA[
			--red envelope 红包管理
			declare @AgentID nvarchar(40)
			declare @StartDate nvarchar(40)
			declare @EndDate nvarchar(40)
			declare @PageSize int
			declare @CurePage int

			set @AgentID ='${AgentID}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}'
			set @PageSize ='${pageSize}'
			set @CurePage='${curePage}'

			select AgentID,LogName,AgentName into #IdTemp from T_Agent where AgentID = @AgentID or ParentID = @AgentID

			insert #IdTemp

			select ClientID,LogName,ClientName from T_Client where ClientID = @AgentID or AgentID = @AgentID

			select 
				OpID
				,SUM(OpCount) RedCounts
				,SUM(OpAmount) RedAmount
				,MIN(OpTime) FirstTime
				,MAX(OpTime) LastTime
			into #redSum
			from T_WeiTou_Op a, #IdTemp b
			where a.OpID = b.AgentID and OpTime between @StartDate and @EndDate
			group by a.OpID

			select 
				a.InviterID
				,COUNT(ClientID) regCount
			into #regSum
			from T_WeiTou_Detail a,#IdTemp b
			where a.InviterID = b.AgentID and a.cFlag ='REG' and a.cCeateTime between @StartDate and @EndDate
			group by a.InviterID

			select 
				b.OpID
				,SUM(b.OpAmount) OpAmount
			into #rebackRed
			from T_WeiTou_Detail a,T_WeiTou_Op b ,#IdTemp c
			where b.OpID = c.AgentID and a.OpID = b.SysID and (a.cFlag = 'PICKUP' or a.cFlag = 'YES' ) and a.cCeateTime between @StartDate and @EndDate
			group by b.OpID

			select 
				b.OpID
				,COUNT(a.OpID) AboCount
			into #aboCount
			from T_WeiTou_Detail a,T_WeiTou_Op b ,#IdTemp c
			where b.OpID = c.AgentID and a.OpID = b.SysID and a.cFlag = 'ABO' and a.cCeateTime between @StartDate and @EndDate
			group by b.OpID

			select top (@PageSize) *
				,(select COUNT(*) from #redSum where RedCounts >0) TotalRecords from 
			(
				select top (@PageSize*@CurePage) ROW_NUMBER() OVER(order by len(C_UserID) , RedCounts desc,RedAmount desc,RegCount desc) as rowNo
					,* from 
				(
					select 
						a.AgentID C_ID
						,a.AgentName C_Name --名称
						,a.LogName C_UserID --账号
						,b.FirstTime -- 首次红包时间
						,b.LastTime --尾次红包时间
						,b.OpID
						,b.RedAmount -- 红包总金额
						,ISNULL(b.RedCounts,0) RedCounts --红包总数
						,c.InviterID
						,ISNULL(c.RegCount,0) RegCount --成功激活数
						,ISNULL(d.OpAmount,0) RebackAmount --可回收红包金额 
						,ISNULL(e.AboCount,0) AboCount
					from #IdTemp a left join #redSum b on a.AgentID = b.OpID 
					left join #regSum c on a.AgentID = c.InviterID
					left join #rebackRed d on a.AgentID = d.OpID
					left join #aboCount e on a.AgentID = e.OpID
					where b.RedCounts >0
				)a
			)b where rowNo between (((@CurePage-1)*@PageSize)+1) and (@PageSize*@CurePage)
			order by len(C_UserID) , RedCounts desc,RedAmount desc,RegCount desc

			drop table #IdTemp
			drop table #regSum
			drop table #redSum
			drop table #rebackRed
			drop table #aboCount
		]]>
	</sql>

	<sql id="RedEnvelopeDetail">
		<![CDATA[
			--根据红包发放人查找红包明细
			declare @OpID nvarchar(40)
			declare @StartDate nvarchar(40)
			declare @EndDate nvarchar(40)
			declare @PageSize int
			declare @CurePage int

			set @OpID='${OpID}'
			set @StartDate='${StartDate}'
			set @EndDate ='${EndDate}'
			set @PageSize='${pageSize}'
			set @CurePage='${curePage}'

			select 
				a.ClientID
			into #ID
			from T_WeiTou_Detail a,T_WeiTou_Op b
			where a.OpID = b.SysID and b.OpID = @OpID and b.OpTime between @StartDate and @EndDate

			select 
				a.ClientID 
				,SUM(a.WinSum) WinSum
			into #win
			from T_BetBill a,#ID b
			where a.ClientID = b.ClientID and a.State='#PAY' and a.CreateTime between @StartDate and @EndDate
			group by a.ClientID

			insert #win

			select 
				a.ClientID 
				,SUM(a.WinSum) WinSum
			from T_BetBill_Archive a,#ID b
			where a.ClientID = b.ClientID and a.State='#PAY' and a.CreateTime between @StartDate and @EndDate
			group by a.ClientID

			select ClientID,SUM(WinSum) WinSum into #sumWin from #win group by ClientID

			select top (@PageSize) * 
				,(select COUNT(a.OpID) from T_WeiTou_Detail a,T_WeiTou_Op b where a.OpID = b.SysID and b.OpID = @OpID and b.OpTime between @StartDate and @EndDate ${WhereSql}) TotalRecords from
			(
				select top(@PageSize*@CurePage) ROW_NUMBER() OVER(order by cCeateTime desc) as rowNo
				 ,* from
				 (		
					select 
						a.ClientID C_ReID
						,a.logName C_ReUserID
						,c.ClientName C_ReName
						,a.cFlag
						,a.cAmount
						,a.cCeateTime
						,a.cPickupTime
						,a.cRegTime
						,a.cAboTime
						,b.OpID C_SendID
						,b.logName C_SendUserID
						,b.OpName C_SendName
						,ISNULL((select WinSum from #sumWin where ClientID = a.ClientID),0) C_TotalWin
					from T_WeiTou_Detail a,T_WeiTou_Op b,T_Client c
					where a.OpID = b.SysID and a.ClientID = c.ClientID and b.OpID = @OpID and b.OpTime between @StartDate and @EndDate ${WhereSql}
				 )t
			) b where rowNo between (((@CurePage-1)*@PageSize)+1) and (@PageSize*@CurePage)
			order by cCeateTime desc

			drop table #ID
			drop table #win
			drop table #sumWin
		]]>
	</sql>

	<sql id="GetAccounts">
		<![CDATA[
			declare @pageSize int
			declare @curePage int 
			declare @Operator nvarchar(100)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @curePage = '${curePage}'
			set @Operator = '${Operator}'
			set @pageSize = '${pageSize}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}';


			WITH AgentCTE (AgentID, ParentID, LogName,AgentName )AS(
			  SELECT a.AgentID, a.ParentID, a.LogName,a.AgentName FROM T_Agent a where a .LogName = @Operator
				UNION ALL
			  SELECT a.AgentID, a.ParentID,a.LogName,a.AgentName FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
			)


			SELECT TOP 
				(@pageSize) *
			From (
				SELECT TOP (@pageSize * @curePage) ROW_NUMBER() OVER (
				order by  A_Date desc)
				AS rowNo
				,*
			From 
				(
					select
							distinct BillID A_ID
							,Operator A_Op
							,(select AgentName from T_Agent where LogName= a.Operator) A_OpName
							,AccountSource A_Source
							,(select AgentName from T_Agent where LogName = a.AccountSource) A_SourceName
							,AccountDest A_AObj
							,(case when LEN(a.AccountDest) >7 then (select ClientName from T_Client where LogName = a.AccountDest) else (select AgentName from T_Agent where LogName = a.AccountDest) end) A_Name
							,AcAmount A_Amount
							,AcCount A_Count
							,AcRate A_WashR
							,AcType A_Type
							,AcQuantity A_WashS
							,StartDate A_Start
							,Enddate A_End
							,AcDate A_Date
							,AcState A_State
					from T_SettleAccount a,AgentCTE b
					where (Operator = b.LogName or AccountDest = b.LogName or AccountSource = @Operator) and AcDate between @StartDate and @EndDate ${WhereSql}
				) as b

			)as a
			WHERE rowNo BETWEEN (((@curePage - 1) * @pageSize) + 1)
			AND (@pageSize * @curePage)
			order by  A_Date desc
				
		]]>
	</sql>

	<sql id="GetAccountCount">
		<![CDATA[		
			declare @Operator nvarchar(100)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @Operator = '${Operator}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}';

			WITH AgentCTE (AgentID, ParentID, LogName )AS(
			  SELECT a.AgentID, a.ParentID, a.LogName FROM T_Agent a where a .LogName = @Operator
				UNION ALL
			  SELECT a.AgentID, a.ParentID,a.LogName FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
			)

			select
				distinct BillID
				,AcAmount A_SumAmount
				,AcQuantity A_WashS
			into #tempC
			from T_SettleAccount a,AgentCTE b
			where (Operator = b.LogName or AccountDest = b.LogName or AccountSource = @Operator) and AcDate between @StartDate and @EndDate ${WhereSql}					
			
			select 
				Count(BillID) TotalRecords
				,SUM(ISNULL(A_SumAmount,0)) A_SumAmount
				,SUM(ISNULL(A_WashS,0)) A_WashS
			from #tempC
			drop table #tempC
		]]>
	</sql>

	<sql id="GetAccountTotal">
		<![CDATA[		
			declare @Operator nvarchar(100)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)			

			set @Operator = '${Operator}'
			set @StartDate ='${StartDate}'
			set @EndDate ='${EndDate}';

			WITH AgentCTE (AgentID, ParentID, LogName )AS(
			  SELECT a.AgentID, a.ParentID, a.LogName FROM T_Agent a where a .LogName = @Operator
				UNION ALL
			  SELECT a.AgentID, a.ParentID,a.LogName FROM T_Agent a JOIN AgentCTE cte ON a .ParentID   = cte.AgentID
			)

			select
				Count(distinct BillID) TotalRecords
			from T_SettleAccount a,AgentCTE b
			where (Operator = b.LogName or AccountDest = b.LogName or AccountSource = @Operator) and AcDate between @StartDate and @EndDate ${WhereSql}					
		]]>
	</sql>

	<sql id="GetWashFandOdds">
		<![CDATA[
			--统计会员洗码费及抽水费结算情况
			declare @ClientID nvarchar(40)
			set @ClientID = '${ClientID}'
			
			-- 内部变量
			declare @lastDayDate nvarchar(20)
			declare @A nvarchar(20)
			declare @B nvarchar(20)

			--日期判断
			select @A = convert(varchar(20),getdate(),120)  --当前时间
			select @B = convert(varchar(11),getdate(),120) + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			if (@A >= @B) --如果当前时间大于今天归档时间，则取当天日期，否则取昨天日期
			begin
			   select @lastDayDate = convert(varchar(11),getdate(),120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --当天
			end else 
			begin
			   select @lastDayDate = convert(varchar(11),getdate()-1,120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --前一天
			end
			
			  --创建临时表
			select 
				ClientID C_ID
				,ClientName C_Name
				,LogName C_UserID
				,CAST('' as nvarchar(20)) C_LastWTime
				,@lastDayDate C_EndWTime --(Select CONVERT(varchar(100), GETDATE(), 120)) 
				,CAST('' as nvarchar(20)) C_LastOTime				
				,(Select CONVERT(varchar(100), GETDATE(), 120)) C_EndOTime
				,(Select CONVERT(varchar(100), GETDATE(), 120)) C_Date
				,CAST('' as nvarchar(32)) C_WashR
				,0 C_WashS
				,0 C_WashF
				,0 C_Count
				,0 C_Odds
				,'#NO' C_State
			into #Client
			from T_Client where ClientID = @ClientID

			--当前会员下未结算洗码费的注单号及时间
			select 
				BillID
				,CreateTime
				,count(*) counts
			into #wBillID
			from T_BetBill where ClientID = @ClientID and state ='#PAY' and CreateTime <= @lastDayDate and (WashBillID is null or WashBillID ='')
			 group by BillID,CreateTime

			insert #wBillID

			select 
				BillID
				,CreateTime
				,count(*) counts
			from T_BetBill_Archive where ClientID = @ClientID and state ='#PAY' and CreateTime <= @lastDayDate and (WashBillID is null or WashBillID ='') 
			group by BillID,CreateTime

			--更新上次结算时间
			update #Client set C_LastWTime = (select MIN(CreateTime) from #wBillID),C_Count = (select SUM(counts) from #wBillID)

			--合计洗码费
			select 
				distinct WashRate_Client WashRate
				,SUM(isnull(WashSum_Client,0))  WashSum
				,SUM(isnull(WashFee,0)) WashFee
			into #washF
			from T_BetBill a, #wBillID b where a.BillID = b.BillID 
			group by  WashRate_Client

			insert #washF

			select 
				distinct WashRate_Client WashRate
				,SUM(isnull(WashSum_Client,0))  WashSum
				,SUM(isnull(WashFee,0)) WashFee
			from T_BetBill_Archive a, #wBillID b where a.BillID = b.BillID group by  WashRate_Client

			--更新洗码费
			update #Client set C_WashF = isnull((select SUM(isnull(WashFee,0)) from #washF),0)
							  ,C_WashS = isnull((select SUM(isnull(WashSum,0)) from #washF),0)
							  ,C_WashR = (select stuff((
									select ','+CAST(WashRate as nvarchar(8))
									from #washF group by WashRate for xml path('')),1,1,''))
			
			select 
				top 2
				b.C_ID
				,b.C_Name
				,b.C_UserID
				,a.StartDate C_LastWTime
				,a.EndDate C_EndWTime
				,'' C_LastOTime				
				,'' C_EndOTime
				,a.AcDate C_Date
				,a.AcRate C_WashR
				,a.AcQuantity C_WashS
				,a.AcAmount C_WashF
				,a.AcCount C_Count
				,0 C_Odds
				,a.AcState C_State
			into #lastT
			from T_SettleAccount a,#Client b 
			where (a.AccountSource = b.C_UserID or a.AccountDest = b.C_UserID) and a.AcType = '结算洗码费'
			order by AcDate desc

			select * from #Client

			union all

			select * from #lastT

			drop table #Client
			drop table #wBillID
			drop table #washF
			drop table #lastT			
		]]>
	</sql>

	<sql id="SettleWashF">
		<![CDATA[				
			--结算会员洗码费
			declare @CreateID nvarchar(40) 
			declare @ClientID nvarchar(40)       --会员ID@
			declare @BillID nvarchar(40) 
			declare @AgentID nvarchar(40) 
			declare @Counts int   
			declare @Point int   
			declare @WashRate nvarchar(32)
			declare @WashSum decimal(18, 4)
			declare @IP nvarchar(40)
			declare @Operator nvarchar(10)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)
			declare @IsStand nvarchar(20)  -- 洗补点模式
			declare @AgentPrincipalSource numeric(20,4)   --代理之前剩余点数

			set @IsStand ='NO'
			set @CreateID ='${CreateID}'
			set @ClientID ='${ClientID}'
			set @BillID ='${BillID}'
			set @Counts= '${Counts}'
			set @Point= '${Point}'
			set @WashRate= '${WashRate}'
			set @WashSum= '${WashSum}'
			set @IP = '${IP}'
			set @Operator ='${Operator}'
			set @StartDate = '${StartDate}'
			set @EndDate = '${EndDate}' 

			declare @TargetLogName nvarchar(100) 
			declare @TargetName nvarchar(100)
			declare @AgentName nvarchar(100)
			declare @LogName nvarchar(100)
			--declare @Principal int  
			declare @Balance int
			declare @ClientPreState nvarchar(10) -- 会员之前状态

			--取记帐日期
			declare @xTime  nvarchar(8)
			declare @yTime  nvarchar(8)
			declare @StatisticsDay nvarchar(10)
			select @IsStand =[Value] From T_Cfg where [Name] ='Use_StandPoint'
			select @xTime = substring( convert(nvarchar(20), getdate(),120),12,9)
			select @yTime = [Value] from T_cfg where [Name]='Use_WORKTIME_START'
			if @xTime >= @yTime
			begin   --大于12点
				select @StatisticsDay = convert(nvarchar(10), getdate(),120) 
			end else
			begin  --小于12点
				select @StatisticsDay = convert(nvarchar(10), getdate()-1,120)  
			end

			--获取当前会员信用点数及剩余点数@Principal = Principal, 
			select @AgentID = AgentID, @Balance = ISNULL(Balance,0), @ClientPreState = State,@TargetLogName=LogName ,@TargetName =ClientName  from T_Client 
			where ClientID = @ClientID

			select @AgentName = AgentName ,@LogName = LogName,@AgentPrincipalSource=ISNULL(Principal,0)  from T_Agent where AgentID  = @AgentID

			if @IsStand ='YES'
				begin
				--标准模式
					if @Point > @AgentPrincipalSource
					begin
						raiserror('转分数超过代理剩余点数！', 16, 1)
						return
					end
					-- 设置会员为暂停状态（限制会员交易）
					update T_Client set
					State = 'PAUSE'
					where ClientID = @ClientID

					-- 更新会员信用点数及剩余点数
					update T_Client set
					Balance = ISNULL(Balance,0) + @Point,
					Principal = ISNULL(Principal,0) + @Point
					where ClientID = @ClientID

					--更新代理点数
					update T_Agent set
					Principal = ISNULL(Principal,0) - @Point
					where AgentID = @AgentID

					-- 恢复会员状态
					update T_Client set
					State = @ClientPreState
					where ClientID = @ClientID

				end else
				begin
				--非标准模式
					if @Point > @AgentPrincipalSource
					begin
						raiserror('转分数超过代理剩余点数！', 16, 1)
						return
					end
					-- 设置会员为暂停状态（限制会员交易）
					update T_Client set
					State = 'PAUSE'
					where ClientID = @ClientID

					-- 更新会员信用点数及剩余点数
					update T_Client set
					Balance = ISNULL(Balance,0) + @Point
					where ClientID = @ClientID

					--更新代理点数
					update T_Agent set
					Principal = ISNULL(Principal,0) - @Point
					where AgentID = @AgentID

					-- 恢复会员状态
					update T_Client set
					State = @ClientPreState
					where ClientID = @ClientID
				end
			--写入日志
			INSERT INTO T_Point
						(
							[PointID]
							,[CreateID]
							,[CreateTime]
							,[Delta]
							,[SourceID]
							,[SourcePrincipal_B]
							,[SourcePrincipal_E]
							,[TargetID]
							,[TargetBalance_B]
							,[TargetBalance_E]
							,[OperationType]
							,[IP]
							,[Address]
							,[IPLocal]
							,[SourceLogName]
							,[SourceName]
							,[TargetLogName]
							,[TargetName]
							,[StatisticsDay]
							,[Memo]
						)                  
				VALUES (
							--replace(convert(varchar(36),newid()),'-','')
							@BillID
							,@CreateID
							,convert(nvarchar(20),getdate(),120)
							,@Point
							,@AgentID
							,@AgentPrincipalSource
							,@AgentPrincipalSource - @Point
							,@ClientID
							,@Balance
							,@Balance + @Point
							,'BD'    -- 补BD                  
							,@IP
							,@IP
							,@IP
							,@LogName
							,@AgentName
							,@TargetLogName
							,@TargetName
							,@StatisticsDay
							,'会员结算洗码费到本身'
						)
				--插入结算日志
				INSERT INTO T_SettleAccount
							(
								[BillID]
								,[Operator]
								,[AccountSource]
								,[AccountDest]
								,[AcCount]
								,[AcAmount]
								,[AcRate]
								,[AcQuantity]
								,[AcType]
								,[StartDate]
								,[Enddate]
								,[AcDate]		
								,[AcState]					
							)                  
					VALUES (
								--replace(convert(varchar(36),newid()),'-','')
								@BillID
								,@Operator
								,@LogName
								,@TargetLogName
								,@Counts
								,@Point
								,@WashRate
								,@WashSum
								,'结算洗码费'
								,@StartDate
								,@EndDate
								,(Select CONVERT(varchar(100), GETDATE(), 120))
								,'#YES'
							)

			select '-1' as ErrorCode 
		]]>
	</sql>

	<sql id="SetWashFlag">
		<![CDATA[
			--将指定会员从某个时间点开始的洗码费标记未已结算
			declare @ClientID nvarchar(40)
			declare @BillID nvarchar(40)
			declare @SettleDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @ClientID = '${ClientID}' --'45afea0887644b56a743a7b897e988fd'--
			set @SettleDate ='${SettleDate}'--'2018-03-19 15:29:50' --
			set @BillID = '${BillID}'
			set @EndDate = '${EndDate}'
			
			-- 内部变量
			declare @B nvarchar(20)

			--日期判断
			select @B = convert(varchar(11),getdate(),120) + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			if (@EndDate >= @B) --如果当前时间大于今天归档时间，则取当天日期，否则取昨天日期
			begin
			   select @EndDate = convert(varchar(11),getdate(),120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --当天
			end else 
			begin
			   select @EndDate = convert(varchar(11),getdate()-1,120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --前一天
			end	
			
			update T_BetBill set WashBillID =@BillID 
			where ClientID = @ClientID and  state ='#PAY' and CreateTime between @SettleDate and @EndDate and (WashBillID is null or WashBillID ='')

			update T_BetBill_Archive set WashBillID =@BillID 
			where ClientID = @ClientID and  state ='#PAY' and CreateTime between @SettleDate and @EndDate and (WashBillID is null or WashBillID ='')
			
			select 
				 WashRate_Client 
				,count(WashBillID) Counts 
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum	
			into #AcT
			from T_BetBill 
			where WashBillID =@BillID  and   state ='#PAY' 
			group by  WashBillID,WashRate_Client

			insert #AcT

			select 
				 WashRate_Client 
				,count(WashBillID) Counts 
				,SUM(WashFee) WashFee
				,SUM(WashSum_Client) WashSum	
			from T_BetBill_Archive 
			where WashBillID = @BillID  and   state ='#PAY' 
			group by  WashBillID,WashRate_Client

			select
				(select SUM(ISNULL(Counts,0)) from #AcT) C_Counts
				,(select SUM(ISNULL(WashFee,0)) from #AcT) C_Amount
				,(select SUM(ISNULL(WashSum,0)) from #AcT) C_WashS
				,(select stuff(
								(
									select ','+CAST(WashRate_Client as nvarchar(8))
									from #AcT group by WashRate_Client for xml path('')),1,1,''
								)
				)  C_WashR			

			drop table #AcT
		]]>
	</sql>

	<sql id="GetACOdds4Agent">
		<![CDATA[
			--统计代理抽水费结算情况
			declare @AgentID nvarchar(40)
			set @AgentID ='${AgentID}'

			-- 内部变量
			declare @lastDayDate nvarchar(20)
			declare @A nvarchar(20)
			declare @B nvarchar(20)

			--日期判断
			select @A = convert(varchar(20),getdate(),120)  --当前时间
			select @B = convert(varchar(11),getdate(),120) + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			if (@A >= @B) --如果当前时间大于今天归档时间，则取当天日期，否则取昨天日期
			begin
			   select @lastDayDate = convert(varchar(11),getdate(),120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --当天
			end else 
			begin
			   select @lastDayDate = convert(varchar(11),getdate()-1,120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --前一天
			end

			--创建未结洗码费的代理临时表
			select 
				AgentID A_ID
				,AgentName A_Name
				,LogName A_UserID
				,CAST('' as nvarchar(20)) A_LastTime				
				,@lastDayDate A_EndTime --(Select CONVERT(varchar(100), GETDATE(), 120))
				,(Select CONVERT(varchar(100), GETDATE(), 120)) A_Date
				,CAST('' as nvarchar(32)) A_WashR	
				,0 A_WashS			
				,0 A_Count
				,0 A_Amount
				,'#NO' A_State
				,'结算洗码费' A_Type
			into #aWashF_No
			from T_Agent where AgentID = @AgentID		

			--计算未结算洗码费的最早时间
			declare @LastTime nvarchar(20)

			set @LastTime =''

			select 
				top 1 @LastTime = CreateTime
			from T_BetBill_Archive a,T_BetBill_Wash_Archive b 
			where b.AgentID = @AgentID and a.BillID =b.BillID and a.CreateTime <= @lastDayDate and
			(b.WashBillID is null or b.WashBillID='')
			order by CreateTime

			if LEN(@LastTime) = 0
			begin
				select 
					top 1 @LastTime = CreateTime
				from T_BetBill a,T_BetBill_Wash b 
				where b.AgentID = @AgentID and a.BillID =b.BillID and a.CreateTime <= @lastDayDate 
				and (b.WashBillID is null or b.WashBillID='')
				order by CreateTime
			end

			update #aWashF_No set A_LastTime = @LastTime

			--计算未结洗码费
			select 
				distinct a.WashRate
				,COUNT(*) Counts
				,SUM(ISNULL(a.WashSum,0)) WashSum
				,SUM(ISNULL(a.WashFee,0)) WashFee
			into #washF
			from T_BetBill_Wash a,T_BetBill b
			where a.AgentID = @AgentID and (a.WashBillID is null or a.WashBillID='') 
			and a.BillID =b.BillID and b.CreateTime <= @lastDayDate and b.State ='#PAY' 
			group by WashRate

			insert #washF

			select 
				distinct a.WashRate
				,COUNT(*) Counts
				,SUM(ISNULL(a.WashSum,0)) WashSum
				,SUM(ISNULL(a.WashFee,0)) WashFee
			from T_BetBill_Wash_Archive a,T_BetBill_Archive b 
			where a.AgentID = @AgentID and (a.WashBillID is null or a.WashBillID='') and a.BillID =b.BillID 
			and b.CreateTime <= @lastDayDate  and b.State ='#PAY'
			group by WashRate

			update #aWashF_No set A_Count =isnull((select SUM( ISNULL(Counts,0)) from #washF),0)
								,A_WashS = isnull((select SUM( ISNULL(WashSum,0)) from #washF),0)
								,A_Amount = isnull((select SUM( ISNULL(WashFee,0)) from #washF),0)
								,A_WashR = (
												select stuff((
													select ','+CAST(WashRate as nvarchar(8))
												from #washF group by WashRate for xml path('')),1,1,'')
											)

			--创建未结抽水的代理临时表
			select 
				AgentID A_ID
				,AgentName A_Name
				,LogName A_UserID
				,CAST('' as nvarchar(20)) A_LastTime				
				,@lastDayDate A_EndTime
				,(Select CONVERT(varchar(100), GETDATE(), 120)) A_Date
				,CAST('' as nvarchar(32)) A_WashR	
				,0 A_WashS		
				,0 A_Count
				,0 A_Amount
				,'#NO' A_State
				,'结算抽水' A_Type
			into #Client
			from T_Agent where AgentID = @AgentID			

			--当前代理下未结算抽水的注单及时间
			select 
				a.BillID
				,b.CreateTime
				,a.ChouShui
			into #oBillID
			from T_BetBill_Wash a ,T_BetBill b
			where a.AgentID = @AgentID and a.BillID = b.BillID and b.State ='#PAY' and b.CreateTime <= @lastDayDate 
			and (a.OddsBillID is null or a.OddsBillID ='')

			insert #oBillID

			select 
				a.BillID
				,b.CreateTime
				,a.ChouShui
			from T_BetBill_Wash_Archive a, T_BetBill_Archive b
			where a.AgentID = @AgentID and  a.BillID = b.BillID and b.State ='#PAY' and b.CreateTime <= @lastDayDate 
			and (a.OddsBillID is null or a.OddsBillID ='')

			--更新上次结算抽水时间
			update #Client set A_LastTime = (select MIN(CreateTime) from #oBillID)
								,A_Count = (select COUNT(*) from #oBillID)
								,A_Amount = isnull((select SUM(isnull(ChouShui,0)) from #oBillID),0)
				
			select 
				top 2
				b.A_ID
				,b.A_Name
				,b.A_UserID
				,StartDate A_LastTime				
				,Enddate A_EndTime
				,a.AcDate A_Date
				,a.AcRate A_WashR
				,a.AcQuantity A_WashS
				,a.AcCount A_Count
				,AcAmount A_Amount
				,a.AcState A_State
				,a.AcType A_Type
			into #lastT
			from T_SettleAccount a,#Client b 
			where  a.AccountDest = b.A_UserID --and a.AcType = '结算抽水费'
			order by AcDate desc

			select * from #aWashF_No

			union all

			select * from #Client

			union all

			select * from #lastT

			drop table #Client
			drop table #oBillID
			drop table #lastT	
			drop table #washF
			drop table #aWashF_No
		]]>
	</sql>

	<sql id="SetOddsFlag">
		<![CDATA[
			--将指定代理从某个时间点开始的抽水标记未已结算
			declare @AgentID nvarchar(40)
			declare @BillID nvarchar(40)
			declare @SettleDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID = '${AgentID}' --'45afea0887644b56a743a7b897e988fd'--
			set @SettleDate ='${SettleDate}'--'2018-03-19 15:29:50' --
			set @BillID = '${BillID}'
			set @EndDate = '${EndDate}'			
			
			-- 内部变量
			declare @B nvarchar(20)

			--日期判断
			select @B = convert(varchar(11),getdate(),120) + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			if (@EndDate >= @B) --如果当前时间大于今天归档时间，则取当天日期，否则取昨天日期
			begin
			   select @EndDate = convert(varchar(11),getdate(),120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --当天
			end else 
			begin
			   select @EndDate = convert(varchar(11),getdate()-1,120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --前一天
			end	
			
			update a set OddsBillID = @BillID
			from T_BetBill_Wash a,T_BetBill b
			where a.AgentID = @AgentID and (a.OddsBillID is null or a.OddsBillID ='') and a.BillID = b.BillID
			and b.CreateTime between @SettleDate and @EndDate and b.State ='#PAY'
			
			update a set OddsBillID = @BillID
			from T_BetBill_Wash_Archive a, T_BetBill_Archive b
			where a.AgentID = @AgentID and (a.OddsBillID is null or a.OddsBillID ='') and a.BillID = b.BillID
			and b.CreateTime between @SettleDate and @EndDate and b.State ='#PAY'
			
			select 
				COUNT(*) Counts
				,SUM(ChouShui) ChouShui
			into #AcT
			from T_BetBill_Wash where OddsBillID = @BillID

			insert #AcT

			select 
				COUNT(*) Counts
				,SUM(ChouShui) ChouShui
			from T_BetBill_Wash_Archive where OddsBillID = @BillID

			select 
				(select (SUM(Counts)) from #AcT) C_Counts
				,(select SUM(isnull(ChouShui,0)) from #AcT) C_Amount

			drop table #AcT
		]]>
	</sql>

	<sql id="SettleOddsOrWashF4Agent">
		<![CDATA[
			--结算代理抽水或洗码
			declare @CreateID nvarchar(40) 
			declare @AgentID nvarchar(40)       --会员ID@
			declare @BillID nvarchar(40) 
			declare @ParentID nvarchar(40) 
			declare @Counts int   
			declare @Point int   
			declare @WashRate nvarchar(32)
			declare @WashSum decimal(18, 4)
			declare @IP nvarchar(40)
			declare @Operator nvarchar(10)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)
			declare @Type nvarchar(100)

			declare @AgentPrincipalSource numeric(20,4)   --代理之前剩余点数

			set @CreateID ='${CreateID}'
			set @AgentID ='${AgentID}'
			set @BillID ='${BillID}'
			set @Counts= '${Counts}'
			set @Point= '${Point}'
			set @WashRate= '${WashRate}'
			set @WashSum= '${WashSum}'
			set @IP = '${IP}'
			set @Operator ='${Operator}'
			set @StartDate = '${StartDate}'
			set @EndDate = '${EndDate}' 
			set @Type = '${Type}'

			declare @TargetLogName nvarchar(100) 
			declare @TargetName nvarchar(100)
			declare @AgentName nvarchar(100)
			declare @LogName nvarchar(100)
			--declare @Principal int  
			declare @Balance int
			declare @AgentPreState nvarchar(10) -- 会员之前状态

			--取记帐日期
			declare @xTime  nvarchar(8)
			declare @yTime  nvarchar(8)
			declare @StatisticsDay nvarchar(10)

			select @xTime = substring( convert(nvarchar(20), getdate(),120),12,9)
			select @yTime = [Value] from T_cfg where [Name]='Use_WORKTIME_START'
			if @xTime >= @yTime
			begin   --大于12点
				select @StatisticsDay = convert(nvarchar(10), getdate(),120) 
			end else
			begin  --小于12点
				select @StatisticsDay = convert(nvarchar(10), getdate()-1,120)  
			end

			--获取当前会员信用点数及剩余点数@Principal = Principal, 
			select @ParentID = ParentID, @Balance = ISNULL(Principal,0), @AgentPreState = State,@TargetLogName=LogName ,@TargetName =AgentName  from T_Agent 
			where AgentID = @AgentID

			select @AgentName = AgentName ,@LogName = LogName,@AgentPrincipalSource =ISNULL(Principal,0)  from T_Agent where AgentID  = @ParentID

			 if @Point <= @AgentPrincipalSource
			 begin
				-- 设置代理为暂停状态
				update T_Agent set
				State = 'PAUSE'
				where AgentID = @AgentID

				-- 更新当前代理剩余点数
				update T_Agent set 
				Principal = ISNULL(Principal,0) + @Point
				where AgentID = @AgentID

				-- 更新上级代理剩余点数
				update T_Agent set 
				Principal =ISNULL( Principal,0) - @Point
				where AgentID = @ParentID   

				-- 恢复代理状态
				update T_Agent set
				State = @AgentPreState
				where AgentID = @AgentID			
			end else
			 begin
				 raiserror('转分数超出上级代理余额！', 16, 1)
				 return
			  end
			
			 
			--写入日志
			INSERT INTO T_Point
						(
							[PointID]
							,[CreateID]
							,[CreateTime]
							,[Delta]
							,[SourceID]
							,[SourcePrincipal_B]
							,[SourcePrincipal_E]
							,[TargetID]
							,[TargetBalance_B]
							,[TargetBalance_E]
							,[OperationType]
							,[IP]
							,[Address]
							,[IPLocal]
							,[SourceLogName]
							,[SourceName]
							,[TargetLogName]
							,[TargetName]
							,[StatisticsDay]
							,[Memo]
						)                  
				VALUES (
							--replace(convert(varchar(36),newid()),'-','')
							@BillID
							,@CreateID
							,convert(nvarchar(20),getdate(),120)
							,@Point
							,@ParentID
							,@AgentPrincipalSource
							,@AgentPrincipalSource - @Point
							,@AgentID
							,@Balance
							,@Balance + @Point
							,'BD'    -- 补BD                  
							,@IP
							,@IP
							,@IP
							,@LogName
							,@AgentName
							,@TargetLogName
							,@TargetName
							,@StatisticsDay
							,@Type
						)
				--插入结算日志
				INSERT INTO T_SettleAccount
							(
								[BillID]
								,[Operator]
								,[AccountSource]
								,[AccountDest]
								,[AcCount]
								,[AcRate]
								,[AcQuantity]
								,[AcAmount]								
								,[AcType]
								,[StartDate]
								,[Enddate]
								,[AcDate]		
								,[AcState]					
							)                  
					VALUES (
								--replace(convert(varchar(36),newid()),'-','')
								@BillID
								,@Operator
								,@LogName
								,@TargetLogName
								,@Counts
								,@WashRate
								,@WashSum
								,@Point
								,@Type
								,@StartDate
								,@EndDate
								,(Select CONVERT(varchar(100), GETDATE(), 120))
								,'#YES'
							)

			select '-1' as ErrorCode 
		]]>
	</sql>

	<sql id="SetWashFlag4Agent">
		<![CDATA[
			--将指定代理的洗码标记未已结算
			declare @AgentID nvarchar(40)
			declare @BillID nvarchar(40)
			declare @StarteDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @AgentID = '${AgentID}' --'45afea0887644b56a743a7b897e988fd'--
			set @BillID = '${BillID}'
			set @StarteDate ='${StarteDate}'
			set @EndDate = '${EndDate}'
			
			-- 内部变量
			declare @B nvarchar(20)

			--日期判断
			select @B = convert(varchar(11),getdate(),120) + value from t_cfg where name = 'Use_WORKTIME_START' --归档时间
			if (@EndDate >= @B) --如果当前时间大于今天归档时间，则取当天日期，否则取昨天日期
			begin
			   select @EndDate = convert(varchar(11),getdate(),120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --当天
			end else 
			begin
			   select @EndDate = convert(varchar(11),getdate()-1,120)+ value from t_cfg where name = 'Use_WORKTIME_START'  --前一天
			end	

			update a set WashBillID = @BillID
			from T_BetBill_Wash a,T_BetBill b
			where a.AgentID = @AgentID and (a.WashBillID is null or a.WashBillID = '') 
			and a.BillID = b.BillID and b.CreateTime between @StarteDate and @EndDate and b.State ='#PAY'

			update a set WashBillID = @BillID 
			from T_BetBill_Wash_Archive a,T_BetBill_Archive b
			where a.AgentID = @AgentID and (a.WashBillID is null or a.WashBillID = '')
			and a.BillID = b.BillID and b.CreateTime between @StarteDate and @EndDate and b.State ='#PAY'

			select 
				WashRate
				,COUNT(WashBillID) Counts
				,SUM(WashSum) WashSum
				,SUM(WashFee) WashFee
			into #AcT
			from T_BetBill_Wash where WashBillID = @BillID group by WashRate

			insert #AcT

			select 
				WashRate
				,COUNT(WashBillID) Counts
				,SUM(WashSum) WashSum
				,SUM(WashFee) WashFee
			from T_BetBill_Wash_Archive where WashBillID = @BillID group by WashRate

			select
				(select SUM(ISNULL(Counts,0)) from #AcT) C_Counts
				,(select SUM(ISNULL(WashFee,0)) from #AcT) C_Amount
				,(select SUM(ISNULL(WashSum,0)) from #AcT) C_WashS
				,(select stuff(
								(
									select ','+CAST(WashRate as nvarchar(8))
									from #AcT group by WashRate for xml path('')),1,1,'')
				)  C_WashR

			drop table #AcT
		]]>
	</sql>

	<sql id="TransactionLogPage">
		<![CDATA[
			--获取交易记录
			declare @TotalRecords int
			declare @Operator nvarchar(40)
			declare @PageSize int
			declare @CurePage int
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @Operator ='${Operator}'
			set @PageSize ='${PageSize}'
			set @CurePage = '${CurePage}'
			set @StartDate ='${StartDate}'
			set @EndDate = '${EndDate}'


			;WITH AgentCTE (AgentID, ParentID, LogName,AgentName )AS( 
				SELECT a.AgentID, a.ParentID, a.LogName,a.AgentName FROM T_Agent a where a.LogName = @Operator
				UNION ALL
				SELECT a.AgentID, a.ParentID, a.LogName,a.AgentName FROM T_Agent a JOIN AgentCTE cte ON a.ParentID = cte.AgentID
			)
			select
				LogID L_ID
				,OpReason L_OpReason
				,UserID L_UserID
				,UserName L_UserName
				,TransactionPoint L_TPoint
				,SourceUser L_SourceUser
				,(select AgentName from T_Agent where LogName = a.SourceUser) L_SourceName
				,SoureInto L_SoureInto
				,RealInto L_RealInto
				,RealPoint L_RealPoint
				,TransactionPoint_B L_TPoint_B
				,TransactionPoint_E L_TPoint_E
				,OpTime L_OpTime
				,Operator L_Operator
				,OpInfo L_OpInfo
				,IP L_IP
				,Address L_Address
				,Remark L_Remark
				,F_1 L_F_1
				,F_2 L_F_2
				,(select AgentName from T_Agent where LogName = a.Operator) L_OperatorName 
				,OperatorID L_OperatorID 
			into #log
			from T_TransactionLog a,AgentCTE b 
			where a.SourceUser = b.LogName and OpTime between @StartDate and @EndDate ${WhereSql}

			select @TotalRecords = COUNT(*) from #log

			SELECT TOP(@PageSize) *
				from (
					select top(@PageSize*@CurePage) ROW_NUMBER() over(order by L_OpTime desc) as rowNo
					,@TotalRecords TotalRecords
					,*
					from #log
				)a where rowNo between (((@CurePage - 1) * @PageSize) + 1) AND (@PageSize * @CurePage) order by  L_OpTime desc

			drop table #log
		]]>
	</sql>

	<sql id="TransactionSum">
		<![CDATA[
			--交易合计
			declare @Operator nvarchar(40)
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @Operator ='${Operator}'
			set @StartDate ='${StartDate}'
			set @EndDate = '${EndDate}'


			;WITH AgentCTE (AgentID, ParentID, LogName,AgentName )AS( 
				SELECT a.AgentID, a.ParentID, a.LogName,a.AgentName FROM T_Agent a where a.LogName = @Operator
				UNION ALL
				SELECT a.AgentID, a.ParentID, a.LogName,a.AgentName FROM T_Agent a JOIN AgentCTE cte ON a.ParentID = cte.AgentID
			)
			select
				LogID L_ID
				,OpReason L_OpReason
				,UserID L_UserID
				,UserName L_UserName
				,TransactionPoint L_TPoint
				,SourceUser L_SourceUser
				,(select AgentName from T_Agent where LogName = a.SourceUser) L_SourceName
				,SoureInto L_SoureInto
				,RealInto L_RealInto
				,RealPoint L_RealPoint
				,TransactionPoint_B L_TPoint_B
				,TransactionPoint_E L_TPoint_E
				,OpTime L_OpTime
				,Operator L_Operator
				,OpInfo L_OpInfo
				,IP L_IP
				,Address L_Address
				,Remark L_Remark
				,F_1 L_F_1
				,F_2 L_F_2
				,(select AgentName from T_Agent where LogName = a.Operator) L_OperatorName 
				,OperatorID L_OperatorID 
			into #log
			from T_TransactionLog a,AgentCTE b 
			where a.SourceUser = b.LogName and OpTime between @StartDate and @EndDate ${WhereSql}
			
			select SUM(ISNULL(L_TPoint,0)) L_TPoint,SUM(ISNULL(L_RealInto,0)) L_RealInto,SUM(ISNULL(L_RealPoint,0)) L_RealPoint from #log 
			
			drop table #log
		]]>
	</sql>

	<sql id="LoginLog">
		<![CDATA[
			declare @TotalRecords int
			declare @PageSize int
			declare @CurePage int
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @PageSize ='${PageSize}'
			set @CurePage = '${CurePage}'
			set @StartDate ='${StartDate}'
			set @EndDate = '${EndDate}'

			select @TotalRecords = COUNT(*) from T_LoginLog where LoginTime between @StartDate and @EndDate ${WhereSql}

			SELECT TOP(@PageSize) *
				 From( 
				 SELECT TOP(@PageSize*@CurePage) ROW_NUMBER() OVER(order by L_Time desc ) as rowNo,* 
					from (
						select @TotalRecords TotalRecords
							,LogID L_ID
							,UserLevel L_ULevel
							,ParentAgent L_PAgent
							,LoginIP L_IP
							,LoginAddre L_Addre
							,LoginTime L_Time
							,ReMark L_ReMark
							,F_1 L_F_1
							,LoginUser L_User
						from T_LoginLog where LoginTime between @StartDate and @EndDate ${WhereSql}
				)a
			)b where rowNo between (((@CurePage - 1) * @PageSize) + 1) AND (@PageSize * @CurePage) order by  L_Time desc
		]]>
	</sql>

	<sql id="OperationLog">
		<![CDATA[
			declare @TotalRecords int
			declare @PageSize int
			declare @CurePage int
			declare @StartDate nvarchar(20)
			declare @EndDate nvarchar(20)

			set @PageSize ='${PageSize}'
			set @CurePage = '${CurePage}'
			set @StartDate ='${StartDate}'
			set @EndDate = '${EndDate}'

			select @TotalRecords = COUNT(*) from T_OperationLog where LogTime between @StartDate and @EndDate ${WhereSql}

			SELECT TOP(@PageSize) *
				 From( 
				 SELECT TOP(@PageSize*@CurePage) ROW_NUMBER() OVER(order by LogTime desc ) as rowNo,* 
					from (
						select @TotalRecords TotalRecords
							,LogID
							,LogTime
							,LogType
							,LogInfo
							,OpID
							,F1
							,F2
							,F3
						  from T_OperationLog where LogTime between @StartDate and @EndDate ${WhereSql}
					)a
				)b where rowNo between (((@CurePage - 1) * @PageSize) + 1) AND (@PageSize * @CurePage) order by  LogTime desc
		]]>
	</sql>

	<sql id="GetAIDList">
		<![CDATA[
			declare @AgentID nvarchar(40)
			set @AgentID = '${AgentID}'

			;WITH AgentCTE (AgentID,LogName, ParentID, Level, Principal )AS(
				SELECT a.AgentID,a.LogName, a.ParentID, 0, a.Principal FROM T_Agent a where a .AgentID = @AgentID
				UNION ALL
				SELECT a.AgentID,a.LogName, a.ParentID,  cte.Level+1,a.Principal FROM T_Agent a JOIN AgentCTE cte ON a .ParentID = cte.AgentID  where a.IsHide ='FALSE' 	
			)
			
			select AgentID into #id from AgentCTE

			select AgentID from #id 
			union
			select ClientID from #id  a , T_Client b   where b.IsHide ='FALSE' and a.AgentID = b.AgentID and LEN(b.LogName) <> 9

			drop table #id
		]]>
	</sql>
	
</Templates>
